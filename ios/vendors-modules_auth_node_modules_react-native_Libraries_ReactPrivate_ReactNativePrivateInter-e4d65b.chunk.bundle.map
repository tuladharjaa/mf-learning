{"version":3,"file":"vendors-modules_auth_node_modules_react-native_Libraries_ReactPrivate_ReactNativePrivateInter-e4d65b.chunk.bundle","mappings":"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","sources":["webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityManager.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/AccessibilityInfo/legacySendAccessibilityEvent.ios.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Core/RawEventEmitter.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Core/ReactFiberErrorDialog.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Events/CustomEvent.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Events/EventPolyfill.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricHostComponent.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack:///../../modules/auth/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","webpack:///../../modules/auth/node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack:///../../modules/auth/node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js","webpack:///../../modules/auth/node_modules/react-native/src/private/featureflags/specs/NativeReactNativeFeatureFlags.js","webpack:///../../modules/auth/node_modules/react-native/src/private/specs/modules/NativeAccessibilityManager.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/geometry/DOMRect.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/ReactNativeElement.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyCharacterData.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyText.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js","webpack:///../../modules/auth/node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeAccessibilityManager';\nimport NativeAccessibilityManager from '../../../src/private/specs/modules/NativeAccessibilityManager';\nexport default NativeAccessibilityManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeAccessibilityManager from './NativeAccessibilityManager';\n\n/**\n * This is a function exposed to the React Renderer that can be used by the\n * pre-Fabric renderer to emit accessibility events to pre-Fabric nodes.\n */\nfunction legacySendAccessibilityEvent(\n  reactTag: number,\n  eventType: string,\n): void {\n  if (eventType === 'focus' && NativeAccessibilityManager) {\n    NativeAccessibilityManager.setAccessibilityFocus(reactTag);\n  }\n}\n\nmodule.exports = legacySendAccessibilityEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {\n  ColorValue,\n  TextStyleProp,\n  ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  Double,\n  Float,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n\nexport type KeyboardType =\n  // Cross Platform\n  | 'default'\n  | 'email-address'\n  | 'numeric'\n  | 'phone-pad'\n  | 'number-pad'\n  | 'decimal-pad'\n  | 'url'\n  // iOS-only\n  | 'ascii-capable'\n  | 'numbers-and-punctuation'\n  | 'name-phone-pad'\n  | 'twitter'\n  | 'web-search'\n  // Android-only\n  | 'visible-password';\n\nexport type ReturnKeyType =\n  // Cross Platform\n  | 'done'\n  | 'go'\n  | 'next'\n  | 'search'\n  | 'send'\n  // Android-only\n  | 'none'\n  | 'previous'\n  // iOS-only\n  | 'default'\n  | 'emergency-call'\n  | 'google'\n  | 'join'\n  | 'route'\n  | 'yahoo';\n\nexport type SubmitBehavior = 'submit' | 'blurAndSubmit' | 'newline';\n\nexport type NativeProps = $ReadOnly<{|\n  // This allows us to inherit everything from ViewProps except for style (see below)\n  // This must be commented for Fabric codegen to work.\n  ...$Diff<ViewProps, $ReadOnly<{|style: ?ViewStyleProp|}>>,\n\n  /**\n   * Android props after this\n   */\n  /**\n   * Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\n   * To disable autocomplete, set `autoComplete` to `off`.\n   *\n   * *Android Only*\n   *\n   * Possible values for `autoComplete` are:\n   *\n   * - `birthdate-day`\n   * - `birthdate-full`\n   * - `birthdate-month`\n   * - `birthdate-year`\n   * - `cc-csc`\n   * - `cc-exp`\n   * - `cc-exp-day`\n   * - `cc-exp-month`\n   * - `cc-exp-year`\n   * - `cc-number`\n   * - `email`\n   * - `gender`\n   * - `name`\n   * - `name-family`\n   * - `name-given`\n   * - `name-middle`\n   * - `name-middle-initial`\n   * - `name-prefix`\n   * - `name-suffix`\n   * - `password`\n   * - `password-new`\n   * - `postal-address`\n   * - `postal-address-country`\n   * - `postal-address-extended`\n   * - `postal-address-extended-postal-code`\n   * - `postal-address-locality`\n   * - `postal-address-region`\n   * - `postal-code`\n   * - `street-address`\n   * - `sms-otp`\n   * - `tel`\n   * - `tel-country-code`\n   * - `tel-national`\n   * - `tel-device`\n   * - `username`\n   * - `username-new`\n   * - `off`\n   *\n   * @platform android\n   */\n  autoComplete?: WithDefault<\n    | 'birthdate-day'\n    | 'birthdate-full'\n    | 'birthdate-month'\n    | 'birthdate-year'\n    | 'cc-csc'\n    | 'cc-exp'\n    | 'cc-exp-day'\n    | 'cc-exp-month'\n    | 'cc-exp-year'\n    | 'cc-number'\n    | 'email'\n    | 'gender'\n    | 'name'\n    | 'name-family'\n    | 'name-given'\n    | 'name-middle'\n    | 'name-middle-initial'\n    | 'name-prefix'\n    | 'name-suffix'\n    | 'password'\n    | 'password-new'\n    | 'postal-address'\n    | 'postal-address-country'\n    | 'postal-address-extended'\n    | 'postal-address-extended-postal-code'\n    | 'postal-address-locality'\n    | 'postal-address-region'\n    | 'postal-code'\n    | 'street-address'\n    | 'sms-otp'\n    | 'tel'\n    | 'tel-country-code'\n    | 'tel-national'\n    | 'tel-device'\n    | 'username'\n    | 'username-new'\n    | 'off',\n    'off',\n  >,\n\n  /**\n   * Sets the return key to the label. Use it instead of `returnKeyType`.\n   * @platform android\n   */\n  returnKeyLabel?: ?string,\n\n  /**\n   * Sets the number of lines for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  numberOfLines?: ?Int32,\n\n  /**\n   * When `false`, if there is a small amount of space available around a text input\n   * (e.g. landscape orientation on a phone), the OS may choose to have the user edit\n   * the text inside of a full screen text input mode. When `true`, this feature is\n   * disabled and users will always edit the text directly inside of the text input.\n   * Defaults to `false`.\n   * @platform android\n   */\n  disableFullscreenUI?: ?boolean,\n\n  /**\n   * Set text break strategy on Android API Level 23+, possible values are `simple`, `highQuality`, `balanced`\n   * The default value is `simple`.\n   * @platform android\n   */\n  textBreakStrategy?: WithDefault<\n    'simple' | 'highQuality' | 'balanced',\n    'simple',\n  >,\n\n  /**\n   * The color of the `TextInput` underline.\n   * @platform android\n   */\n  underlineColorAndroid?: ?ColorValue,\n\n  /**\n   * If defined, the provided image resource will be rendered on the left.\n   * The image resource must be inside `/android/app/src/main/res/drawable` and referenced\n   * like\n   * ```\n   * <TextInput\n   *  inlineImageLeft='search_icon'\n   * />\n   * ```\n   * @platform android\n   */\n  inlineImageLeft?: ?string,\n\n  /**\n   * Padding between the inline image, if any, and the text input itself.\n   * @platform android\n   */\n  inlineImagePadding?: ?Int32,\n\n  importantForAutofill?: string /*?(\n    | 'auto'\n    | 'no'\n    | 'noExcludeDescendants'\n    | 'yes'\n    | 'yesExcludeDescendants'\n  ),*/,\n\n  /**\n   * When `false`, it will prevent the soft keyboard from showing when the field is focused.\n   * Defaults to `true`.\n   */\n  showSoftInputOnFocus?: ?boolean,\n\n  /**\n   * TextInput props after this\n   */\n  /**\n   * Can tell `TextInput` to automatically capitalize certain characters.\n   *\n   * - `characters`: all characters.\n   * - `words`: first letter of each word.\n   * - `sentences`: first letter of each sentence (*default*).\n   * - `none`: don't auto capitalize anything.\n   */\n  autoCapitalize?: WithDefault<\n    'none' | 'sentences' | 'words' | 'characters',\n    'none',\n  >,\n\n  /**\n   * If `false`, disables auto-correct. The default value is `true`.\n   */\n  autoCorrect?: ?boolean,\n\n  /**\n   * If `true`, focuses the input on `componentDidMount`.\n   * The default value is `false`.\n   */\n  autoFocus?: ?boolean,\n\n  /**\n   * Specifies whether fonts should scale to respect Text Size accessibility settings. The\n   * default is `true`.\n   */\n  allowFontScaling?: ?boolean,\n\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier?: ?Float,\n\n  /**\n   * If `false`, text is not editable. The default value is `true`.\n   */\n  editable?: ?boolean,\n\n  /**\n   * Determines which keyboard to open, e.g.`numeric`.\n   *\n   * The following values work across platforms:\n   *\n   * - `default`\n   * - `numeric`\n   * - `number-pad`\n   * - `decimal-pad`\n   * - `email-address`\n   * - `phone-pad`\n   * - `url`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `visible-password`\n   */\n  keyboardType?: WithDefault<KeyboardType, 'default'>,\n\n  /**\n   * Determines how the return key should look. On Android you can also use\n   * `returnKeyLabel`.\n   *\n   * *Cross platform*\n   *\n   * The following values work across platforms:\n   *\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `search`\n   * - `send`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `none`\n   * - `previous`\n   */\n  returnKeyType?: WithDefault<ReturnKeyType, 'done'>,\n\n  /**\n   * Limits the maximum number of characters that can be entered. Use this\n   * instead of implementing the logic in JS to avoid flicker.\n   */\n  maxLength?: ?Int32,\n\n  /**\n   * If `true`, the text input can be multiple lines.\n   * The default value is `false`.\n   */\n  multiline?: ?boolean,\n\n  /**\n   * Callback that is called when the text input is blurred.\n   * `target` is the reactTag of the element\n   */\n  onBlur?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input is focused.\n   * `target` is the reactTag of the element\n   */\n  onFocus?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * `target` is the reactTag of the element\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChange?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChangeText?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's content size changes.\n   * This will be called with\n   * `{ nativeEvent: { contentSize: { width, height } } }`.\n   *\n   * Only called for multiline text inputs.\n   */\n  onContentSizeChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      contentSize: $ReadOnly<{|width: Double, height: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when text input ends.\n   */\n  onEndEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input selection is changed.\n   * This will be called with\n   * `{ nativeEvent: { selection: { start, end } } }`.\n   */\n  onSelectionChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      selection: $ReadOnly<{|start: Double, end: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's submit button is pressed.\n   * Invalid if `multiline={true}` is specified.\n   */\n  onSubmitEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   */\n  onKeyPress?: ?BubblingEventHandler<$ReadOnly<{|target: Int32, key: string|}>>,\n\n  /**\n   * Invoked on content scroll with `{ nativeEvent: { contentOffset: { x, y } } }`.\n   * May also contain other properties from ScrollEvent but on Android contentSize\n   * is not provided for performance reasons.\n   */\n  onScroll?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      responderIgnoreScroll: boolean,\n      contentInset: $ReadOnly<{|\n        top: Double, // always 0 on Android\n        bottom: Double, // always 0 on Android\n        left: Double, // always 0 on Android\n        right: Double, // always 0 on Android\n      |}>,\n      contentOffset: $ReadOnly<{|\n        x: Double,\n        y: Double,\n      |}>,\n      contentSize: $ReadOnly<{|\n        width: Double, // always 0 on Android\n        height: Double, // always 0 on Android\n      |}>,\n      layoutMeasurement: $ReadOnly<{|\n        width: Double,\n        height: Double,\n      |}>,\n      velocity: $ReadOnly<{|\n        x: Double, // always 0 on Android\n        y: Double, // always 0 on Android\n      |}>,\n    |}>,\n  >,\n\n  /**\n   * The string that will be rendered before text input has been entered.\n   */\n  placeholder?: ?Stringish,\n\n  /**\n   * The text color of the placeholder string.\n   */\n  placeholderTextColor?: ?ColorValue,\n\n  /**\n   * If `true`, the text input obscures the text entered so that sensitive text\n   * like passwords stay secure. The default value is `false`. Does not work with 'multiline={true}'.\n   */\n  secureTextEntry?: ?boolean,\n\n  /**\n   * The highlight and cursor color of the text input.\n   */\n  selectionColor?: ?ColorValue,\n\n  /**\n   * The text selection handle color.\n   */\n  selectionHandleColor?: ?ColorValue,\n\n  /**\n   * The start and end of the text input's selection. Set start and end to\n   * the same value to position the cursor.\n   */\n  selection?: ?$ReadOnly<{|\n    start: Int32,\n    end?: ?Int32,\n  |}>,\n\n  /**\n   * The value to show for the text input. `TextInput` is a controlled\n   * component, which means the native value will be forced to match this\n   * value prop if provided. For most uses, this works great, but in some\n   * cases this may cause flickering - one common cause is preventing edits\n   * by keeping value the same. In addition to simply setting the same value,\n   * either set `editable={false}`, or set/update `maxLength` to prevent\n   * unwanted edits without flicker.\n   */\n  value?: ?string,\n\n  /**\n   * Provides an initial value that will change when the user starts typing.\n   * Useful for simple use-cases where you do not want to deal with listening\n   * to events and updating the value prop to keep the controlled state in sync.\n   */\n  defaultValue?: ?string,\n\n  /**\n   * If `true`, all text will automatically be selected on focus.\n   */\n  selectTextOnFocus?: ?boolean,\n\n  /**\n   * If `true`, the text field will blur when submitted.\n   * The default value is true for single-line fields and false for\n   * multiline fields. Note that for multiline fields, setting `blurOnSubmit`\n   * to `true` means that pressing return will blur the field and trigger the\n   * `onSubmitEditing` event instead of inserting a newline into the field.\n   *\n   * @deprecated\n   * Note that `submitBehavior` now takes the place of `blurOnSubmit` and will\n   * override any behavior defined by `blurOnSubmit`.\n   * @see submitBehavior\n   */\n  blurOnSubmit?: ?boolean,\n\n  /**\n   * When the return key is pressed,\n   *\n   * For single line inputs:\n   *\n   * - `'newline`' defaults to `'blurAndSubmit'`\n   * - `undefined` defaults to `'blurAndSubmit'`\n   *\n   * For multiline inputs:\n   *\n   * - `'newline'` adds a newline\n   * - `undefined` defaults to `'newline'`\n   *\n   * For both single line and multiline inputs:\n   *\n   * - `'submit'` will only send a submit event and not blur the input\n   * - `'blurAndSubmit`' will both blur the input and send a submit event\n   */\n  submitBehavior?: ?SubmitBehavior,\n\n  /**\n   * Note that not all Text styles are supported, an incomplete list of what is not supported includes:\n   *\n   * - `borderLeftWidth`\n   * - `borderTopWidth`\n   * - `borderRightWidth`\n   * - `borderBottomWidth`\n   * - `borderTopLeftRadius`\n   * - `borderTopRightRadius`\n   * - `borderBottomRightRadius`\n   * - `borderBottomLeftRadius`\n   *\n   * see [Issue#7070](https://github.com/facebook/react-native/issues/7070)\n   * for more detail.\n   *\n   * [Styles](docs/style.html)\n   */\n  // TODO: figure out what to do with this style prop for codegen/Fabric purposes\n  // This must be commented for Fabric codegen to work; it's currently not possible\n  // to override the default View style prop in codegen.\n  style?: ?TextStyleProp,\n\n  /**\n   * If `true`, caret is hidden. The default value is `false`.\n   * This property is supported only for single-line TextInput component on iOS.\n   */\n  caretHidden?: ?boolean,\n\n  /*\n   * If `true`, contextMenuHidden is hidden. The default value is `false`.\n   */\n  contextMenuHidden?: ?boolean,\n\n  /**\n   * The following are props that `BaseTextShadowNode` takes. It is unclear if they\n   * are used by TextInput.\n   */\n  textShadowColor?: ?ColorValue,\n  textShadowRadius?: ?Float,\n  textDecorationLine?: ?string,\n  fontStyle?: ?string,\n  textShadowOffset?: ?$ReadOnly<{|width?: ?Double, height?: ?Double|}>,\n  lineHeight?: ?Float,\n  textTransform?: ?string,\n  color?: ?Int32,\n  letterSpacing?: ?Float,\n  fontSize?: ?Float,\n  textAlign?: ?string,\n  includeFontPadding?: ?boolean,\n  fontWeight?: ?string,\n  fontFamily?: ?string,\n\n  /**\n   * I cannot find where these are defined but JS complains without them.\n   */\n  textAlignVertical?: ?string,\n  cursorColor?: ?ColorValue,\n\n  /**\n   * \"Private\" fields used by TextInput.js and not users of this component directly\n   */\n  mostRecentEventCount: Int32,\n  text?: ?string,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'AndroidTextInput',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n  },\n  validAttributes: {\n    maxFontSizeMultiplier: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    autoFocus: true,\n    placeholder: true,\n    inlineImagePadding: true,\n    contextMenuHidden: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    maxLength: true,\n    selectTextOnFocus: true,\n    textShadowRadius: true,\n    underlineColorAndroid: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    textDecorationLine: true,\n    submitBehavior: true,\n    textAlignVertical: true,\n    fontStyle: true,\n    textShadowOffset: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    selectionHandleColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    importantForAutofill: true,\n    lineHeight: true,\n    textTransform: true,\n    returnKeyType: true,\n    keyboardType: true,\n    multiline: true,\n    color: {process: require('../../StyleSheet/processColor').default},\n    autoComplete: true,\n    numberOfLines: true,\n    letterSpacing: true,\n    returnKeyLabel: true,\n    fontSize: true,\n    onKeyPress: true,\n    cursorColor: {process: require('../../StyleSheet/processColor').default},\n    text: true,\n    showSoftInputOnFocus: true,\n    textAlign: true,\n    autoCapitalize: true,\n    autoCorrect: true,\n    caretHidden: true,\n    secureTextEntry: true,\n    textBreakStrategy: true,\n    onScroll: true,\n    onContentSizeChange: true,\n    disableFullscreenUI: true,\n    includeFontPadding: true,\n    fontWeight: true,\n    fontFamily: true,\n    allowFontScaling: true,\n    onSelectionChange: true,\n    mostRecentEventCount: true,\n    inlineImageLeft: true,\n    editable: true,\n    fontVariant: true,\n    borderBottomRightRadius: true,\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderRadius: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderColor: {process: require('../../StyleSheet/processColor').default},\n    borderTopRightRadius: true,\n    borderStyle: true,\n    borderBottomLeftRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {process: require('../../StyleSheet/processColor').default},\n  },\n};\n\nlet AndroidTextInputNativeComponent = NativeComponentRegistry.get<NativeProps>(\n  'AndroidTextInput',\n  () => __INTERNAL_VIEW_CONFIG,\n);\n\n// flowlint-next-line unclear-type:off\nexport default ((AndroidTextInputNativeComponent: any): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n\ntype NativeType = HostComponent<mixed>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig,\n};\n\nconst SinglelineTextInputNativeComponent: HostComponent<mixed> =\n  NativeComponentRegistry.get<mixed>(\n    'RCTSinglelineTextInputView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\n// flowlint-next-line unclear-type:off\nexport default ((SinglelineTextInputNativeComponent: any): HostComponent<mixed>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topContentSizeChange: {\n      registrationName: 'onContentSizeChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n  },\n  validAttributes: {\n    dynamicTypeRamp: true,\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineBreakModeIOS: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    color: {process: require('../../StyleSheet/processColor').default},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    smartInsertDelete: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n      onChangeSync: true,\n      onKeyPressSync: true,\n    }),\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\nimport type {\n  HostComponent,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nconst {findNodeHandle} = require('../../ReactNative/RendererProxy');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set<{\n  blur(): void,\n  focus(): void,\n  measure(callback: MeasureOnSuccessCallback): void,\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void,\n  measureLayout(\n    relativeToNativeNode: number | React.ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void,\n  ): void,\n  setNativeProps(nativeProps: {...}): void,\n}>();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\nexport type RawEventEmitterEvent = $ReadOnly<{|\n  eventName: string,\n  // We expect, but do not/cannot require, that nativeEvent is an object\n  // with the properties: key, elementType (string), type (string), tag (numeric),\n  // and a stateNode of the native element/Fiber the event was emitted to.\n  nativeEvent: {[string]: mixed},\n|}>;\n\ntype RawEventDefinitions = {\n  [eventChannel: string]: [RawEventEmitterEvent],\n};\n\nconst RawEventEmitter: IEventEmitter<RawEventDefinitions> =\n  new EventEmitter<RawEventDefinitions>();\n\n// See the React renderer / react repo for how this is used.\n// Raw events are emitted here when they are received in JS\n// and before any event Plugins process them or before components\n// have a chance to respond to them. This allows you to implement\n// app-specific perf monitoring, which is unimplemented by default,\n// making this entire RawEventEmitter do nothing by default until\n// *you* add listeners for your own app.\n// Besides perf monitoring and maybe debugging, this RawEventEmitter\n// should not be used.\nexport default RawEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ExtendedError} from './ExtendedError';\n\nimport {SyntheticError, handleException} from './ExceptionsManager';\n\nexport type CapturedError = {\n  +componentStack: string,\n  +error: mixed,\n  +errorBoundary: ?{...},\n  ...\n};\n\nconst ReactFiberErrorDialog = {\n  /**\n   * Intercept lifecycle errors and ensure they are shown with the correct stack\n   * trace within the native redbox component.\n   */\n  showErrorDialog({componentStack, error: errorValue}: CapturedError): boolean {\n    let error: ?ExtendedError;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (errorValue: ExtendedError);\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError(errorValue): ExtendedError);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError('Unspecified error'): ExtendedError);\n    }\n    try {\n      error.componentStack = componentStack;\n      error.isComponentError = true;\n    } catch {\n      // Ignored.\n    }\n\n    handleException(error, false);\n\n    // Return false here to prevent ReactFiberErrorLogger default behavior of\n    // logging error details to console.error. Calls to console.error are\n    // automatically routed to the native redbox controller, which we've already\n    // done above by calling ExceptionsManager.\n    return false;\n  },\n};\n\nexport default ReactFiberErrorDialog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// Make sure global Event is defined\nimport EventPolyfill from './EventPolyfill';\n\ntype CustomEvent$Options = $ReadOnly<{|\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  detail?: {...},\n|}>;\n\nclass CustomEvent extends EventPolyfill {\n  detail: ?{...};\n\n  constructor(typeArg: string, options: CustomEvent$Options) {\n    const {bubbles, cancelable, composed} = options;\n    super(typeArg, {bubbles, cancelable, composed});\n\n    this.detail = options.detail; // this would correspond to `NativeEvent` in SyntheticEvent\n  }\n}\n\nexport default CustomEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// https://dom.spec.whatwg.org/#dictdef-eventinit\ntype Event$Init = {\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  /** Non-standard. See `composed` instead. */\n  scoped?: boolean,\n  ...\n};\n\n/**\n * This is a copy of the Event interface defined in Flow:\n * https://github.com/facebook/flow/blob/741104e69c43057ebd32804dd6bcc1b5e97548ea/lib/dom.js\n * which is itself a faithful interface of the W3 spec:\n * https://dom.spec.whatwg.org/#interface-event\n *\n * Since Flow assumes that Event is provided and is on the global object,\n * we must provide an implementation of Event for CustomEvent (and future\n * alignment of React Native's event system with the W3 spec).\n */\ninterface IEvent {\n  constructor(type: string, eventInitDict?: Event$Init): void;\n  /**\n   * Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\n   */\n  +type: string;\n  /**\n   * Returns the object to which event is dispatched (its target).\n   */\n  +target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  +srcElement: Element; // TODO: nullable\n  /**\n   * Returns the object whose event listener's callback is currently being invoked.\n   */\n  +currentTarget: EventTarget; // TODO: nullable\n  /**\n   * Returns the invocation target objects of event's path (objects on which\n   * listeners will be invoked), except for any nodes in shadow trees of which\n   * the shadow root's mode is \"closed\" that are not reachable from event's\n   * currentTarget.\n   */\n  composedPath(): Array<EventTarget>;\n\n  +NONE: number;\n  +AT_TARGET: number;\n  +BUBBLING_PHASE: number;\n  +CAPTURING_PHASE: number;\n  /**\n   * Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET,\n   * and BUBBLING_PHASE.\n   */\n  +eventPhase: number;\n\n  /**\n   * When dispatched in a tree, invoking this method prevents event from reaching\n   * any objects other than the current object.\n   */\n  stopPropagation(): void;\n  /**\n   * Invoking this method prevents event from reaching any registered event\n   * listeners after the current one finishes running and, when dispatched in a\n   * tree, also prevents event from reaching any other objects.\n   */\n  stopImmediatePropagation(): void;\n\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event goes through its target's ancestors in reverse tree order, and\n   * false otherwise.\n   */\n  +bubbles: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. Its\n   * return value does not always carry meaning, but true can indicate\n   * that part of the operation during which event was dispatched, can\n   * be canceled by invoking the preventDefault() method.\n   */\n  +cancelable: boolean;\n  // returnValue: boolean; // legacy, and some subclasses still define it as a string!\n  /**\n   * If invoked when the cancelable attribute value is true, and while\n   * executing a listener for the event with passive set to false, signals to\n   * the operation that caused event to be dispatched that it needs to be\n   * canceled.\n   */\n  preventDefault(): void;\n  /**\n   * Returns true if preventDefault() was invoked successfully to indicate\n   * cancelation, and false otherwise.\n   */\n  +defaultPrevented: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event invokes listeners past a ShadowRoot node that is the root of its\n   * target, and false otherwise.\n   */\n  +composed: boolean;\n\n  /**\n   * Returns true if event was dispatched by the user agent, and false otherwise.\n   */\n  +isTrusted: boolean;\n  /**\n   * Returns the event's timestamp as the number of milliseconds measured relative\n   * to the time origin.\n   */\n  +timeStamp: number;\n\n  /** Non-standard. See Event.prototype.composedPath */\n  +deepPath?: () => EventTarget[];\n  /** Non-standard. See Event.prototype.composed */\n  +scoped: boolean;\n\n  /**\n   * @deprecated\n   */\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void;\n}\n\nclass EventPolyfill implements IEvent {\n  type: string;\n  bubbles: boolean;\n  cancelable: boolean;\n  composed: boolean;\n  // Non-standard. See `composed` instead.\n  scoped: boolean;\n  isTrusted: boolean;\n  defaultPrevented: boolean;\n  timeStamp: number;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n  NONE: number;\n  AT_TARGET: number;\n  BUBBLING_PHASE: number;\n  CAPTURING_PHASE: number;\n\n  eventPhase: number;\n\n  currentTarget: EventTarget; // TODO: nullable\n  target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  srcElement: Element; // TODO: nullable\n\n  // React Native-specific: proxy data to a SyntheticEvent when\n  // certain methods are called.\n  // SyntheticEvent will also have a reference to this instance -\n  // it is circular - and both classes use this reference to keep\n  // data with the other in sync.\n  _syntheticEvent: mixed;\n\n  constructor(type: string, eventInitDict?: Event$Init) {\n    this.type = type;\n    this.bubbles = !!(eventInitDict?.bubbles || false);\n    this.cancelable = !!(eventInitDict?.cancelable || false);\n    this.composed = !!(eventInitDict?.composed || false);\n    this.scoped = !!(eventInitDict?.scoped || false);\n\n    // TODO: somehow guarantee that only \"private\" instantiations of Event\n    // can set this to true\n    this.isTrusted = false;\n\n    // TODO: in the future we'll want to make sure this has the same\n    // time-basis as events originating from native\n    this.timeStamp = Date.now();\n\n    this.defaultPrevented = false;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n    this.NONE = 0;\n    this.AT_TARGET = 1;\n    this.BUBBLING_PHASE = 2;\n    this.CAPTURING_PHASE = 3;\n    this.eventPhase = this.NONE;\n\n    // $FlowFixMe\n    this.currentTarget = null;\n    // $FlowFixMe\n    this.target = null;\n    // $FlowFixMe\n    this.srcElement = null;\n  }\n\n  composedPath(): Array<EventTarget> {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.preventDefault();\n    }\n  }\n\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void {\n    throw new Error(\n      'TODO: not yet implemented. This method is also deprecated.',\n    );\n  }\n\n  stopImmediatePropagation(): void {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  stopPropagation(): void {\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.stopPropagation();\n    }\n  }\n\n  setSyntheticEvent(value: mixed): void {\n    this._syntheticEvent = value;\n  }\n}\n\n// Assertion magic for polyfill follows.\ndeclare var checkEvent: Event; // eslint-disable-line no-unused-vars\n\n/*::\n// This can be a strict mode error at runtime so put it in a Flow comment.\n(checkEvent: IEvent);\n*/\n\nglobal.Event = EventPolyfill;\n\nexport default EventPolyfill;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../Components/TextInput/TextInputState';\nimport {getNodeFromInternalInstanceHandle} from '../../ReactNative/RendererProxy';\nimport {getFabricUIManager} from '../FabricUIManager';\nimport {create} from './ReactNativeAttributePayload';\nimport warnForStyleProps from './warnForStyleProps';\nimport nullthrows from 'nullthrows';\n\nconst {\n  measure: fabricMeasure,\n  measureInWindow: fabricMeasureInWindow,\n  measureLayout: fabricMeasureLayout,\n  getBoundingClientRect: fabricGetBoundingClientRect,\n  setNativeProps,\n} = nullthrows(getFabricUIManager());\n\nconst noop = () => {};\n\n/**\n * This is used for refs on host components.\n */\nexport default class ReactFabricHostComponent implements INativeMethods {\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  _viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    this.__nativeTag = tag;\n    this._viewConfig = viewConfig;\n    this.__internalInstanceHandle = internalInstanceHandle;\n  }\n\n  blur() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (\n      typeof relativeToNativeNode === 'number' ||\n      !(relativeToNativeNode instanceof ReactFabricHostComponent)\n    ) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    const fromStateNode = getNodeFromInternalInstanceHandle(\n      relativeToNativeNode.__internalInstanceHandle,\n    );\n\n    if (toStateNode != null && fromStateNode != null) {\n      fabricMeasureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  unstable_getBoundingClientRect(): DOMRect {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      const rect = fabricGetBoundingClientRect(node, true);\n\n      if (rect) {\n        return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n      }\n    }\n\n    // Empty rect if any of the above failed\n    return new DOMRect(0, 0, 0, 0);\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this._viewConfig.validAttributes);\n    }\n    const updatePayload = create(nativeProps, this._viewConfig.validAttributes);\n\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null && updatePayload != null) {\n      setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/**\n * This module is meant to be used by the React renderers to create public\n * instances and get some data from them (like their instance handle / fiber).\n */\n\nimport type ReactNativeElement from '../../../src/private/webapis/dom/nodes/ReactNativeElement';\nimport type ReadOnlyText from '../../../src/private/webapis/dom/nodes/ReadOnlyText';\nimport typeof * as RendererProxyT from '../../ReactNative/RendererProxy';\nimport type {\n  InternalInstanceHandle,\n  Node,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type ReactFabricHostComponent from './ReactFabricHostComponent';\n\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet PublicInstanceClass:\n  | Class<ReactFabricHostComponent>\n  | Class<ReactNativeElement>;\nlet ReadOnlyTextClass: Class<ReadOnlyText>;\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet RendererProxy: RendererProxyT;\n\nexport function createPublicInstance(\n  tag: number,\n  viewConfig: ViewConfig,\n  internalInstanceHandle: InternalInstanceHandle,\n): ReactFabricHostComponent | ReactNativeElement {\n  if (PublicInstanceClass == null) {\n    // We don't use inline requires in react-native, so this forces lazy loading\n    // the right module to avoid eagerly loading both.\n    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass =\n        require('../../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\n\nexport function createPublicTextInstance(\n  internalInstanceHandle: InternalInstanceHandle,\n): ReadOnlyText {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass =\n      require('../../../src/private/webapis/dom/nodes/ReadOnlyText').default;\n  }\n\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\n\nexport function getNativeTagFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): number {\n  return publicInstance.__nativeTag;\n}\n\nexport function getNodeFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): ?Node {\n  // Avoid loading ReactFabric if using an instance from the legacy renderer.\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n\n  if (RendererProxy == null) {\n    RendererProxy = require('../../ReactNative/RendererProxy');\n  }\n  return RendererProxy.getNodeFromInternalInstanceHandle(\n    publicInstance.__internalInstanceHandle,\n  );\n}\n\nexport function getInternalInstanceHandleFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): InternalInstanceHandle {\n  // TODO(T174762768): Remove this once OSS versions of renderers will be synced.\n  // $FlowExpectedError[prop-missing] Keeping this for backwards-compatibility with the renderers versions in open source.\n  if (publicInstance._internalInstanceHandle != null) {\n    // $FlowExpectedError[incompatible-return] Keeping this for backwards-compatibility with the renderers versions in open source.\n    return publicInstance._internalInstanceHandle;\n  }\n\n  return publicInstance.__internalInstanceHandle;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport deepDiffer from '../../Utilities/differ/deepDiffer';\n\nconst emptyObject = {};\n\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\ntype NestedNode = Array<NestedNode> | Object;\n\n// Tracks removed keys\nlet removedKeys: {[string]: boolean} | null = null;\nlet removedKeyCount = 0;\n\nconst deepDifferOptions = {\n  unsafelyIgnoreFunctions: true,\n};\n\nfunction defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {\n  if (typeof nextProp !== 'object' || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return deepDiffer(prevProp, nextProp, deepDifferOptions);\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload: Object,\n  node: NestedNode,\n  validAttributes: AttributeConfiguration,\n) {\n  if (Array.isArray(node)) {\n    let i = node.length;\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes,\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    const obj = node;\n    for (const propKey in removedKeys) {\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n      let nextProp = obj[propKey];\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      const attributeConfig = validAttributes[propKey];\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === 'function') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = true;\n      }\n      if (typeof nextProp === 'undefined') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload: null | Object,\n  prevArray: Array<NestedNode>,\n  nextArray: Array<NestedNode>,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  const minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  let i;\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  if (Array.isArray(prevProp)) {\n    return diffProperties(\n      updatePayload,\n      // $FlowFixMe - We know that this is always an object when the input is.\n      flattenStyle(prevProp),\n      // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp,\n    // $FlowFixMe - We know that this is always an object when the input is.\n    flattenStyle(nextProp),\n    validAttributes,\n  );\n}\n\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\nfunction addNestedProperty(\n  updatePayload: null | Object,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): $FlowFixMe {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (let i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes,\n    );\n  }\n\n  return updatePayload;\n}\n\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\nfunction clearNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (let i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\nfunction diffProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  let attributeConfig;\n  let nextProp;\n  let prevProp;\n\n  for (const propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey];\n\n    // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n    if (typeof nextProp === 'function') {\n      nextProp = (true: any);\n      // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n      if (typeof prevProp === 'function') {\n        prevProp = (true: any);\n      }\n    }\n\n    // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n    if (typeof nextProp === 'undefined') {\n      nextProp = (null: any);\n      if (typeof prevProp === 'undefined') {\n        prevProp = (null: any);\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    }\n\n    // Pattern match on: attributeConfig\n    if (typeof attributeConfig !== 'object') {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration\n      const shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === 'function'\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n      if (shouldUpdate) {\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? // $FlowFixMe[incompatible-use] found when upgrading Flow\n              attributeConfig.process(nextProp)\n            : nextProp;\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0;\n      // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          ((attributeConfig: any): AttributeConfiguration),\n        );\n        removedKeys = null;\n      }\n    }\n  }\n\n  // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n  for (const propKey in prevProps) {\n    if (nextProps[propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[propKey];\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    }\n    // Pattern match on: attributeConfig\n    if (\n      typeof attributeConfig !== 'object' ||\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n        propKey\n      ] = null;\n      if (!removedKeys) {\n        removedKeys = ({}: {[string]: boolean});\n      }\n      if (!removedKeys[propKey]) {\n        removedKeys[propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n    }\n  }\n  return updatePayload;\n}\n\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\nfunction addProperties(\n  updatePayload: null | Object,\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\nfunction clearProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nexport function create(\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes,\n  );\n}\n\nexport function diff(\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nexport default function warnForStyleProps(\n  props: {...},\n  validAttributes: AttributeConfiguration,\n): void {\n  if (__DEV__) {\n    for (const key in validAttributes.style) {\n      // $FlowFixMe[invalid-computed-prop]\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        console.error(\n          'You are setting the style `{ %s' +\n            ': ... }` as a prop. You ' +\n            'should nest it in a style object. ' +\n            'E.g. `{ style: { %s' +\n            ': ... } }`',\n          key,\n          key,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport typeof BatchedBridge from '../BatchedBridge/BatchedBridge';\nimport typeof legacySendAccessibilityEvent from '../Components/AccessibilityInfo/legacySendAccessibilityEvent';\nimport typeof TextInputState from '../Components/TextInput/TextInputState';\nimport typeof ExceptionsManager from '../Core/ExceptionsManager';\nimport typeof RawEventEmitter from '../Core/RawEventEmitter';\nimport typeof ReactFiberErrorDialog from '../Core/ReactFiberErrorDialog';\nimport typeof RCTEventEmitter from '../EventEmitter/RCTEventEmitter';\nimport typeof CustomEvent from '../Events/CustomEvent';\nimport typeof {\n  createPublicInstance,\n  createPublicTextInstance,\n  getInternalInstanceHandleFromPublicInstance,\n  getNativeTagFromPublicInstance,\n  getNodeFromPublicInstance,\n} from '../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance';\nimport typeof {\n  create as createAttributePayload,\n  diff as diffAttributePayloads,\n} from '../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';\nimport typeof UIManager from '../ReactNative/UIManager';\nimport typeof * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport typeof flattenStyle from '../StyleSheet/flattenStyle';\nimport type {DangerouslyImpreciseStyleProp} from '../StyleSheet/StyleSheet';\nimport typeof deepFreezeAndThrowOnMutationInDev from '../Utilities/deepFreezeAndThrowOnMutationInDev';\nimport typeof deepDiffer from '../Utilities/differ/deepDiffer';\nimport typeof Platform from '../Utilities/Platform';\n\n// flowlint unsafe-getters-setters:off\nmodule.exports = {\n  get BatchedBridge(): BatchedBridge {\n    return require('../BatchedBridge/BatchedBridge');\n  },\n  get ExceptionsManager(): ExceptionsManager {\n    return require('../Core/ExceptionsManager');\n  },\n  get Platform(): Platform {\n    return require('../Utilities/Platform');\n  },\n  get RCTEventEmitter(): RCTEventEmitter {\n    return require('../EventEmitter/RCTEventEmitter');\n  },\n  get ReactNativeViewConfigRegistry(): ReactNativeViewConfigRegistry {\n    return require('../Renderer/shims/ReactNativeViewConfigRegistry');\n  },\n  get TextInputState(): TextInputState {\n    return require('../Components/TextInput/TextInputState');\n  },\n  get UIManager(): UIManager {\n    return require('../ReactNative/UIManager');\n  },\n  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`\n  get deepDiffer(): deepDiffer {\n    return require('../Utilities/differ/deepDiffer');\n  },\n  get deepFreezeAndThrowOnMutationInDev(): deepFreezeAndThrowOnMutationInDev<\n    {...} | Array<mixed>,\n  > {\n    return require('../Utilities/deepFreezeAndThrowOnMutationInDev');\n  },\n  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`\n  get flattenStyle(): flattenStyle<DangerouslyImpreciseStyleProp> {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    // $FlowFixMe[incompatible-return]\n    return require('../StyleSheet/flattenStyle');\n  },\n  get ReactFiberErrorDialog(): ReactFiberErrorDialog {\n    return require('../Core/ReactFiberErrorDialog').default;\n  },\n  get legacySendAccessibilityEvent(): legacySendAccessibilityEvent {\n    return require('../Components/AccessibilityInfo/legacySendAccessibilityEvent');\n  },\n  get RawEventEmitter(): RawEventEmitter {\n    return require('../Core/RawEventEmitter').default;\n  },\n  get CustomEvent(): CustomEvent {\n    return require('../Events/CustomEvent').default;\n  },\n  get createAttributePayload(): createAttributePayload {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')\n      .create;\n  },\n  get diffAttributePayloads(): diffAttributePayloads {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')\n      .diff;\n  },\n  get createPublicInstance(): createPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .createPublicInstance;\n  },\n  get createPublicTextInstance(): createPublicTextInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .createPublicTextInstance;\n  },\n  get getNativeTagFromPublicInstance(): getNativeTagFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getNativeTagFromPublicInstance;\n  },\n  get getNodeFromPublicInstance(): getNodeFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getNodeFromPublicInstance;\n  },\n  get getInternalInstanceHandleFromPublicInstance(): getInternalInstanceHandleFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getInternalInstanceHandleFromPublicInstance;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {DangerouslyImpreciseStyleProp} from './StyleSheet';\nimport type {____FlattenStyleProp_Internal} from './StyleSheetTypes';\n\nfunction flattenStyle<TStyleProp: DangerouslyImpreciseStyleProp>(\n  style: ?TStyleProp,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n): ?____FlattenStyleProp_Internal<TStyleProp> {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result: {[string]: $FlowFixMe} = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nlet logListeners;\n\ntype LogListeners = {|\n  +onDifferentFunctionsIgnored: (nameOne: ?string, nameTwo: ?string) => void,\n|};\n\ntype Options = {|+unsafelyIgnoreFunctions?: boolean|};\n\nfunction unstable_setLogListeners(listeners: ?LogListeners) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one: any,\n  two: any,\n  maxDepthOrOptions: Options | number = -1,\n  maybeOptions?: Options,\n): boolean {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<0bff47ec5af8ed96d8b2abe351f318f1>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n  type Getter,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = {\n  jsOnlyTestFlag: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  enableOptimisedVirtualizedCells: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  shouldSkipStateUpdatesForLoopingAnimations: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  shouldUseSetNativePropsInNativeAnimationsInFabric: Getter<boolean>,\n  usePassiveEffectsForAnimations: Getter<boolean>,\n  useRefsForTextInputState: Getter<boolean>,\n};\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = Partial<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = {\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  allowRecursiveCommitsWithSynchronousMountOnAndroid: Getter<boolean>,\n  batchRenderingUpdatesInEventLoop: Getter<boolean>,\n  completeReactInstanceCreationOnBgThreadOnAndroid: Getter<boolean>,\n  destroyFabricSurfacesInReactInstanceManager: Getter<boolean>,\n  enableAlignItemsBaselineOnFabricIOS: Getter<boolean>,\n  enableAndroidMixBlendModeProp: Getter<boolean>,\n  enableBackgroundStyleApplicator: Getter<boolean>,\n  enableCleanTextInputYogaNode: Getter<boolean>,\n  enableEagerRootViewAttachment: Getter<boolean>,\n  enableEventEmitterRetentionDuringGesturesOnAndroid: Getter<boolean>,\n  enableFabricLogs: Getter<boolean>,\n  enableFabricRendererExclusively: Getter<boolean>,\n  enableGranularShadowTreeStateReconciliation: Getter<boolean>,\n  enableIOSViewClipToPaddingBox: Getter<boolean>,\n  enableLayoutAnimationsOnIOS: Getter<boolean>,\n  enableLongTaskAPI: Getter<boolean>,\n  enableMicrotasks: Getter<boolean>,\n  enablePropsUpdateReconciliationAndroid: Getter<boolean>,\n  enableReportEventPaintTime: Getter<boolean>,\n  enableSynchronousStateUpdates: Getter<boolean>,\n  enableUIConsistency: Getter<boolean>,\n  enableViewRecycling: Getter<boolean>,\n  excludeYogaFromRawProps: Getter<boolean>,\n  fetchImagesInViewPreallocation: Getter<boolean>,\n  fixIncorrectScrollViewStateUpdateOnAndroid: Getter<boolean>,\n  fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean>,\n  fixMissedFabricStateUpdatesOnAndroid: Getter<boolean>,\n  fixMountingCoordinatorReportedPendingTransactionsOnAndroid: Getter<boolean>,\n  forceBatchingMountItemsOnAndroid: Getter<boolean>,\n  fuseboxEnabledDebug: Getter<boolean>,\n  fuseboxEnabledRelease: Getter<boolean>,\n  initEagerTurboModulesOnNativeModulesQueueAndroid: Getter<boolean>,\n  lazyAnimationCallbacks: Getter<boolean>,\n  loadVectorDrawablesOnImages: Getter<boolean>,\n  setAndroidLayoutDirection: Getter<boolean>,\n  traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean>,\n  useFabricInterop: Getter<boolean>,\n  useImmediateExecutorInAndroidBridgeless: Getter<boolean>,\n  useModernRuntimeScheduler: Getter<boolean>,\n  useNativeViewConfigsInBridgelessMode: Getter<boolean>,\n  useNewReactImageViewBackgroundDrawing: Getter<boolean>,\n  useOptimisedViewPreallocationOnAndroid: Getter<boolean>,\n  useOptimizedEventBatchingOnAndroid: Getter<boolean>,\n  useRuntimeShadowNodeReferenceUpdate: Getter<boolean>,\n  useRuntimeShadowNodeReferenceUpdateOnLayout: Getter<boolean>,\n  useStateAlignmentMechanism: Getter<boolean>,\n  useTurboModuleInterop: Getter<boolean>,\n}\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Removing unnecessary rerenders Virtualized cells after any rerenders of Virualized list. Works with strict=true option\n */\nexport const enableOptimisedVirtualizedCells: Getter<boolean> = createJavaScriptFlagGetter('enableOptimisedVirtualizedCells', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * If the animation is within Animated.loop, we do not send state updates to React.\n */\nexport const shouldSkipStateUpdatesForLoopingAnimations: Getter<boolean> = createJavaScriptFlagGetter('shouldSkipStateUpdatesForLoopingAnimations', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Enables use of setNativeProps in Native driven animations in Fabric.\n */\nexport const shouldUseSetNativePropsInNativeAnimationsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInNativeAnimationsInFabric', false);\n\n/**\n * Enable a variant of useAnimatedPropsLifecycle hook that constructs the animation graph in passive effect instead of layout effect\n */\nexport const usePassiveEffectsForAnimations: Getter<boolean> = createJavaScriptFlagGetter('usePassiveEffectsForAnimations', false);\n\n/**\n * Enable a variant of TextInput that moves some state to refs to avoid unnecessary re-renders\n */\nexport const useRefsForTextInputState: Getter<boolean> = createJavaScriptFlagGetter('useRefsForTextInputState', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Adds support for recursively processing commits that mount synchronously (Android only).\n */\nexport const allowRecursiveCommitsWithSynchronousMountOnAndroid: Getter<boolean> = createNativeFlagGetter('allowRecursiveCommitsWithSynchronousMountOnAndroid', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop: Getter<boolean> = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * Do not wait for a main-thread dispatch to complete init to start executing work on the JS thread on Android\n */\nexport const completeReactInstanceCreationOnBgThreadOnAndroid: Getter<boolean> = createNativeFlagGetter('completeReactInstanceCreationOnBgThreadOnAndroid', false);\n/**\n * When enabled, ReactInstanceManager will clean up Fabric surfaces on destroy().\n */\nexport const destroyFabricSurfacesInReactInstanceManager: Getter<boolean> = createNativeFlagGetter('destroyFabricSurfacesInReactInstanceManager', false);\n/**\n * Kill-switch to turn off support for aling-items:baseline on Fabric iOS.\n */\nexport const enableAlignItemsBaselineOnFabricIOS: Getter<boolean> = createNativeFlagGetter('enableAlignItemsBaselineOnFabricIOS', true);\n/**\n * Enables mix-blend-mode prop on Android.\n */\nexport const enableAndroidMixBlendModeProp: Getter<boolean> = createNativeFlagGetter('enableAndroidMixBlendModeProp', false);\n/**\n * Use BackgroundStyleApplicator in place of other background/border drawing code\n */\nexport const enableBackgroundStyleApplicator: Getter<boolean> = createNativeFlagGetter('enableBackgroundStyleApplicator', true);\n/**\n * Clean yoga node when <TextInput /> does not change.\n */\nexport const enableCleanTextInputYogaNode: Getter<boolean> = createNativeFlagGetter('enableCleanTextInputYogaNode', false);\n/**\n * Feature flag to configure eager attachment of the root view/initialisation of the JS code.\n */\nexport const enableEagerRootViewAttachment: Getter<boolean> = createNativeFlagGetter('enableEagerRootViewAttachment', false);\n/**\n * Enables the retention of EventEmitterWrapper on Android till the touch gesture is over to fix a bug on pressable (#44610)\n */\nexport const enableEventEmitterRetentionDuringGesturesOnAndroid: Getter<boolean> = createNativeFlagGetter('enableEventEmitterRetentionDuringGesturesOnAndroid', false);\n/**\n * This feature flag enables logs for Fabric.\n */\nexport const enableFabricLogs: Getter<boolean> = createNativeFlagGetter('enableFabricLogs', false);\n/**\n * When the app is completely migrated to Fabric, set this flag to true to disable parts of Paper infrastructure that are not needed anymore but consume memory and CPU. Specifically, UIViewOperationQueue and EventDispatcherImpl will no longer work as they will not subscribe to ReactChoreographer for updates.\n */\nexport const enableFabricRendererExclusively: Getter<boolean> = createNativeFlagGetter('enableFabricRendererExclusively', false);\n/**\n * When enabled, the renderer would only fail commits when they propagate state and the last commit that updated state changed before committing.\n */\nexport const enableGranularShadowTreeStateReconciliation: Getter<boolean> = createNativeFlagGetter('enableGranularShadowTreeStateReconciliation', false);\n/**\n * iOS Views will clip to their padding box vs border box\n */\nexport const enableIOSViewClipToPaddingBox: Getter<boolean> = createNativeFlagGetter('enableIOSViewClipToPaddingBox', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on iOS.\n */\nexport const enableLayoutAnimationsOnIOS: Getter<boolean> = createNativeFlagGetter('enableLayoutAnimationsOnIOS', true);\n/**\n * Enables the reporting of long tasks through `PerformanceObserver`. Only works if the event loop is enabled.\n */\nexport const enableLongTaskAPI: Getter<boolean> = createNativeFlagGetter('enableLongTaskAPI', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks: Getter<boolean> = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * When enabled, Android will receive prop updates based on the differences between the last rendered shadow node and the last committed shadow node.\n */\nexport const enablePropsUpdateReconciliationAndroid: Getter<boolean> = createNativeFlagGetter('enablePropsUpdateReconciliationAndroid', false);\n/**\n * Report paint time inside the Event Timing API implementation (PerformanceObserver).\n */\nexport const enableReportEventPaintTime: Getter<boolean> = createNativeFlagGetter('enableReportEventPaintTime', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates: Getter<boolean> = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Ensures that JavaScript always has a consistent view of the state of the UI (e.g.: commits done in other threads are not immediately propagated to JS during its execution).\n */\nexport const enableUIConsistency: Getter<boolean> = createNativeFlagGetter('enableUIConsistency', false);\n/**\n * Enables View Recycling. When enabled, individual ViewManagers must still opt-in.\n */\nexport const enableViewRecycling: Getter<boolean> = createNativeFlagGetter('enableViewRecycling', false);\n/**\n * When enabled, rawProps in Props will not include Yoga specific props.\n */\nexport const excludeYogaFromRawProps: Getter<boolean> = createNativeFlagGetter('excludeYogaFromRawProps', false);\n/**\n * Start image fetching during view preallocation instead of waiting for layout pass\n */\nexport const fetchImagesInViewPreallocation: Getter<boolean> = createNativeFlagGetter('fetchImagesInViewPreallocation', false);\n/**\n * When doing a smooth scroll animation, it stops setting the state with the final scroll position in Fabric before the animation starts.\n */\nexport const fixIncorrectScrollViewStateUpdateOnAndroid: Getter<boolean> = createNativeFlagGetter('fixIncorrectScrollViewStateUpdateOnAndroid', false);\n/**\n * Uses the default event priority instead of the discreet event priority by default when dispatching events from Fabric to React.\n */\nexport const fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean> = createNativeFlagGetter('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);\n/**\n * Enables a fix to prevent the possibility of state updates in Fabric being missed due to race conditions with previous state updates.\n */\nexport const fixMissedFabricStateUpdatesOnAndroid: Getter<boolean> = createNativeFlagGetter('fixMissedFabricStateUpdatesOnAndroid', false);\n/**\n * Fixes a limitation on Android where the mounting coordinator would report there are no pending transactions but some of them were actually not processed due to the use of the push model.\n */\nexport const fixMountingCoordinatorReportedPendingTransactionsOnAndroid: Getter<boolean> = createNativeFlagGetter('fixMountingCoordinatorReportedPendingTransactionsOnAndroid', false);\n/**\n * Forces the mounting layer on Android to always batch mount items instead of dispatching them immediately. This might fix some crashes related to synchronous state updates, where some views dispatch state updates during mount.\n */\nexport const forceBatchingMountItemsOnAndroid: Getter<boolean> = createNativeFlagGetter('forceBatchingMountItemsOnAndroid', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in debug builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledDebug: Getter<boolean> = createNativeFlagGetter('fuseboxEnabledDebug', true);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease: Getter<boolean> = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Construct modules that requires eager init on the dedicate native modules thread\n */\nexport const initEagerTurboModulesOnNativeModulesQueueAndroid: Getter<boolean> = createNativeFlagGetter('initEagerTurboModulesOnNativeModulesQueueAndroid', false);\n/**\n * Only enqueue Choreographer calls if there is an ongoing animation, instead of enqueueing every frame.\n */\nexport const lazyAnimationCallbacks: Getter<boolean> = createNativeFlagGetter('lazyAnimationCallbacks', false);\n/**\n * Adds support for loading vector drawable assets in the Image component (only on Android)\n */\nexport const loadVectorDrawablesOnImages: Getter<boolean> = createNativeFlagGetter('loadVectorDrawablesOnImages', false);\n/**\n * Propagate layout direction to Android views.\n */\nexport const setAndroidLayoutDirection: Getter<boolean> = createNativeFlagGetter('setAndroidLayoutDirection', false);\n/**\n * Enables storing js caller stack when creating promise in native module. This is useful in case of Promise rejection and tracing the cause.\n */\nexport const traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean> = createNativeFlagGetter('traceTurboModulePromiseRejectionsOnAndroid', false);\n/**\n * Should this application enable the Fabric Interop Layer for Android? If yes, the application will behave so that it can accept non-Fabric components and render them on Fabric. This toggle is controlling extra logic such as custom event dispatching that are needed for the Fabric Interop Layer to work correctly.\n */\nexport const useFabricInterop: Getter<boolean> = createNativeFlagGetter('useFabricInterop', false);\n/**\n * Invoke callbacks immediately on the ReactInstance rather than going through a background thread for synchronization\n */\nexport const useImmediateExecutorInAndroidBridgeless: Getter<boolean> = createNativeFlagGetter('useImmediateExecutorInAndroidBridgeless', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler: Getter<boolean> = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode: Getter<boolean> = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * Use shared background drawing code for ReactImageView instead of using Fresco to manipulate the bitmap\n */\nexport const useNewReactImageViewBackgroundDrawing: Getter<boolean> = createNativeFlagGetter('useNewReactImageViewBackgroundDrawing', false);\n/**\n * Moves more of the work in view preallocation to the main thread to free up JS thread.\n */\nexport const useOptimisedViewPreallocationOnAndroid: Getter<boolean> = createNativeFlagGetter('useOptimisedViewPreallocationOnAndroid', false);\n/**\n * Uses an optimized mechanism for event batching on Android that does not need to wait for a Choreographer frame callback.\n */\nexport const useOptimizedEventBatchingOnAndroid: Getter<boolean> = createNativeFlagGetter('useOptimizedEventBatchingOnAndroid', false);\n/**\n * When enabled, cloning shadow nodes within react native will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdate: Getter<boolean> = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdate', false);\n/**\n * When enabled, cloning shadow nodes during layout will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdateOnLayout: Getter<boolean> = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdateOnLayout', false);\n/**\n * When enabled, it uses optimised state reconciliation algorithm.\n */\nexport const useStateAlignmentMechanism: Getter<boolean> = createNativeFlagGetter('useStateAlignmentMechanism', false);\n/**\n * In Bridgeless mode, should legacy NativeModules use the TurboModule system?\n */\nexport const useTurboModuleInterop: Getter<boolean> = createNativeFlagGetter('useTurboModuleInterop', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  ReactNativeFeatureFlagsJsOnly,\n  ReactNativeFeatureFlagsJsOnlyOverrides,\n} from './ReactNativeFeatureFlags';\n\nimport NativeReactNativeFeatureFlags from './specs/NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags: Set<string> = new Set();\nlet overrides: ?ReactNativeFeatureFlagsJsOnlyOverrides;\n\nexport type Getter<T> = () => T;\n\nfunction createGetter<T: boolean | number | string>(\n  configName: string,\n  customValueGetter: Getter<?T>,\n  defaultValue: T,\n): Getter<T> {\n  let cachedValue: ?T;\n\n  return () => {\n    if (cachedValue == null) {\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter<\n  K: $Keys<ReactNativeFeatureFlagsJsOnly>,\n>(\n  configName: K,\n  defaultValue: ReturnType<ReactNativeFeatureFlagsJsOnly[K]>,\n): Getter<ReturnType<ReactNativeFeatureFlagsJsOnly[K]>> {\n  return createGetter(\n    configName,\n    () => {\n      accessedFeatureFlags.add(configName);\n      return overrides?.[configName]?.();\n    },\n    defaultValue,\n  );\n}\n\ntype NativeFeatureFlags = $NonMaybeType<typeof NativeReactNativeFeatureFlags>;\n\nexport function createNativeFlagGetter<K: $Keys<NativeFeatureFlags>>(\n  configName: K,\n  defaultValue: ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>,\n): Getter<ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>> {\n  return createGetter(\n    configName,\n    () => {\n      const valueFromNative = NativeReactNativeFeatureFlags?.[configName]?.();\n      if (valueFromNative == null) {\n        logUnavailableNativeModuleError(configName);\n      }\n      return valueFromNative;\n    },\n    defaultValue,\n  );\n}\n\nexport function getOverrides(): ?ReactNativeFeatureFlagsJsOnlyOverrides {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides: ReactNativeFeatureFlagsJsOnlyOverrides,\n): void {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n\nconst reportedConfigNames: Set<string> = new Set();\n\nfunction logUnavailableNativeModuleError(configName: string): void {\n  if (!reportedConfigNames.has(configName)) {\n    reportedConfigNames.add(configName);\n    console.error(\n      `Could not access feature flag '${configName}' because native module method was not available`,\n    );\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<6d4aa48dfdd3b78ac5f0f8e70eb3895f>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +commonTestFlag?: () => boolean;\n  +allowRecursiveCommitsWithSynchronousMountOnAndroid?: () => boolean;\n  +batchRenderingUpdatesInEventLoop?: () => boolean;\n  +completeReactInstanceCreationOnBgThreadOnAndroid?: () => boolean;\n  +destroyFabricSurfacesInReactInstanceManager?: () => boolean;\n  +enableAlignItemsBaselineOnFabricIOS?: () => boolean;\n  +enableAndroidMixBlendModeProp?: () => boolean;\n  +enableBackgroundStyleApplicator?: () => boolean;\n  +enableCleanTextInputYogaNode?: () => boolean;\n  +enableEagerRootViewAttachment?: () => boolean;\n  +enableEventEmitterRetentionDuringGesturesOnAndroid?: () => boolean;\n  +enableFabricLogs?: () => boolean;\n  +enableFabricRendererExclusively?: () => boolean;\n  +enableGranularShadowTreeStateReconciliation?: () => boolean;\n  +enableIOSViewClipToPaddingBox?: () => boolean;\n  +enableLayoutAnimationsOnIOS?: () => boolean;\n  +enableLongTaskAPI?: () => boolean;\n  +enableMicrotasks?: () => boolean;\n  +enablePropsUpdateReconciliationAndroid?: () => boolean;\n  +enableReportEventPaintTime?: () => boolean;\n  +enableSynchronousStateUpdates?: () => boolean;\n  +enableUIConsistency?: () => boolean;\n  +enableViewRecycling?: () => boolean;\n  +excludeYogaFromRawProps?: () => boolean;\n  +fetchImagesInViewPreallocation?: () => boolean;\n  +fixIncorrectScrollViewStateUpdateOnAndroid?: () => boolean;\n  +fixMappingOfEventPrioritiesBetweenFabricAndReact?: () => boolean;\n  +fixMissedFabricStateUpdatesOnAndroid?: () => boolean;\n  +fixMountingCoordinatorReportedPendingTransactionsOnAndroid?: () => boolean;\n  +forceBatchingMountItemsOnAndroid?: () => boolean;\n  +fuseboxEnabledDebug?: () => boolean;\n  +fuseboxEnabledRelease?: () => boolean;\n  +initEagerTurboModulesOnNativeModulesQueueAndroid?: () => boolean;\n  +lazyAnimationCallbacks?: () => boolean;\n  +loadVectorDrawablesOnImages?: () => boolean;\n  +setAndroidLayoutDirection?: () => boolean;\n  +traceTurboModulePromiseRejectionsOnAndroid?: () => boolean;\n  +useFabricInterop?: () => boolean;\n  +useImmediateExecutorInAndroidBridgeless?: () => boolean;\n  +useModernRuntimeScheduler?: () => boolean;\n  +useNativeViewConfigsInBridgelessMode?: () => boolean;\n  +useNewReactImageViewBackgroundDrawing?: () => boolean;\n  +useOptimisedViewPreallocationOnAndroid?: () => boolean;\n  +useOptimizedEventBatchingOnAndroid?: () => boolean;\n  +useRuntimeShadowNodeReferenceUpdate?: () => boolean;\n  +useRuntimeShadowNodeReferenceUpdateOnLayout?: () => boolean;\n  +useStateAlignmentMechanism?: () => boolean;\n  +useTurboModuleInterop?: () => boolean;\n}\n\nconst NativeReactNativeFeatureFlags: ?Spec = TurboModuleRegistry.get<Spec>(\n  'NativeReactNativeFeatureFlagsCxx',\n);\n\nexport default NativeReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getCurrentBoldTextState: (\n    onSuccess: (isBoldTextEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentGrayscaleState: (\n    onSuccess: (isGrayscaleEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentInvertColorsState: (\n    onSuccess: (isInvertColorsEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceMotionState: (\n    onSuccess: (isReduceMotionEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentPrefersCrossFadeTransitionsState?: (\n    onSuccess: (prefersCrossFadeTransitions: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceTransparencyState: (\n    onSuccess: (isReduceTransparencyEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentVoiceOverState: (\n    onSuccess: (isScreenReaderEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +setAccessibilityContentSizeMultipliers: (JSMultipliers: {|\n    +extraSmall?: ?number,\n    +small?: ?number,\n    +medium?: ?number,\n    +large?: ?number,\n    +extraLarge?: ?number,\n    +extraExtraLarge?: ?number,\n    +extraExtraExtraLarge?: ?number,\n    +accessibilityMedium?: ?number,\n    +accessibilityLarge?: ?number,\n    +accessibilityExtraLarge?: ?number,\n    +accessibilityExtraExtraLarge?: ?number,\n    +accessibilityExtraExtraExtraLarge?: ?number,\n  |}) => void;\n  +setAccessibilityFocus: (reactTag: number) => void;\n  +announceForAccessibility: (announcement: string) => void;\n  +announceForAccessibilityWithOptions?: (\n    announcement: string,\n    options: {queue?: boolean},\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AccessibilityManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * The JSDoc comments in this file have been extracted from [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).\n * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect/contributors.txt),\n * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n */\n\nimport DOMRectReadOnly, {type DOMRectLike} from './DOMRectReadOnly';\n\n// flowlint unsafe-getters-setters:off\n\n/**\n * A `DOMRect` describes the size and position of a rectangle.\n * The type of box represented by the `DOMRect` is specified by the method or property that returned it.\n *\n * This is a (mostly) spec-compliant version of `DOMRect` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).\n */\nexport default class DOMRect extends DOMRectReadOnly {\n  /**\n   * The x coordinate of the `DOMRect`'s origin.\n   */\n  get x(): number {\n    return this.__getInternalX();\n  }\n\n  set x(x: ?number) {\n    this.__setInternalX(x);\n  }\n\n  /**\n   * The y coordinate of the `DOMRect`'s origin.\n   */\n  get y(): number {\n    return this.__getInternalY();\n  }\n\n  set y(y: ?number) {\n    this.__setInternalY(y);\n  }\n\n  /**\n   * The width of the `DOMRect`.\n   */\n  get width(): number {\n    return this.__getInternalWidth();\n  }\n\n  set width(width: ?number) {\n    this.__setInternalWidth(width);\n  }\n\n  /**\n   * The height of the `DOMRect`.\n   */\n  get height(): number {\n    return this.__getInternalHeight();\n  }\n\n  set height(height: ?number) {\n    this.__setInternalHeight(height);\n  }\n\n  /**\n   * Creates a new `DOMRect` object with a given location and dimensions.\n   */\n  static fromRect(rect?: ?DOMRectLike): DOMRect {\n    if (!rect) {\n      return new DOMRect();\n    }\n\n    return new DOMRect(rect.x, rect.y, rect.width, rect.height);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),\n * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n */\n\n// flowlint sketchy-null:off, unsafe-getters-setters:off\n\nexport interface DOMRectLike {\n  x?: ?number;\n  y?: ?number;\n  width?: ?number;\n  height?: ?number;\n}\n\nfunction castToNumber(value: mixed): number {\n  return value ? Number(value) : 0;\n}\n\n/**\n * The `DOMRectReadOnly` interface specifies the standard properties used by `DOMRect` to define a rectangle whose properties are immutable.\n *\n * This is a (mostly) spec-compliant version of `DOMRectReadOnly` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n */\nexport default class DOMRectReadOnly {\n  #x: number;\n  #y: number;\n  #width: number;\n  #height: number;\n\n  constructor(x: ?number, y: ?number, width: ?number, height: ?number) {\n    this.__setInternalX(x);\n    this.__setInternalY(y);\n    this.__setInternalWidth(width);\n    this.__setInternalHeight(height);\n  }\n\n  /**\n   * The x coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get x(): number {\n    return this.#x;\n  }\n\n  /**\n   * The y coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get y(): number {\n    return this.#y;\n  }\n\n  /**\n   * The width of the `DOMRectReadOnly`.\n   */\n  get width(): number {\n    return this.#width;\n  }\n\n  /**\n   * The height of the `DOMRectReadOnly`.\n   */\n  get height(): number {\n    return this.#height;\n  }\n\n  /**\n   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).\n   */\n  get top(): number {\n    const height = this.#height;\n    const y = this.#y;\n\n    if (height < 0) {\n      return y + height;\n    }\n\n    return y;\n  }\n\n  /**\n   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).\n   */\n  get right(): number {\n    const width = this.#width;\n    const x = this.#x;\n\n    if (width < 0) {\n      return x;\n    }\n\n    return x + width;\n  }\n\n  /**\n   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).\n   */\n  get bottom(): number {\n    const height = this.#height;\n    const y = this.#y;\n\n    if (height < 0) {\n      return y;\n    }\n\n    return y + height;\n  }\n\n  /**\n   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).\n   */\n  get left(): number {\n    const width = this.#width;\n    const x = this.#x;\n\n    if (width < 0) {\n      return x + width;\n    }\n\n    return x;\n  }\n\n  toJSON(): {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    top: number,\n    left: number,\n    bottom: number,\n    right: number,\n  } {\n    const {x, y, width, height, top, left, bottom, right} = this;\n    return {x, y, width, height, top, left, bottom, right};\n  }\n\n  /**\n   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.\n   */\n  static fromRect(rect?: ?DOMRectLike): DOMRectReadOnly {\n    if (!rect) {\n      return new DOMRectReadOnly();\n    }\n\n    return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);\n  }\n\n  __getInternalX(): number {\n    return this.#x;\n  }\n\n  __getInternalY(): number {\n    return this.#y;\n  }\n\n  __getInternalWidth(): number {\n    return this.#width;\n  }\n\n  __getInternalHeight(): number {\n    return this.#height;\n  }\n\n  __setInternalX(x: ?number) {\n    this.#x = castToNumber(x);\n  }\n\n  __setInternalY(y: ?number) {\n    this.#y = castToNumber(y);\n  }\n\n  __setInternalWidth(width: ?number) {\n    this.#width = castToNumber(width);\n  }\n\n  __setInternalHeight(height: ?number) {\n    this.#height = castToNumber(height);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../../../../Libraries/Components/TextInput/TextInputState';\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport {create as createAttributePayload} from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';\nimport warnForStyleProps from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps';\nimport ReadOnlyElement, {getBoundingClientRect} from './ReadOnlyElement';\nimport ReadOnlyNode from './ReadOnlyNode';\nimport {\n  getPublicInstanceFromInternalInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport nullthrows from 'nullthrows';\n\nconst noop = () => {};\n\nexport default class ReactNativeElement\n  extends ReadOnlyElement\n  implements INativeMethods\n{\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  #viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    super(internalInstanceHandle);\n\n    this.__nativeTag = tag;\n    this.__internalInstanceHandle = internalInstanceHandle;\n    this.#viewConfig = viewConfig;\n  }\n\n  get offsetHeight(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).height,\n    );\n  }\n\n  get offsetLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      return Math.round(offset[2]);\n    }\n\n    return 0;\n  }\n\n  get offsetParent(): ReadOnlyElement | null {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      // For children of the root node we currently return offset data\n      // but a `null` parent because the root node is not accessible\n      // in JavaScript yet.\n      if (offset[0] != null) {\n        const offsetParentInstanceHandle = offset[0];\n        const offsetParent = getPublicInstanceFromInternalInstanceHandle(\n          offsetParentInstanceHandle,\n        );\n        // $FlowExpectedError[incompatible-type] The value returned by `getOffset` is always an instance handle for `ReadOnlyElement`.\n        const offsetParentElement: ReadOnlyElement | null = offsetParent;\n        return offsetParentElement;\n      }\n    }\n\n    return null;\n  }\n\n  get offsetTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      return Math.round(offset[1]);\n    }\n\n    return 0;\n  }\n\n  get offsetWidth(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).width,\n    );\n  }\n\n  /**\n   * React Native compatibility methods\n   */\n\n  blur(): void {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (!(relativeToNativeNode instanceof ReadOnlyNode)) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getShadowNode(this);\n    const fromStateNode = getShadowNode(relativeToNativeNode);\n\n    if (toStateNode != null && fromStateNode != null) {\n      nullthrows(getFabricUIManager()).measureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this.#viewConfig.validAttributes);\n    }\n\n    const updatePayload = createAttributePayload(\n      nativeProps,\n      this.#viewConfig.validAttributes,\n    );\n\n    const node = getShadowNode(this);\n\n    if (node != null && updatePayload != null) {\n      nullthrows(getFabricUIManager()).setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport ReadOnlyNode, {getShadowNode} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport {getElementSibling} from './utilities/Traversal';\n\nexport default class ReadOnlyCharacterData extends ReadOnlyNode {\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get data(): string {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return NativeDOM.getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  /**\n   * @override\n   */\n  get textContent(): string | null {\n    return this.data;\n  }\n\n  /**\n   * @override\n   */\n  get nodeValue(): string {\n    return this.data;\n  }\n\n  substringData(offset: number, count: number): string {\n    const data = this.data;\n    if (offset < 0) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`,\n      );\n    }\n    if (offset > data.length) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`,\n      );\n    }\n    let adjustedCount = count < 0 || count > data.length ? data.length : count;\n    return data.slice(offset, offset + adjustedCount);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type HTMLCollection from '../oldstylecollections/HTMLCollection';\n\nimport DOMRect from '../geometry/DOMRect';\nimport {createHTMLCollection} from '../oldstylecollections/HTMLCollection';\nimport ReadOnlyNode, {\n  getChildNodes,\n  getInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport {getElementSibling} from './utilities/Traversal';\n\nexport default class ReadOnlyElement extends ReadOnlyNode {\n  get childElementCount(): number {\n    return getChildElements(this).length;\n  }\n\n  get children(): HTMLCollection<ReadOnlyElement> {\n    return createHTMLCollection(getChildElements(this));\n  }\n\n  get clientHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = NativeDOM.getInnerSize(node);\n      return innerSize[1];\n    }\n\n    return 0;\n  }\n\n  get clientLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = NativeDOM.getBorderWidth(node);\n      return borderSize[3];\n    }\n\n    return 0;\n  }\n\n  get clientTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = NativeDOM.getBorderWidth(node);\n      return borderSize[0];\n    }\n\n    return 0;\n  }\n\n  get clientWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = NativeDOM.getInnerSize(node);\n      return innerSize[0];\n    }\n\n    return 0;\n  }\n\n  get firstElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[0];\n  }\n\n  get id(): string {\n    const instanceHandle = getInstanceHandle(this);\n    // TODO: migrate off this private React API\n    // $FlowExpectedError[incompatible-use]\n    const props = instanceHandle?.stateNode?.canonical?.currentProps;\n    return props?.id ?? props?.nativeID ?? '';\n  }\n\n  get lastElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[childElements.length - 1];\n  }\n\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get nodeName(): string {\n    return this.tagName;\n  }\n\n  get nodeType(): number {\n    return ReadOnlyNode.ELEMENT_NODE;\n  }\n\n  get nodeValue(): string | null {\n    return null;\n  }\n\n  set nodeValue(value: string): void {}\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get scrollHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = NativeDOM.getScrollSize(node);\n      return scrollSize[1];\n    }\n\n    return 0;\n  }\n\n  get scrollLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = NativeDOM.getScrollPosition(node);\n      return scrollPosition[0];\n    }\n\n    return 0;\n  }\n\n  get scrollTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = NativeDOM.getScrollPosition(node);\n      return scrollPosition[1];\n    }\n\n    return 0;\n  }\n\n  get scrollWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = NativeDOM.getScrollSize(node);\n      return scrollSize[0];\n    }\n\n    return 0;\n  }\n\n  get tagName(): string {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      return NativeDOM.getTagName(node);\n    }\n\n    return '';\n  }\n\n  get textContent(): string | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return NativeDOM.getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  getBoundingClientRect(): DOMRect {\n    return getBoundingClientRect(this, {includeTransform: true});\n  }\n\n  /**\n   * Pointer Capture APIs\n   */\n  hasPointerCapture(pointerId: number): boolean {\n    const node = getShadowNode(this);\n    if (node != null) {\n      return NativeDOM.hasPointerCapture(node, pointerId);\n    }\n    return false;\n  }\n\n  setPointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      NativeDOM.setPointerCapture(node, pointerId);\n    }\n  }\n\n  releasePointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      NativeDOM.releasePointerCapture(node, pointerId);\n    }\n  }\n}\n\nfunction getChildElements(node: ReadOnlyNode): $ReadOnlyArray<ReadOnlyElement> {\n  // $FlowIssue[incompatible-call]\n  return getChildNodes(node).filter(\n    childNode => childNode instanceof ReadOnlyElement,\n  );\n}\n\n/**\n * The public API for `getBoundingClientRect` always includes transform,\n * so we use this internal version to get the data without transform to\n * implement methods like `offsetWidth` and `offsetHeight`.\n */\nexport function getBoundingClientRect(\n  node: ReadOnlyElement,\n  {includeTransform}: {includeTransform: boolean},\n): DOMRect {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode != null) {\n    const rect = NativeDOM.getBoundingClientRect(shadowNode, includeTransform);\n    return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n  }\n\n  // Empty rect if any of the above failed\n  return new DOMRect(0, 0, 0, 0);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  InternalInstanceHandle,\n  Node as ShadowNode,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type NodeList from '../oldstylecollections/NodeList';\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {createNodeList} from '../oldstylecollections/NodeList';\nimport NativeDOM from './specs/NativeDOM';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `ReadOnlyNode`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport default class ReadOnlyNode {\n  constructor(internalInstanceHandle: InternalInstanceHandle) {\n    setInstanceHandle(this, internalInstanceHandle);\n  }\n\n  get childNodes(): NodeList<ReadOnlyNode> {\n    const childNodes = getChildNodes(this);\n    return createNodeList(childNodes);\n  }\n\n  get firstChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[0];\n  }\n\n  get isConnected(): boolean {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return false;\n    }\n\n    return NativeDOM.isConnected(shadowNode);\n  }\n\n  get lastChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[childNodes.length - 1];\n  }\n\n  get nextSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === siblings.length - 1) {\n      // this node is the last child of its parent, so there is no next sibling.\n      return null;\n    }\n\n    return siblings[position + 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeName(): string {\n    throw new TypeError(\n      '`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeType(): number {\n    throw new TypeError(\n      '`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeValue(): string | null {\n    throw new TypeError(\n      '`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  get parentElement(): ReadOnlyElement | null {\n    const parentNode = this.parentNode;\n\n    if (ReadOnlyElementClass == null) {\n      // We initialize this lazily to avoid a require cycle.\n      ReadOnlyElementClass = require('./ReadOnlyElement').default;\n    }\n\n    if (parentNode instanceof ReadOnlyElementClass) {\n      return parentNode;\n    }\n\n    return null;\n  }\n\n  get parentNode(): ReadOnlyNode | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return null;\n    }\n\n    const parentInstanceHandle = NativeDOM.getParentNode(shadowNode);\n\n    if (parentInstanceHandle == null) {\n      return null;\n    }\n\n    return (\n      getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle) ?? null\n    );\n  }\n\n  get previousSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === 0) {\n      // this node is the first child of its parent, so there is no previous sibling.\n      return null;\n    }\n\n    return siblings[position - 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get textContent(): string | null {\n    throw new TypeError(\n      '`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  compareDocumentPosition(otherNode: ReadOnlyNode): number {\n    // Quick check to avoid having to call into Fabric if the nodes are the same.\n    if (otherNode === this) {\n      return 0;\n    }\n\n    const shadowNode = getShadowNode(this);\n    const otherShadowNode = getShadowNode(otherNode);\n\n    if (shadowNode == null || otherShadowNode == null) {\n      return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n    }\n\n    return NativeDOM.compareDocumentPosition(shadowNode, otherShadowNode);\n  }\n\n  contains(otherNode: ReadOnlyNode): boolean {\n    if (otherNode === this) {\n      return true;\n    }\n\n    const position = this.compareDocumentPosition(otherNode);\n    // eslint-disable-next-line no-bitwise\n    return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n  }\n\n  getRootNode(): ReadOnlyNode {\n    // eslint-disable-next-line consistent-this\n    let lastKnownParent: ReadOnlyNode = this;\n    let nextPossibleParent: ?ReadOnlyNode = this.parentNode;\n\n    while (nextPossibleParent != null) {\n      lastKnownParent = nextPossibleParent;\n      nextPossibleParent = nextPossibleParent.parentNode;\n    }\n\n    return lastKnownParent;\n  }\n\n  hasChildNodes(): boolean {\n    return getChildNodes(this).length > 0;\n  }\n\n  /*\n   * Node types, as returned by the `nodeType` property.\n   */\n\n  /**\n   * Type of Element, HTMLElement and ReactNativeElement instances.\n   */\n  static ELEMENT_NODE: number = 1;\n  /**\n   * Currently Unused in React Native.\n   */\n  static ATTRIBUTE_NODE: number = 2;\n  /**\n   * Text nodes.\n   */\n  static TEXT_NODE: number = 3;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static CDATA_SECTION_NODE: number = 4;\n  /**\n   * @deprecated\n   */\n  static ENTITY_REFERENCE_NODE: number = 5;\n  /**\n   * @deprecated\n   */\n  static ENTITY_NODE: number = 6;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static PROCESSING_INSTRUCTION_NODE: number = 7;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static COMMENT_NODE: number = 8;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_NODE: number = 9;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_TYPE_NODE: number = 10;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_FRAGMENT_NODE: number = 11;\n  /**\n   * @deprecated\n   */\n  static NOTATION_NODE: number = 12;\n\n  /*\n   * Document position flags. Used to check the return value of\n   * `compareDocumentPosition()`.\n   */\n\n  /**\n   * Both nodes are in different documents.\n   */\n  static DOCUMENT_POSITION_DISCONNECTED: number = 1;\n  /**\n   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_PRECEDING: number = 2;\n  /**\n   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_FOLLOWING: number = 4;\n  /**\n   * `otherNode` is an ancestor of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINS: number = 8;\n  /**\n   * `otherNode` is a descendant of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINED_BY: number = 16;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number = 32;\n}\n\nconst INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n\nexport function getInstanceHandle(node: ReadOnlyNode): InternalInstanceHandle {\n  // $FlowExpectedError[prop-missing]\n  return node[INSTANCE_HANDLE_KEY];\n}\n\nfunction setInstanceHandle(\n  node: ReadOnlyNode,\n  instanceHandle: InternalInstanceHandle,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\n\nexport function getShadowNode(node: ReadOnlyNode): ?ShadowNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const RendererProxy = require('../../../../../Libraries/ReactNative/RendererProxy');\n  return RendererProxy.getNodeFromInternalInstanceHandle(\n    getInstanceHandle(node),\n  );\n}\n\nexport function getChildNodes(\n  node: ReadOnlyNode,\n): $ReadOnlyArray<ReadOnlyNode> {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode == null) {\n    return [];\n  }\n\n  const childNodeInstanceHandles = NativeDOM.getChildNodes(shadowNode);\n  return childNodeInstanceHandles\n    .map(instanceHandle =>\n      getPublicInstanceFromInternalInstanceHandle(instanceHandle),\n    )\n    .filter(Boolean);\n}\n\nfunction getNodeSiblingsAndPosition(\n  node: ReadOnlyNode,\n): [$ReadOnlyArray<ReadOnlyNode>, number] {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return [[node], 0];\n  }\n\n  const siblings = getChildNodes(parent);\n  const position = siblings.indexOf(node);\n\n  if (position === -1) {\n    throw new TypeError(\"Missing node in parent's child node list\");\n  }\n\n  return [siblings, position];\n}\n\nexport function getPublicInstanceFromInternalInstanceHandle(\n  instanceHandle: InternalInstanceHandle,\n): ?ReadOnlyNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const RendererProxy = require('../../../../../Libraries/ReactNative/RendererProxy');\n  const mixedPublicInstance =\n    RendererProxy.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n  return mixedPublicInstance;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\n\nexport default class ReadOnlyText extends ReadOnlyCharacterData {\n  /**\n   * @override\n   */\n  get nodeName(): string {\n    return '#text';\n  }\n\n  /**\n   * @override\n   */\n  get nodeType(): number {\n    return ReadOnlyNode.TEXT_NODE;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {\n  InternalInstanceHandle as InstanceHandle,\n  Node as ShadowNode,\n} from '../../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {TurboModule} from '../../../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../../../Libraries/TurboModule/TurboModuleRegistry';\nimport nullthrows from 'nullthrows';\n\nexport type MeasureInWindowOnSuccessCallback = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => void;\n\nexport type MeasureOnSuccessCallback = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  pageX: number,\n  pageY: number,\n) => void;\n\nexport type MeasureLayoutOnSuccessCallback = (\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) => void;\n\nexport interface Spec extends TurboModule {\n  +getParentNode: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => mixed /* ?InstanceHandle */;\n\n  +getChildNodes: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<mixed> /* $ReadOnlyArray<InstanceHandle> */;\n\n  +isConnected: (shadowNode: mixed /* ShadowNode */) => boolean;\n\n  +compareDocumentPosition: (\n    shadowNode: mixed /* ShadowNode */,\n    otherShadowNode: mixed /* ShadowNode */,\n  ) => number;\n\n  +getTextContent: (shadowNode: mixed /* ShadowNode */) => string;\n\n  +getBoundingClientRect: (\n    shadowNode: mixed /* ShadowNode */,\n    includeTransform: boolean,\n  ) => $ReadOnlyArray<number> /* [x: number, y: number, width: number, height: number] */;\n\n  +getOffset: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<mixed> /* [offsetParent: ?InstanceHandle, top: number, left: number] */;\n\n  +getScrollPosition: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [scrollLeft: number, scrollTop: number] */;\n\n  +getScrollSize: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [scrollWidth: number, scrollHeight: number] */;\n\n  +getInnerSize: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [width: number, height: number] */;\n\n  +getBorderWidth: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [topWidth: number, rightWidth: number, bottomWidth: number, leftWidth: number] */;\n\n  +getTagName: (shadowNode: mixed /* ShadowNode */) => string;\n\n  +hasPointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => boolean;\n\n  +setPointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => void;\n\n  +releasePointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => void;\n\n  /**\n   * Legacy layout APIs\n   */\n\n  +measure: (shadowNode: mixed, callback: MeasureOnSuccessCallback) => void;\n\n  +measureInWindow: (\n    shadowNode: mixed,\n    callback: MeasureInWindowOnSuccessCallback,\n  ) => void;\n\n  +measureLayout: (\n    shadowNode: mixed,\n    relativeNode: mixed,\n    onFail: () => void,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n  ) => void;\n}\n\nconst RawNativeDOM = (TurboModuleRegistry.get<Spec>('NativeDOMCxx'): ?Spec);\n\n// This is the actual interface of this module, but the native module codegen\n// isn't expressive enough yet.\nexport interface RefinedSpec {\n  /**\n   * This is a React Native implementation of `Node.prototype.parentNode`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode).\n   *\n   * If a version of the given shadow node is present in the current revision of\n   * an active shadow tree, it returns the instance handle of its parent.\n   * Otherwise, it returns `null`.\n   */\n  +getParentNode: (shadowNode: ShadowNode) => ?InstanceHandle;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.childNodes`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes).\n   *\n   * If a version of the given shadow node is present in the current revision\n   * of an active shadow tree, it returns an array of instance handles of its\n   * children. Otherwise, it returns an empty array.\n   */\n  +getChildNodes: (shadowNode: ShadowNode) => $ReadOnlyArray<InstanceHandle>;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.isConnected`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected).\n   *\n   * Indicates whether a version of the given shadow node is present in the\n   * current revision of an active shadow tree.\n   */\n  +isConnected: (shadowNode: ShadowNode) => boolean;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.compareDocumentPosition`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition).\n   *\n   * It uses the version of the shadow nodes that are present in the current\n   * revision of the shadow tree (if any). If any of the nodes is not present,\n   * it just indicates they are disconnected.\n   */\n  +compareDocumentPosition: (\n    shadowNode: ShadowNode,\n    otherShadowNode: ShadowNode,\n  ) => number;\n\n  /**\n   * This is a React Native implementation of `Element.prototype.textContent`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Element/textContent).\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree.\n   * If the version is present, is traverses all its children in DFS and\n   * concatenates all the text contents. Otherwise, it returns an empty string.\n   *\n   * This is also used to access the text content of text nodes, which does not\n   * need any traversal.\n   */\n  +getTextContent: (shadowNode: ShadowNode) => string;\n\n  /**\n   * This is a React Native implementation of `Element.prototype.getBoundingClientRect`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect).\n   *\n   * This is similar to `measureInWindow`, except it's explicitly synchronous\n   * (returns the result instead of passing it to a callback).\n   *\n   * It allows indicating whether to include transforms so it can also be used\n   * to implement methods like [`offsetWidth`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth)\n   * and [`offsetHeight`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight).\n   */\n  +getBoundingClientRect: (\n    shadowNode: ShadowNode,\n    includeTransform: boolean,\n  ) => $ReadOnly<\n    [\n      /* x: */ number,\n      /* y: */ number,\n      /* width: */ number,\n      /* height: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access the offset information for a shadow node, to\n   * implement these methods:\n   *   - `HTMLElement.prototype.offsetParent`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent.\n   *   - `HTMLElement.prototype.offsetTop`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetTop.\n   *   - `HTMLElement.prototype.offsetLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not\n   * displayed (because any of its ancestors or itself have 'display: none'),\n   * it returns `undefined`. Otherwise, it returns its parent (as all nodes in\n   * React Native are currently \"positioned\") and its offset relative to its\n   * parent.\n   */\n  +getOffset: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<\n    [\n      /* offsetParent: */ ?InstanceHandle,\n      /* top: */ number,\n      /* left: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access scroll information for a shadow node, to\n   * implement these methods:\n   *   - `Element.prototype.scrollLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft.\n   *   - `Element.prototype.scrollTop`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not displayed\n   * (because any of its ancestors or itself have 'display: none'), it returns\n   * `undefined`. Otherwise, it returns the scroll position.\n   */\n  +getScrollPosition: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* scrollLeft: */ number, /* scrollTop: */ number]>;\n\n  /**\n   *\n   * This is a method to access the scroll information of a shadow node, to\n   * implement these methods:\n   *   - `Element.prototype.scrollWidth`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth.\n   *   - `Element.prototype.scrollHeight`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not displayed\n   * (because any of its ancestors or itself have 'display: none'), it returns\n   * `undefined`. Otherwise, it returns the scroll size.\n   */\n  +getScrollSize: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* scrollWidth: */ number, /* scrollHeight: */ number]>;\n\n  /**\n   * This is a method to access the inner size of a shadow node, to implement\n   * these methods:\n   *   - `Element.prototype.clientWidth`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth.\n   *   - `Element.prototype.clientHeight`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present, it is not\n   * displayed (because any of its ancestors or itself have 'display: none'), or\n   * it has an inline display, it returns `undefined`. Otherwise, it returns its\n   * inner size.\n   */\n  +getInnerSize: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* width: */ number, /* height: */ number]>;\n\n  /**\n   * This is a method to access the border size of a shadow node, to implement\n   * these methods:\n   *   - `Element.prototype.clientLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft.\n   *   - `Element.prototype.clientTop`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present, it is not\n   * displayed (because any of its ancestors or itself have 'display: none'), or\n   * it has an inline display, it returns `undefined`. Otherwise, it returns its\n   * border size.\n   */\n  +getBorderWidth: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<\n    [\n      /* topWidth: */ number,\n      /* rightWidth: */ number,\n      /* bottomWidth: */ number,\n      /* leftWidth: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access the normalized tag name of a shadow node, to\n   * implement `Element.prototype.tagName` (see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName).\n   */\n  +getTagName: (shadowNode: ShadowNode) => string;\n\n  /**\n   * Pointer Capture APIs\n   */\n\n  +hasPointerCapture: (shadowNode: ShadowNode, pointerId: number) => boolean;\n\n  +setPointerCapture: (shadowNode: ShadowNode, pointerId: number) => void;\n\n  +releasePointerCapture: (shadowNode: ShadowNode, pointerId: number) => void;\n\n  /**\n   * Legacy layout APIs\n   */\n\n  +measure: (\n    shadowNode: ShadowNode,\n    callback: MeasureOnSuccessCallback,\n  ) => void;\n\n  +measureInWindow: (\n    shadowNode: ShadowNode,\n    callback: MeasureInWindowOnSuccessCallback,\n  ) => void;\n\n  +measureLayout: (\n    shadowNode: ShadowNode,\n    relativeNode: ShadowNode,\n    onFail: () => void,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n  ) => void;\n}\n\nconst NativeDOM: RefinedSpec = {\n  getParentNode(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getParentNode(\n      shadowNode,\n    ): ?InstanceHandle);\n  },\n\n  getChildNodes(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getChildNodes(\n      shadowNode,\n    ): $ReadOnlyArray<InstanceHandle>);\n  },\n\n  isConnected(shadowNode) {\n    return nullthrows(RawNativeDOM).isConnected(shadowNode);\n  },\n\n  compareDocumentPosition(shadowNode, otherShadowNode) {\n    return nullthrows(RawNativeDOM).compareDocumentPosition(\n      shadowNode,\n      otherShadowNode,\n    );\n  },\n\n  getTextContent(shadowNode) {\n    return nullthrows(RawNativeDOM).getTextContent(shadowNode);\n  },\n\n  getBoundingClientRect(shadowNode, includeTransform: boolean) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getBoundingClientRect(\n      shadowNode,\n      includeTransform,\n    ): $ReadOnly<\n      [\n        /* x: */ number,\n        /* y: */ number,\n        /* width: */ number,\n        /* height: */ number,\n      ],\n    >);\n  },\n\n  getOffset(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getOffset(shadowNode): $ReadOnly<\n      [\n        /* offsetParent: */ ?InstanceHandle,\n        /* top: */ number,\n        /* left: */ number,\n      ],\n    >);\n  },\n\n  getScrollPosition(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getScrollPosition(shadowNode): $ReadOnly<\n      [/* scrollLeft: */ number, /* scrollTop: */ number],\n    >);\n  },\n\n  getScrollSize(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getScrollSize(shadowNode): $ReadOnly<\n      [/* scrollWidth: */ number, /* scrollHeight: */ number],\n    >);\n  },\n\n  getInnerSize(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getInnerSize(shadowNode): $ReadOnly<\n      [/* width: */ number, /* height: */ number],\n    >);\n  },\n\n  getBorderWidth(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getBorderWidth(shadowNode): $ReadOnly<\n      [\n        /* topWidth: */ number,\n        /* rightWidth: */ number,\n        /* bottomWidth: */ number,\n        /* leftWidth: */ number,\n      ],\n    >);\n  },\n\n  getTagName(shadowNode) {\n    return nullthrows(RawNativeDOM).getTagName(shadowNode);\n  },\n\n  hasPointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).hasPointerCapture(shadowNode, pointerId);\n  },\n\n  setPointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).setPointerCapture(shadowNode, pointerId);\n  },\n\n  releasePointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).releasePointerCapture(\n      shadowNode,\n      pointerId,\n    );\n  },\n\n  /**\n   * Legacy layout APIs\n   */\n\n  measure(shadowNode, callback) {\n    return nullthrows(RawNativeDOM).measure(shadowNode, callback);\n  },\n\n  measureInWindow(shadowNode, callback) {\n    return nullthrows(RawNativeDOM).measureInWindow(shadowNode, callback);\n  },\n\n  measureLayout(shadowNode, relativeNode, onFail, onSuccess) {\n    return nullthrows(RawNativeDOM).measureLayout(\n      shadowNode,\n      relativeNode,\n      onFail,\n      onSuccess,\n    );\n  },\n};\n\nexport default NativeDOM;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\n\nimport {getChildNodes} from '../ReadOnlyNode';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `Traversal`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport function getElementSibling(\n  node: ReadOnlyNode,\n  direction: 'next' | 'previous',\n): ReadOnlyElement | null {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return null;\n  }\n\n  const childNodes = getChildNodes(parent);\n\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n\n  const increment = direction === 'next' ? 1 : -1;\n\n  let position = startPosition + increment;\n\n  if (ReadOnlyElementClass == null) {\n    // We initialize this lazily to avoid a require cycle.\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n\n  while (\n    childNodes[position] != null &&\n    !(childNodes[position] instanceof ReadOnlyElementClass)\n  ) {\n    position = position + increment;\n  }\n\n  return childNodes[position] ?? null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n/**\n * This definition is different from the current built-in type `$ArrayLike`\n * provided by Flow, in that this is an interface and that one is an object.\n *\n * The difference is important because, when using objects, Flow thinks\n * a `length` property would be copied over when using the spread operator,\n * which is incorrect.\n */\nexport interface ArrayLike<T> extends Iterable<T> {\n  // This property should've been read-only as well, but Flow doesn't handle\n  // read-only indexers correctly (thinks reads are writes and fails).\n  [indexer: number]: T;\n  +length: number;\n}\n\nexport function* createValueIterator<T>(arrayLike: ArrayLike<T>): Iterator<T> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield arrayLike[i];\n  }\n}\n\nexport function* createKeyIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<number> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield i;\n  }\n}\n\nexport function* createEntriesIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<[number, T]> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield [i, arrayLike[i]];\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {createValueIterator} from './ArrayLikeUtils';\n\n// IMPORTANT: The type definition for this module is defined in `HTMLCollection.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class HTMLCollection<T> implements Iterable<T>, ArrayLike<T> {\n  #length: number;\n\n  /**\n   * Use `createHTMLCollection` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        enumerable: true,\n        configurable: false,\n        writable: false,\n      });\n    }\n\n    this.#length = elements.length;\n  }\n\n  get length(): number {\n    return this.#length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this.#length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  /**\n   * @deprecated Unused in React Native.\n   */\n  namedItem(name: string): T | null {\n    return null;\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `HTMLCollection`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `HTMLCollection` lives in\n * `HTMLCollection.js.flow`, not here.\n */\nexport function createHTMLCollection<T>(\n  elements: $ReadOnlyArray<T>,\n): HTMLCollection<T> {\n  return new HTMLCollection(elements);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {\n  createEntriesIterator,\n  createKeyIterator,\n  createValueIterator,\n} from './ArrayLikeUtils';\n\n// IMPORTANT: The Flow type definition for this module is defined in `NodeList.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class NodeList<T> implements Iterable<T>, ArrayLike<T> {\n  #length: number;\n\n  /**\n   * Use `createNodeList` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        writable: false,\n      });\n    }\n    this.#length = elements.length;\n  }\n\n  get length(): number {\n    return this.#length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this.#length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  entries(): Iterator<[number, T]> {\n    return createEntriesIterator(this);\n  }\n\n  forEach<ThisType>(\n    callbackFn: (value: T, index: number, array: NodeList<T>) => mixed,\n    thisArg?: ThisType,\n  ): void {\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n\n    for (let index = 0; index < this.#length; index++) {\n      if (thisArg == null) {\n        callbackFn(arrayLike[index], index, this);\n      } else {\n        callbackFn.call(thisArg, arrayLike[index], index, this);\n      }\n    }\n  }\n\n  keys(): Iterator<number> {\n    return createKeyIterator(this);\n  }\n\n  values(): Iterator<T> {\n    return createValueIterator(this);\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `NodeList`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `NodeList` lives in\n * `NodeList.js.flow`, not here.\n */\nexport function createNodeList<T>(elements: $ReadOnlyArray<T>): NodeList<T> {\n  return new NodeList(elements);\n}\n"],"names":["_NativeAccessibilityManager","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","WeakMap","keys","forEach","key","prototype","_exportNames","exports","enumerable","NativeAccessibilityManager","_interopRequireDefault","module","reactTag","eventType","setAccessibilityFocus","NativeComponentRegistry","_codegenNativeCommands","codegenNativeCommands","supportedCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topEndEditing","topFocus","topKeyPress","topSubmitEditing","directEventTypes","topScroll","registrationName","validAttributes","maxFontSizeMultiplier","adjustsFontSizeToFit","minimumFontScale","autoFocus","placeholder","inlineImagePadding","contextMenuHidden","textShadowColor","process","maxLength","selectTextOnFocus","textShadowRadius","underlineColorAndroid","textDecorationLine","submitBehavior","textAlignVertical","fontStyle","textShadowOffset","selectionColor","selectionHandleColor","placeholderTextColor","importantForAutofill","lineHeight","textTransform","returnKeyType","keyboardType","multiline","color","autoComplete","numberOfLines","letterSpacing","returnKeyLabel","fontSize","onKeyPress","cursorColor","text","showSoftInputOnFocus","textAlign","autoCapitalize","autoCorrect","caretHidden","secureTextEntry","textBreakStrategy","onScroll","onContentSizeChange","disableFullscreenUI","includeFontPadding","fontWeight","fontFamily","allowFontScaling","onSelectionChange","mostRecentEventCount","inlineImageLeft","editable","fontVariant","borderBottomRightRadius","borderBottomColor","borderRadius","borderRightColor","borderColor","borderTopRightRadius","borderStyle","borderBottomLeftRadius","borderLeftColor","borderTopLeftRadius","borderTopColor","AndroidTextInputNativeComponent","_RCTTextInputViewConfig","assign","RCTTextInputViewConfig","SinglelineTextInputNativeComponent","_ViewConfigIgnore","topChange","topTouchCancel","topTouchEnd","topTouchMove","topSelectionChange","topContentSizeChange","topChangeSync","topKeyPressSync","dynamicTypeRamp","diff","lineBreakModeIOS","isHighlighted","writingDirection","textDecorationStyle","textDecorationColor","inputAccessoryViewID","enablesReturnKeyAutomatically","clearButtonMode","selection","scrollEnabled","textContentType","keyboardAppearance","passwordRules","spellCheck","clearTextOnFocus","lineBreakStrategyIOS","smartInsertDelete","ConditionallyIgnoredEventHandlers","onChange","onChangeSync","onKeyPressSync","_AndroidTextInputNativeComponent","_RCTSingelineTextInputNativeComponent","findNodeHandle","Platform","currentlyFocusedInputRef","inputs","Set","focusInput","textField","blurInput","currentlyFocusedInput","currentlyFocusedField","focusField","textFieldID","__DEV__","blurField","focusTextInput","_textField$currentPro","currentProps","OS","iOSTextInputCommands","focus","AndroidTextInputCommands","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","RawEventEmitter","EventEmitter","_ExceptionsManager","ReactFiberErrorDialog","showErrorDialog","_ref","error","componentStack","errorValue","Error","SyntheticError","isComponentError","_unused","handleException","BatchedBridge","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","CustomEvent","_EventPolyfill","typeArg","options","_this","_classCallCheck2","o","bubbles","cancelable","composed","_getPrototypeOf2","_possibleConstructorReturn2","constructor","apply","detail","_inherits2","_createClass2","EventPolyfill","type","eventInitDict","this","scoped","isTrusted","timeStamp","Date","now","defaultPrevented","NONE","AT_TARGET","BUBBLING_PHASE","CAPTURING_PHASE","eventPhase","currentTarget","target","srcElement","value","_syntheticEvent","preventDefault","stopPropagation","Event","_TextInputState","_RendererProxy","_FabricUIManager","_ReactNativeAttributePayload","_nullthrows","nullthrows","getFabricUIManager","fabricMeasure","measure","fabricMeasureInWindow","measureInWindow","fabricMeasureLayout","measureLayout","fabricGetBoundingClientRect","getBoundingClientRect","setNativeProps","noop","ReactFabricHostComponent","tag","viewConfig","internalInstanceHandle","__nativeTag","_viewConfig","__internalInstanceHandle","TextInputState","callback","node","getNodeFromInternalInstanceHandle","relativeToNativeNode","onSuccess","onFail","toStateNode","fromStateNode","rect","DOMRect","nativeProps","updatePayload","create","PublicInstanceClass","ReactNativeFeatureFlags","enableAccessToHostTreeInFabric","ReadOnlyTextClass","publicInstance","_internalInstanceHandle","RendererProxy","props","addProperties","prevProps","nextProps","diffProperties","_flattenStyle","_deepDiffer","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","Array","isArray","length","obj","propKey","undefined","attributeConfig","nextValue","diffNestedProperty","prevArray","nextArray","minLength","clearNestedProperty","addNestedProperty","diffNestedArrayProperty","flattenStyle","clearProperties","ExceptionsManager","ReactNativeViewConfigRegistry","UIManager","deepFreezeAndThrowOnMutationInDev","legacySendAccessibilityEvent","createAttributePayload","diffAttributePayloads","createPublicInstance","createPublicTextInstance","getNativeTagFromPublicInstance","getNodeFromPublicInstance","getInternalInstanceHandleFromPublicInstance","style","result","styleLength","computedStyle","dispatchCommand","commandObj","command","ref","_len","arguments","args","_key","logListeners","one","two","maxDepthOrOptions","maxDepth","onDifferentFunctionsIgnored","name","len","ii","twoKey","unstable_setLogListeners","listeners","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","setOverrides","configName","defaultValue","createGetter","_overrides","_overrides$configName","accessedFeatureFlags","overrides","_NativeReactNativeFea","valueFromNative","NativeReactNativeFeatureFlags","reportedConfigNames","console","logUnavailableNativeModuleError","newOverrides","size","accessedFeatureFlagsStr","from","join","_NativeReactNativeFeatureFlags","customValueGetter","cachedValue","_customValueGetter","TurboModuleRegistry","_DOMRectReadOnly2","_DOMRectReadOnly","__getInternalX","x","__setInternalX","__getInternalY","y","__setInternalY","__getInternalWidth","width","__setInternalWidth","__getInternalHeight","height","__setInternalHeight","DOMRectReadOnly","castToNumber","Number","_x","_classPrivateFieldLooseKey2","_y","_width","_height","writable","_classPrivateFieldLooseBase2","top","left","bottom","right","_ReadOnlyElement2","_ReadOnlyNode","_NativeDOM","_ReadOnlyElement","ReactNativeElement","Math","round","includeTransform","getShadowNode","offset","NativeDOM","getOffset","offsetParentInstanceHandle","getPublicInstanceFromInternalInstanceHandle","ReadOnlyNode","ReadOnlyElement","_ReadOnlyNode2","_Traversal","ReadOnlyCharacterData","getElementSibling","shadowNode","getTextContent","data","count","TypeError","adjustedCount","slice","_DOMRect","_HTMLCollection","getChildElements","createHTMLCollection","getInnerSize","getBorderWidth","childElements","_instanceHandle$state","_props$id","instanceHandle","getInstanceHandle","stateNode","canonical","id","nativeID","tagName","ELEMENT_NODE","getScrollSize","getScrollPosition","getTagName","pointerId","hasPointerCapture","setPointerCapture","releasePointerCapture","getChildNodes","filter","childNode","_ref2","ReadOnlyElementClass","_NodeList","INSTANCE_HANDLE_KEY","childNodes","createNodeList","isConnected","_getNodeSiblingsAndPo","getNodeSiblingsAndPosition","_getNodeSiblingsAndPo2","_slicedToArray2","siblings","position","parentNode","_getPublicInstanceFro","parentInstanceHandle","getParentNode","_getNodeSiblingsAndPo3","_getNodeSiblingsAndPo4","otherNode","otherShadowNode","DOCUMENT_POSITION_DISCONNECTED","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","lastKnownParent","nextPossibleParent","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","Symbol","map","parent","indexOf","_ReadOnlyCharacterData","_ReadOnlyCharacterDat","ReadOnlyText","RawNativeDOM","relativeNode","direction","_childNodes$position","startPosition","increment","arrayLike","elements","HTMLCollection","_ArrayLikeUtils","_length","configurable","index","iterator","createValueIterator","NodeList","createEntriesIterator","callbackFn","thisArg","createKeyIterator"],"sourceRoot":""}