{"version":3,"file":"modules_auth_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts","webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/RCTAsyncStorage.ts","webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/helpers.ts","webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/hooks.ts","webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/index.ts","webpack:///../../modules/auth/node_modules/@react-native-async-storage/async-storage/src/shouldFallbackToLegacyNativeModule.ts","webpack:///../../modules/auth/src/constants/keys.ts","webpack:///../../modules/auth/src/constants/storage.ts","webpack:///../../modules/auth/src/index.tsx","webpack:///../../modules/auth/src/providers/AuthProvider.tsx","webpack:///../../modules/auth/src/reducers/authSlice.ts","webpack:///../../modules/auth/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///../../modules/auth/node_modules/react/jsx-runtime.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///../../modules/auth/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  checkValidArgs,\n  checkValidInput,\n  convertError,\n  convertErrors,\n} from \"./helpers\";\nimport RCTAsyncStorage from \"./RCTAsyncStorage\";\nimport type {\n  AsyncStorageStatic,\n  ErrorLike,\n  KeyValuePair,\n  MultiRequest,\n} from \"./types\";\n\nif (!RCTAsyncStorage) {\n  throw new Error(`[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\n\nTo fix this issue try these steps:\n\n  • Uninstall, rebuild and restart the app.\n\n  • Run the packager with \\`--reset-cache\\` flag.\n\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory, then rebuild and re-run the app.\n\n  • Make sure your project's \\`package.json\\` depends on \\`@react-native-async-storage/async-storage\\`, even if you only depend on it indirectly through other dependencies. CLI only autolinks native modules found in your \\`package.json\\`.\n\n  • If this happens while testing with Jest, check out how to integrate AsyncStorage here: https://react-native-async-storage.github.io/async-storage/docs/advanced/jest\n\nIf none of these fix the issue, please open an issue on the GitHub repository: https://github.com/react-native-async-storage/async-storage/issues\n`);\n}\n\n/**\n * `AsyncStorage` is a simple, unencrypted, asynchronous, persistent, key-value\n * storage system that is global to the app. It should be used instead of\n * LocalStorage.\n *\n * See https://react-native-async-storage.github.io/async-storage/docs/api\n */\nconst AsyncStorage = ((): AsyncStorageStatic => {\n  let _getRequests: MultiRequest[] = [];\n  let _getKeys: string[] = [];\n  let _immediate: ReturnType<typeof setImmediate> | null = null;\n\n  return {\n    /**\n     * Fetches an item for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#getitem\n     */\n    getItem: (key, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key);\n        RCTAsyncStorage.multiGet(\n          [key],\n          (errors?: ErrorLike[], result?: string[][]) => {\n            // Unpack result to get value from [[key,value]]\n            const value = result?.[0]?.[1] ? result[0][1] : null;\n            const errs = convertErrors(errors);\n            callback?.(errs?.[0], value);\n            if (errs) {\n              reject(errs[0]);\n            } else {\n              resolve(value);\n            }\n          }\n        );\n      });\n    },\n\n    /**\n     * Sets the value for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#setitem\n     */\n    setItem: (key, value, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiSet([[key, value]], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Removes an item for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#removeitem\n     */\n    removeItem: (key, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key);\n        RCTAsyncStorage.multiRemove([key], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Merges an existing `key` value with an input value, assuming both values\n     * are stringified JSON.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#mergeitem\n     */\n    mergeItem: (key, value, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiMerge([[key, value]], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Erases *all* `AsyncStorage` for all clients, libraries, etc. You probably\n     * don't want to call this; use `removeItem` or `multiRemove` to clear only\n     * your app's keys.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#clear\n     */\n    clear: (callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.clear((error?: ErrorLike) => {\n          const err = convertError(error);\n          callback?.(err);\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Gets *all* keys known to your app; for all callers, libraries, etc.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#getallkeys\n     */\n    getAllKeys: (callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.getAllKeys((error?: ErrorLike, keys?: string[]) => {\n          const err = convertError(error);\n          callback?.(err, keys);\n          if (keys) {\n            resolve(keys);\n          } else {\n            reject(err);\n          }\n        });\n      });\n    },\n\n    /**\n     * The following batched functions are useful for executing a lot of\n     * operations at once, allowing for native optimizations and provide the\n     * convenience of a single callback after all operations are complete.\n     *\n     * These functions return arrays of errors, potentially one for every key.\n     * For key-specific errors, the Error object will have a key property to\n     * indicate which key caused the error.\n     */\n\n    /**\n     * Flushes any pending requests using a single batch call to get the data.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#flushgetrequests\n     * */\n    flushGetRequests: () => {\n      const getRequests = _getRequests;\n      const getKeys = _getKeys;\n\n      _getRequests = [];\n      _getKeys = [];\n\n      RCTAsyncStorage.multiGet(\n        getKeys,\n        (errors?: ErrorLike[], result?: string[][]) => {\n          // Even though the runtime complexity of this is theoretically worse vs if we used a map,\n          // it's much, much faster in practice for the data sets we deal with (we avoid\n          // allocating result pair arrays). This was heavily benchmarked.\n          //\n          // Is there a way to avoid using the map but fix the bug in this breaking test?\n          // https://github.com/facebook/react-native/commit/8dd8ad76579d7feef34c014d387bf02065692264\n          const map: Record<string, string> = {};\n          result?.forEach(([key, value]) => {\n            map[key] = value;\n            return value;\n          });\n          const reqLength = getRequests.length;\n\n          /**\n           * As mentioned few lines above, this method could be called with the array of potential error,\n           * in case of anything goes wrong. The problem is, if any of the batched calls fails\n           * the rest of them would fail too, but the error would be consumed by just one. The rest\n           * would simply return `undefined` as their result, rendering false negatives.\n           *\n           * In order to avoid this situation, in case of any call failing,\n           * the rest of them will be rejected as well (with the same error).\n           */\n          const errorList = convertErrors(errors);\n          const error = errorList?.length ? errorList[0] : null;\n\n          for (let i = 0; i < reqLength; i++) {\n            const request = getRequests[i];\n            if (error) {\n              request.callback?.(errorList);\n              request.reject?.(error);\n              continue;\n            }\n            const requestResult = request.keys.map<KeyValuePair>((key) => [\n              key,\n              map[key],\n            ]);\n            request.callback?.(null, requestResult);\n            request.resolve?.(requestResult);\n          }\n        }\n      );\n    },\n\n    /**\n     * This allows you to batch the fetching of items given an array of `key`\n     * inputs. Your callback will be invoked with an array of corresponding\n     * key-value pairs found.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiget\n     */\n    multiGet: (keys, callback) => {\n      if (!_immediate) {\n        _immediate = setImmediate(() => {\n          _immediate = null;\n          AsyncStorage.flushGetRequests();\n        });\n      }\n\n      const getRequest: MultiRequest = {\n        keys: keys,\n        callback: callback,\n        // do we need this?\n        keyIndex: _getKeys.length,\n      };\n\n      const promiseResult = new Promise<readonly KeyValuePair[]>(\n        (resolve, reject) => {\n          getRequest.resolve = resolve;\n          getRequest.reject = reject;\n        }\n      );\n\n      _getRequests.push(getRequest);\n      // avoid fetching duplicates\n      keys.forEach((key) => {\n        if (_getKeys.indexOf(key) === -1) {\n          _getKeys.push(key);\n        }\n      });\n\n      return promiseResult;\n    },\n\n    /**\n     * Use this as a batch operation for storing multiple key-value pairs. When\n     * the operation completes you'll get a single callback with any errors.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiset\n     */\n    multiSet: (keyValuePairs, callback) => {\n      checkValidArgs(keyValuePairs, callback);\n      return new Promise((resolve, reject) => {\n        keyValuePairs.forEach(([key, value]) => {\n          checkValidInput(key, value);\n        });\n\n        RCTAsyncStorage.multiSet(keyValuePairs, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Call this to batch the deletion of all keys in the `keys` array.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiremove\n     */\n    multiRemove: (keys, callback) => {\n      return new Promise((resolve, reject) => {\n        keys.forEach((key) => checkValidInput(key));\n\n        RCTAsyncStorage.multiRemove(keys, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Batch operation to merge in existing and new values for a given set of\n     * keys. This assumes that the values are stringified JSON.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multimerge\n     */\n    multiMerge: (keyValuePairs, callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.multiMerge(keyValuePairs, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n  };\n})();\n\nexport default AsyncStorage;\n","import { NativeModules, TurboModuleRegistry } from \"react-native\";\nimport { shouldFallbackToLegacyNativeModule } from \"./shouldFallbackToLegacyNativeModule\";\n\n// TurboModuleRegistry falls back to NativeModules so we don't have to try go\n// assign NativeModules' counterparts if TurboModuleRegistry would resolve\n// with undefined.\nlet RCTAsyncStorage = TurboModuleRegistry\n  ? TurboModuleRegistry.get(\"PlatformLocalStorage\") || // Support for external modules, like react-native-windows\n    TurboModuleRegistry.get(\"RNC_AsyncSQLiteDBStorage\") ||\n    TurboModuleRegistry.get(\"RNCAsyncStorage\")\n  : NativeModules[\"PlatformLocalStorage\"] || // Support for external modules, like react-native-windows\n    NativeModules[\"RNC_AsyncSQLiteDBStorage\"] ||\n    NativeModules[\"RNCAsyncStorage\"];\n\nif (!RCTAsyncStorage && shouldFallbackToLegacyNativeModule()) {\n  if (TurboModuleRegistry) {\n    RCTAsyncStorage =\n      TurboModuleRegistry.get(\"AsyncSQLiteDBStorage\") ||\n      TurboModuleRegistry.get(\"AsyncLocalStorage\");\n  } else {\n    RCTAsyncStorage =\n      NativeModules[\"AsyncSQLiteDBStorage\"] ||\n      NativeModules[\"AsyncLocalStorage\"];\n  }\n}\n\nexport default RCTAsyncStorage;\n","import type { ErrorLike } from \"./types\";\n\nexport function checkValidArgs(\n  keyValuePairs: readonly unknown[],\n  callback: unknown\n) {\n  if (\n    !Array.isArray(keyValuePairs) ||\n    keyValuePairs.length === 0 ||\n    !Array.isArray(keyValuePairs[0])\n  ) {\n    throw new Error(\n      \"[AsyncStorage] Expected array of key-value pairs as first argument to multiSet\"\n    );\n  }\n\n  if (callback && typeof callback !== \"function\") {\n    if (Array.isArray(callback)) {\n      throw new Error(\n        \"[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?\"\n      );\n    }\n\n    throw new Error(\n      \"[AsyncStorage] Expected function as second argument to multiSet\"\n    );\n  }\n}\n\nexport function checkValidInput(...input: unknown[]) {\n  const [key, value] = input;\n\n  if (typeof key !== \"string\") {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `[AsyncStorage] Using ${typeof key} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${key}\\n`\n    );\n  }\n\n  if (input.length > 1 && typeof value !== \"string\") {\n    if (value == null) {\n      throw new Error(\n        `[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[AsyncStorage] The value for key \"${key}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    }\n  }\n}\n\nexport function convertError(error?: ErrorLike): Error | null {\n  if (!error) {\n    return null;\n  }\n\n  const out = new Error(error.message) as Error & ErrorLike;\n  out[\"key\"] = error.key;\n  return out;\n}\n\nexport function convertErrors(\n  errs?: ErrorLike[]\n): ReadonlyArray<Error | null> | null {\n  const errors = ensureArray(errs);\n  return errors ? errors.map((e) => convertError(e)) : null;\n}\n\nfunction ensureArray(e?: ErrorLike | ErrorLike[]): ErrorLike[] | null {\n  if (Array.isArray(e)) {\n    return e.length === 0 ? null : e;\n  } else if (e) {\n    return [e];\n  } else {\n    return null;\n  }\n}\n","import AsyncStorage from \"./AsyncStorage\";\nimport type { AsyncStorageHook } from \"./types\";\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n","import AsyncStorage from \"./AsyncStorage\";\n\nexport { useAsyncStorage } from \"./hooks\";\n\nexport type { AsyncStorageStatic } from \"./types\";\n\nexport default AsyncStorage;\n","import { NativeModules } from \"react-native\";\n\nexport function shouldFallbackToLegacyNativeModule(): boolean {\n  const expoConstants =\n    NativeModules[\"NativeUnimoduleProxy\"]?.modulesConstants?.ExponentConstants;\n\n  if (expoConstants) {\n    /**\n     * In SDK <= 39, appOwnership is defined in managed apps but executionEnvironment is not.\n     * In bare React Native apps using expo-constants, appOwnership is never defined, so\n     * isLegacySdkVersion will be false in that context.\n     */\n    const isLegacySdkVersion =\n      expoConstants.appOwnership && !expoConstants.executionEnvironment;\n\n    /**\n     * Expo managed apps don't include the @react-native-async-storage/async-storage\n     * native modules yet, but the API interface is the same, so we can use the version\n     * exported from React Native still.\n     *\n     * If in future releases (eg: @react-native-async-storage/async-storage >= 2.0.0) this\n     * will likely not be valid anymore, and the package will need to be included in the Expo SDK\n     * to continue to work.\n     */\n    if (\n      isLegacySdkVersion ||\n      [\"storeClient\", \"standalone\"].includes(expoConstants.executionEnvironment)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","export const AUTH_KEY = {\n  token: 'token',\n} as const;","\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { AUTH_KEY } from './keys';\nimport { ValueOf } from './types';\n\nexport const storeToSecureStorage = async (key: ValueOf<typeof AUTH_KEY>, data: string) => {\n  await AsyncStorage.setItem(key, data);\n}\n\nexport const getValueFromSecureStorage = async (key: ValueOf<typeof AUTH_KEY>) => {\n  return new Promise<string | null>((resolve) => {\n    AsyncStorage.getItem(key)\n      .then(res => {\n        if (res !== null) {\n          resolve(res);\n        } else {\n          resolve(null);\n        }\n      })\n      .catch(err => {\n        resolve(null);\n      });\n  });\n}\n\nexport const resetStorage = async () => {\n  await AsyncStorage.removeItem(AUTH_KEY.token);\n}","import AuthProvider from './providers/AuthProvider';\n\nexport {\n  AuthProvider,\n}\n\nexport * from './reducers/authSlice';","import { Dispatch } from '@reduxjs/toolkit';\nimport React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, StyleSheet, View } from 'react-native';\n\nimport { AUTH_KEY } from '../constants/keys';\nimport { getValueFromSecureStorage } from '../constants/storage';\nimport { setToken } from '../reducers/authSlice';\n\ninterface AuthProviderProps {\n  children: React.ReactNode,\n  dispatch: Dispatch,\n}\n\nexport default function AuthProvider({\n  children,\n  dispatch,\n}: AuthProviderProps) {\n  const [redhydrating, setRedhydrating] = useState(true);\n\n  useEffect(() => {\n    prepareAppState();\n  }, []);\n\n  const prepareAppState = async () => {\n    const token = await getValueFromSecureStorage(AUTH_KEY.token);\n\n    if (!!token) {\n      dispatch(setToken(token));\n    }\n\n    setRedhydrating(false);\n  };\n\n  if (redhydrating) return (\n    <View\n      style={styles.container}\n    >\n      <ActivityIndicator />\n    </View>\n  );\n\n  return children;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AUTH_KEY } from '../constants/keys';\nimport { resetStorage, storeToSecureStorage } from '../constants/storage';\n\ninterface IAuthState {\n  token?: string,\n}\n\nconst initialState: IAuthState = {\n\n}\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setToken: (state, action: PayloadAction<string>) => {\n      storeToSecureStorage(AUTH_KEY.token, action.payload);\n      state.token = action.payload;\n    },\n    logout: () => {\n      resetStorage();\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  logout,\n  setToken,\n} = authSlice.actions;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_helpers","require","_RCTAsyncStorage","_interopRequireDefault","RCTAsyncStorage","Error","_getRequests","_getKeys","_immediate","AsyncStorage","getItem","key","callback","Promise","resolve","reject","checkValidInput","multiGet","errors","result","_result$","value","errs","convertErrors","setItem","multiSet","removeItem","multiRemove","mergeItem","multiMerge","clear","error","err","convertError","getAllKeys","keys","flushGetRequests","getRequests","getKeys","map","forEach","_ref","_ref2","_slicedToArray2","default","reqLength","length","errorList","i","request","requestResult","setImmediate","getRequest","keyIndex","promiseResult","push","indexOf","keyValuePairs","checkValidArgs","_ref3","_ref4","exports","_reactNative","_shouldFallbackToLegacyNativeModule","TurboModuleRegistry","get","NativeModules","shouldFallbackToLegacyNativeModule","out","message","Array","isArray","_len","arguments","input","_key","console","warn","e","args","apply","concat","_len2","_key2","_len3","_key3","_len4","_key4","_AsyncStorage","_hooks","_NativeModules$Native","expoConstants","modulesConstants","ExponentConstants","appOwnership","executionEnvironment","includes","token","_asyncStorage","_keys","_asyncToGenerator2","data","_x","_x2","then","res","catch","_x3","AUTH_KEY","_AuthProvider","_authSlice","Object","prototype","hasOwnProperty","call","_exportNames","defineProperty","enumerable","children","dispatch","_useState","useState","_useState2","redhydrating","setRedhydrating","useEffect","prepareAppState","getValueFromSecureStorage","setToken","_jsxRuntime","jsx","View","style","styles","container","ActivityIndicator","_react","r","__esModule","t","_getRequireWildcardCache","has","n","__proto__","a","getOwnPropertyDescriptor","u","set","_interopRequireWildcard","_storage","WeakMap","StyleSheet","create","flex","alignItems","justifyContent","_toolkit","initialState","_authSlice$actions","createSlice","name","reducers","state","action","storeToSecureStorage","payload","logout","resetStorage","actions","f","k","Symbol","for","l","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","g","b","d","h","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsxs","module","asyncGeneratorStep","o","done","this","_next","_throw","iterator","next","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","toString","slice","constructor","from","test"],"sourceRoot":""}