{"version":3,"file":"vendors-node_modules_react-native_Libraries_Alert_Alert_js-node_modules_react-native_Librarie-e805ee.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Alert/Alert.js","webpack:///./node_modules/react-native/Libraries/Alert/NativeAlertManager.js","webpack:///./node_modules/react-native/Libraries/Alert/RCTAlertManager.ios.js","webpack:///./node_modules/react-native/Libraries/Blob/Blob.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobManager.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobRegistry.js","webpack:///./node_modules/react-native/Libraries/Blob/NativeBlobModule.js","webpack:///./node_modules/react-native/Libraries/BugReporting/BugReporting.js","webpack:///./node_modules/react-native/Libraries/BugReporting/NativeBugReporting.js","webpack:///./node_modules/react-native/Libraries/BugReporting/dumpReactTree.js","webpack:///./node_modules/react-native/Libraries/Components/UnimplementedViews/UnimplementedView.js","webpack:///./node_modules/react-native/Libraries/Core/registerCallableModule.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeRedBox.js","webpack:///./node_modules/react-native/Libraries/Network/FormData.js","webpack:///./node_modules/react-native/Libraries/Network/NativeNetworkingIOS.js","webpack:///./node_modules/react-native/Libraries/Network/RCTNetworking.ios.js","webpack:///./node_modules/react-native/Libraries/Network/convertRequestBody.js","webpack:///./node_modules/react-native/Libraries/ReactNative/AppRegistry.js","webpack:///./node_modules/react-native/Libraries/ReactNative/DisplayMode.js","webpack:///./node_modules/react-native/Libraries/ReactNative/HeadlessJsTaskError.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js","webpack:///./node_modules/react-native/Libraries/ReactNative/renderApplication.js","webpack:///./node_modules/react-native/Libraries/Utilities/BackHandler.ios.js","webpack:///./node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/PerformanceLoggerContext.js","webpack:///./node_modules/react-native/Libraries/Utilities/RCTLog.js","webpack:///./node_modules/react-native/Libraries/Utilities/SceneTracker.js","webpack:///./node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack:///./node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/infoLog.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeAlertManager.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBlobModule.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeBugReporting.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeHeadlessJsTaskSupport.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeNetworkingIOS.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativeRedBox.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/react/jsx-runtime.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/readOnlyError.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {DialogOptions} from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nimport Platform from '../Utilities/Platform';\nimport RCTAlertManager from './RCTAlertManager';\n\nexport type AlertType =\n  | 'default'\n  | 'plain-text'\n  | 'secure-text'\n  | 'login-password';\nexport type AlertButtonStyle = 'default' | 'cancel' | 'destructive';\nexport type Buttons = Array<{\n  text?: string,\n  onPress?: ?Function,\n  isPreferred?: boolean,\n  style?: AlertButtonStyle,\n  ...\n}>;\n\ntype Options = {\n  cancelable?: ?boolean,\n  userInterfaceStyle?: 'unspecified' | 'light' | 'dark',\n  onDismiss?: ?() => void,\n  ...\n};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See https://reactnative.dev/docs/alert\n */\nclass Alert {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n  ): void {\n    if (Platform.OS === 'ios') {\n      Alert.prompt(\n        title,\n        message,\n        buttons,\n        'default',\n        undefined,\n        undefined,\n        options,\n      );\n    } else if (Platform.OS === 'android') {\n      const NativeDialogManagerAndroid =\n        require('../NativeModules/specs/NativeDialogManagerAndroid').default;\n      if (!NativeDialogManagerAndroid) {\n        return;\n      }\n      const constants = NativeDialogManagerAndroid.getConstants();\n\n      const config: DialogOptions = {\n        title: title || '',\n        message: message || '',\n        cancelable: false,\n      };\n\n      if (options && options.cancelable) {\n        config.cancelable = options.cancelable;\n      }\n      // At most three buttons (neutral, negative, positive). Ignore rest.\n      // The text 'OK' should be probably localized. iOS Alert does that in native.\n      const defaultPositiveText = 'OK';\n      const validButtons: Buttons = buttons\n        ? buttons.slice(0, 3)\n        : [{text: defaultPositiveText}];\n      const buttonPositive = validButtons.pop();\n      const buttonNegative = validButtons.pop();\n      const buttonNeutral = validButtons.pop();\n\n      if (buttonNeutral) {\n        config.buttonNeutral = buttonNeutral.text || '';\n      }\n      if (buttonNegative) {\n        config.buttonNegative = buttonNegative.text || '';\n      }\n      if (buttonPositive) {\n        config.buttonPositive = buttonPositive.text || defaultPositiveText;\n      }\n\n      /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      const onAction = (action, buttonKey) => {\n        if (action === constants.buttonClicked) {\n          if (buttonKey === constants.buttonNeutral) {\n            // $FlowFixMe[incompatible-type]\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (buttonKey === constants.buttonNegative) {\n            // $FlowFixMe[incompatible-type]\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (buttonKey === constants.buttonPositive) {\n            // $FlowFixMe[incompatible-type]\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === constants.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      };\n      const onError = (errorMessage: string) => console.warn(errorMessage);\n      NativeDialogManagerAndroid.showAlert(config, onError, onAction);\n    }\n  }\n\n  static prompt(\n    title: ?string,\n    message?: ?string,\n    callbackOrButtons?: ?(((text: string) => void) | Buttons),\n    type?: ?AlertType = 'plain-text',\n    defaultValue?: string,\n    keyboardType?: string,\n    options?: Options,\n  ): void {\n    if (Platform.OS === 'ios') {\n      let callbacks: Array<?any> = [];\n      const buttons = [];\n      let cancelButtonKey;\n      let destructiveButtonKey;\n      let preferredButtonKey;\n      if (typeof callbackOrButtons === 'function') {\n        callbacks = [callbackOrButtons];\n      } else if (Array.isArray(callbackOrButtons)) {\n        callbackOrButtons.forEach((btn, index) => {\n          callbacks[index] = btn.onPress;\n          if (btn.style === 'cancel') {\n            cancelButtonKey = String(index);\n          } else if (btn.style === 'destructive') {\n            destructiveButtonKey = String(index);\n          }\n          if (btn.isPreferred) {\n            preferredButtonKey = String(index);\n          }\n          if (btn.text || index < (callbackOrButtons || []).length - 1) {\n            const btnDef: {[number]: string} = {};\n            btnDef[index] = btn.text || '';\n            buttons.push(btnDef);\n          }\n        });\n      }\n\n      RCTAlertManager.alertWithArgs(\n        {\n          title: title || '',\n          message: message || undefined,\n          buttons,\n          type: type || undefined,\n          defaultValue,\n          cancelButtonKey,\n          destructiveButtonKey,\n          preferredButtonKey,\n          keyboardType,\n          userInterfaceStyle: options?.userInterfaceStyle || undefined,\n        },\n        (id, value) => {\n          const cb = callbacks[id];\n          cb && cb(value);\n        },\n      );\n    }\n  }\n}\n\nmodule.exports = Alert;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeAlertManager';\nimport NativeAlertManager from '../../src/private/specs/modules/NativeAlertManager';\nexport default NativeAlertManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {Args} from './NativeAlertManager';\n\nimport NativeAlertManager from './NativeAlertManager';\n\nmodule.exports = {\n  alertWithArgs(\n    args: Args,\n    callback: (id: number, value: string) => void,\n  ): void {\n    if (NativeAlertManager == null) {\n      return;\n    }\n    NativeAlertManager.alertWithArgs(args, callback);\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {BlobData, BlobOptions} from './BlobTypes';\n\n/**\n * Opaque JS representation of some binary data in native.\n *\n * The API is modeled after the W3C Blob API, with one caveat\n * regarding explicit deallocation. Refer to the `close()`\n * method for further details.\n *\n * Example usage in a React component:\n *\n *   class WebSocketImage extends React.Component {\n *      state = {blob: null};\n *      componentDidMount() {\n *        let ws = this.ws = new WebSocket(...);\n *        ws.binaryType = 'blob';\n *        ws.onmessage = (event) => {\n *          if (this.state.blob) {\n *            this.state.blob.close();\n *          }\n *          this.setState({blob: event.data});\n *        };\n *      }\n *      componentUnmount() {\n *        if (this.state.blob) {\n *          this.state.blob.close();\n *        }\n *        this.ws.close();\n *      }\n *      render() {\n *        if (!this.state.blob) {\n *          return <View />;\n *        }\n *        return <Image source={{uri: URL.createObjectURL(this.state.blob)}} />;\n *      }\n *   }\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob\n */\nclass Blob {\n  _data: ?BlobData;\n\n  /**\n   * Constructor for JS consumers.\n   * Currently we only support creating Blobs from other Blobs.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n   */\n  constructor(parts: Array<Blob | string> = [], options?: BlobOptions) {\n    const BlobManager = require('./BlobManager');\n    this.data = BlobManager.createFromParts(parts, options).data;\n  }\n\n  /*\n   * This method is used to create a new Blob object containing\n   * the data in the specified range of bytes of the source Blob.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  set data(data: ?BlobData) {\n    this._data = data;\n  }\n\n  // $FlowFixMe[unsafe-getters-setters]\n  get data(): BlobData {\n    if (!this._data) {\n      throw new Error('Blob has been closed and is no longer available');\n    }\n\n    return this._data;\n  }\n\n  slice(start?: number, end?: number, contentType: string = ''): Blob {\n    const BlobManager = require('./BlobManager');\n    let {offset, size} = this.data;\n\n    if (typeof start === 'number') {\n      if (start > size) {\n        // $FlowFixMe[reassign-const]\n        start = size;\n      }\n      offset += start;\n      size -= start;\n\n      if (typeof end === 'number') {\n        if (end < 0) {\n          // $FlowFixMe[reassign-const]\n          end = this.size + end;\n        }\n        if (end > this.size) {\n          // $FlowFixMe[reassign-const]\n          end = this.size;\n        }\n        size = end - start;\n      }\n    }\n    return BlobManager.createFromOptions({\n      blobId: this.data.blobId,\n      offset,\n      size,\n      type: contentType,\n      /* Since `blob.slice()` creates a new view onto the same binary\n       * data as the original blob, we should re-use the same collector\n       * object so that the underlying resource gets deallocated when\n       * the last view into the data is released, not the first.\n       */\n      __collector: this.data.__collector,\n    });\n  }\n\n  /**\n   * This method is in the standard, but not actually implemented by\n   * any browsers at this point. It's important for how Blobs work in\n   * React Native, however, since we cannot de-allocate resources automatically,\n   * so consumers need to explicitly de-allocate them.\n   *\n   * Note that the semantics around Blobs created via `blob.slice()`\n   * and `new Blob([blob])` are different. `blob.slice()` creates a\n   * new *view* onto the same binary data, so calling `close()` on any\n   * of those views is enough to deallocate the data, whereas\n   * `new Blob([blob, ...])` actually copies the data in memory.\n   */\n  close() {\n    const BlobManager = require('./BlobManager');\n    BlobManager.release(this.data.blobId);\n    this.data = null;\n  }\n\n  /**\n   * Size of the data contained in the Blob object, in bytes.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get size(): number {\n    return this.data.size;\n  }\n\n  /*\n   * String indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get type(): string {\n    return this.data.type || '';\n  }\n}\n\nmodule.exports = Blob;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {BlobCollector, BlobData, BlobOptions} from './BlobTypes';\n\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId: string): BlobCollector | null {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable: boolean = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts: Array<Blob | string>,\n    options?: BlobOptions,\n  ): Blob {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options: BlobData): Blob {\n    BlobRegistry.register(options.blobId);\n    // $FlowFixMe[prop-missing]\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId: string): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler(): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob: Blob, socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nconst registry: Map<string, number> = new Map();\n\nconst register = (id: string) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    registry.set(id, used + 1);\n  } else {\n    registry.set(id, 1);\n  }\n};\n\nconst unregister = (id: string) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    if (used <= 1) {\n      registry.delete(id);\n    } else {\n      registry.set(id, used - 1);\n    }\n  }\n};\n\nconst has = (id: string): number | boolean => {\n  return registry.get(id) || false;\n};\n\nmodule.exports = {\n  register,\n  unregister,\n  has,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeBlobModule';\nimport NativeBlobModule from '../../src/private/specs/modules/NativeBlobModule';\nexport default NativeBlobModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\ntype ExtraData = {[key: string]: string, ...};\ntype SourceCallback = () => string;\ntype DebugData = {\n  extras: ExtraData,\n  files: ExtraData,\n  ...\n};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EventSubscription = null;\n  static _redboxSubscription: ?EventSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void, ...} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeBugReporting';\nimport NativeBugReporting from '../../src/private/specs/modules/NativeBugReporting';\nexport default NativeBugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/*\nconst getReactData = require('getReactData');\n\nconst INDENTATION_SIZE = 2;\nconst MAX_DEPTH = 2;\nconst MAX_STRING_LENGTH = 50;\n*/\n\n/**\n * Dump all React Native root views and their content. This function tries\n * it best to get the content but ultimately relies on implementation details\n * of React and will fail in future versions.\n */\nfunction dumpReactTree(): string {\n  try {\n    return getReactTree();\n  } catch (e) {\n    return 'Failed to dump react tree: ' + e;\n  }\n}\n\nfunction getReactTree() {\n  // TODO(sema): Reenable tree dumps using the Fiber tree structure. #15945684\n  return (\n    'React tree dumps have been temporarily disabled while React is ' +\n    'upgraded to Fiber.'\n  );\n  /*\n  let output = '';\n  const rootIds = Object.getOwnPropertyNames(ReactNativeMount._instancesByContainerID);\n  for (const rootId of rootIds) {\n    const instance = ReactNativeMount._instancesByContainerID[rootId];\n    output += `============ Root ID: ${rootId} ============\\n`;\n    output += dumpNode(instance, 0);\n    output += `============ End root ID: ${rootId} ============\\n`;\n  }\n  return output;\n*/\n}\n\n/*\nfunction dumpNode(node: Object, indentation: number) {\n  const data = getReactData(node);\n  if (data.nodeType === 'Text') {\n    return indent(indentation) + data.text + '\\n';\n  } else if (data.nodeType === 'Empty') {\n    return '';\n  }\n  let output = indent(indentation) + `<${data.name}`;\n  if (data.nodeType === 'Composite') {\n    for (const propName of Object.getOwnPropertyNames(data.props || {})) {\n      if (isNormalProp(propName)) {\n        try {\n          const value = convertValue(data.props[propName]);\n          if (value) {\n            output += ` ${propName}=${value}`;\n          }\n        } catch (e) {\n          const message = `[Failed to get property: ${e}]`;\n          output += ` ${propName}=${message}`;\n        }\n      }\n    }\n  }\n  let childOutput = '';\n  for (const child of data.children || []) {\n    childOutput += dumpNode(child, indentation + 1);\n  }\n\n  if (childOutput) {\n    output += '>\\n' + childOutput + indent(indentation) + `</${data.name}>\\n`;\n  } else {\n    output += ' />\\n';\n  }\n\n  return output;\n}\n\nfunction isNormalProp(name: string): boolean {\n  switch (name) {\n    case 'children':\n    case 'key':\n    case 'ref':\n      return false;\n    default:\n      return true;\n  }\n}\n\nfunction convertObject(object: Object, depth: number) {\n  if (depth >= MAX_DEPTH) {\n    return '[...omitted]';\n  }\n  let output = '{';\n  let first = true;\n  for (const key of Object.getOwnPropertyNames(object)) {\n    if (!first) {\n      output += ', ';\n    }\n    output += `${key}: ${convertValue(object[key], depth + 1)}`;\n    first = false;\n  }\n  return output + '}';\n}\n\nfunction convertValue(value, depth = 0): ?string {\n  if (!value) {\n    return null;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(possiblyEllipsis(value).replace('\\n', '\\\\n'));\n    case 'boolean':\n    case 'number':\n      return JSON.stringify(value);\n    case 'function':\n      return '[function]';\n    case 'object':\n      return convertObject(value, depth);\n    default:\n      return null;\n  }\n}\n\nfunction possiblyEllipsis(value: string) {\n  if (value.length > MAX_STRING_LENGTH) {\n    return value.slice(0, MAX_STRING_LENGTH) + '...';\n  } else {\n    return value;\n  }\n}\n\nfunction indent(size: number) {\n  return ' '.repeat(size * INDENTATION_SIZE);\n}\n*/\n\nmodule.exports = dumpReactTree;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport * as React from 'react';\n\n/**\n * Common implementation for a simple stubbed view. Simply applies the view's styles to the inner\n * View component and renders its children.\n */\nclass UnimplementedView extends React.Component<$FlowFixMeProps> {\n  render(): React.Node {\n    // Workaround require cycle from requireNativeComponent\n    const View = require('../View/View');\n    return (\n      <View style={[styles.unimplementedView, this.props.style]}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  unimplementedView: __DEV__\n    ? {\n        alignSelf: 'flex-start',\n        borderColor: 'red',\n        borderWidth: 1,\n      }\n    : {},\n});\n\nmodule.exports = UnimplementedView;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\ntype Module = {...};\ntype RegisterCallableModule = (\n  name: string,\n  moduleOrFactory: Module | (void => Module),\n) => void;\n\nconst registerCallableModule: RegisterCallableModule = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {\n  EventSubscription,\n  IEventEmitter,\n} from '../vendor/emitter/EventEmitter';\n\nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n\ninterface NativeModule {\n  addListener(eventType: string): void;\n  removeListeners(count: number): void;\n}\n\nexport type {EventSubscription};\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter<TEventToArgsMap: {...}>\n  implements IEventEmitter<TEventToArgsMap>\n{\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(\n        nativeModule != null,\n        '`new NativeEventEmitter()` requires a non-null argument.',\n      );\n    }\n\n    const hasAddListener =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.removeListeners === 'function';\n\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.',\n        );\n      }\n      if (!hasRemoveListeners) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.',\n        );\n      }\n    }\n  }\n\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    this._nativeModule?.addListener(eventType);\n    let subscription: ?EventSubscription = RCTDeviceEventEmitter.addListener(\n      eventType,\n      listener,\n      context,\n    );\n\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          // $FlowFixMe[incompatible-use]\n          subscription.remove();\n          subscription = null;\n        }\n      },\n    };\n  }\n\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: $ElementType<TEventToArgsMap, TEvent>\n  ): void {\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(\n    eventType?: ?TEvent,\n  ): void {\n    invariant(\n      eventType != null,\n      '`NativeEventEmitter.removeAllListener()` requires a non-null argument.',\n    );\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nimport NativeDialogManagerAndroid from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nexport default NativeDialogManagerAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeRedBox';\nimport NativeRedBox from '../../../src/private/specs/modules/NativeRedBox';\nexport default NativeRedBox;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\ntype FormDataNameValuePair = [string, FormDataValue];\n\ntype Headers = {[name: string]: string, ...};\ntype FormDataPart =\n  | {\n      string: string,\n      headers: Headers,\n      ...\n    }\n  | {\n      uri: string,\n      headers: Headers,\n      name?: string,\n      type?: string,\n      ...\n    };\n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts: Array<FormDataNameValuePair>;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key: string, value: FormDataValue) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key: string): Array<FormDataValue> {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts(): Array<FormDataPart> {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers: Headers = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += `; filename=\"${\n            value.name\n          }\"; filename*=utf-8''${encodeURI(value.name)}`;\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeNetworkingIOS';\nimport NativeNetworkingIOS from '../../src/private/specs/modules/NativeNetworkingIOS';\nexport default NativeNetworkingIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport convertRequestBody, {type RequestBody} from './convertRequestBody';\nimport NativeNetworkingIOS from './NativeNetworkingIOS';\nimport {type NativeResponseType} from './XMLHttpRequest';\n\ntype RCTNetworkingEventDefinitions = $ReadOnly<{\n  didSendNetworkData: [\n    [\n      number, // requestId\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkResponse: [\n    [\n      number, // requestId\n      number, // status\n      ?{[string]: string}, // responseHeaders\n      ?string, // responseURL\n    ],\n  ],\n  didReceiveNetworkData: [\n    [\n      number, // requestId\n      string, // response\n    ],\n  ],\n  didReceiveNetworkIncrementalData: [\n    [\n      number, // requestId\n      string, // responseText\n      number, // progress\n      number, // total\n    ],\n  ],\n  didReceiveNetworkDataProgress: [\n    [\n      number, // requestId\n      number, // loaded\n      number, // total\n    ],\n  ],\n  didCompleteNetworkResponse: [\n    [\n      number, // requestId\n      string, // error\n      boolean, // timeOutError\n    ],\n  ],\n}>;\n\nconst RCTNetworking = {\n  addListener<K: $Keys<RCTNetworkingEventDefinitions>>(\n    eventType: K,\n    listener: (...$ElementType<RCTNetworkingEventDefinitions, K>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    // $FlowFixMe[incompatible-call]\n    return RCTDeviceEventEmitter.addListener(eventType, listener, context);\n  },\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: {...},\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => void,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    NativeNetworkingIOS.sendRequest(\n      {\n        method,\n        url,\n        data: {...body, trackingName},\n        headers,\n        responseType,\n        incrementalUpdates,\n        timeout,\n        withCredentials,\n      },\n      callback,\n    );\n  },\n\n  abortRequest(requestId: number) {\n    NativeNetworkingIOS.abortRequest(requestId);\n  },\n\n  clearCookies(callback: (result: boolean) => void) {\n    NativeNetworkingIOS.clearCookies(callback);\n  },\n};\n\nexport default RCTNetworking;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\nimport type {DisplayModeType} from './DisplayMode';\n\nimport registerCallableModule from '../Core/registerCallableModule';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\ntype Task = (taskData: any) => Promise<void>;\nexport type TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component_: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Runnable,\n  section?: boolean,\n  ...\n};\ntype AppParameters = {\n  initialProps: $ReadOnly<{[string]: mixed, ...}>,\n  rootTag: RootTag,\n  fabric?: boolean,\n  concurrentRoot?: boolean,\n};\nexport type Runnable = (\n  appParameters: AppParameters,\n  displayMode: DisplayModeType,\n) => void;\nexport type Runnables = {[appKey: string]: Runnable};\nexport type Registry = {\n  sections: $ReadOnlyArray<string>,\n  runnables: Runnables,\n  ...\n};\nexport type WrapperComponentProvider = (\n  appParameters: Object,\n) => React$ComponentType<any>;\nexport type RootViewStyleProvider = (appParameters: Object) => ViewStyleProp;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook =\n  (component: ComponentProvider) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet rootViewStyleProvider: ?RootViewStyleProvider;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  setRootViewStyleProvider(provider: RootViewStyleProvider) {\n    rootViewStyleProvider = provider;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    const scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = (appParameters, displayMode) => {\n      const concurrentRootEnabled = Boolean(\n        appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot,\n      );\n      renderApplication(\n        componentProviderInstrumentationHook(\n          componentProvider,\n          scopedPerformanceLogger,\n        ),\n        appParameters.initialProps,\n        appParameters.rootTag,\n        wrapperComponentProvider && wrapperComponentProvider(appParameters),\n        rootViewStyleProvider && rootViewStyleProvider(appParameters),\n        appParameters.fabric,\n        scopedPerformanceLogger,\n        appKey === 'LogBox', // is logbox\n        appKey,\n        displayMode,\n        concurrentRootEnabled,\n      );\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Runnable): string {\n    runnables[appKey] = run;\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): $ReadOnlyArray<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): $ReadOnlyArray<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey: string,\n    appParameters: AppParameters,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__ ? ` with ${JSON.stringify(appParameters)}` : '';\n      const msg = `Running \"${appKey}\"${logParams}`;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey: string,\n    appParameters: Object,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: RootTag): void {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\n// Register LogBox as a default surface\nAppRegistry.registerComponent('LogBox', () => {\n  if (__DEV__ && typeof jest === 'undefined') {\n    return require('../LogBox/LogBoxInspectorContainer').default;\n  } else {\n    return function NoOp() {\n      return null;\n    };\n  }\n});\n\nglobal.RN$AppRegistry = AppRegistry;\n\n// Backwards compat with SurfaceRegistry, remove me later\nglobal.RN$SurfaceRegistry = {\n  renderSurface: AppRegistry.runApplication,\n  setSurfaceProps: AppRegistry.setSurfaceProps,\n};\n\nif (global.RN$Bridgeless === true) {\n  console.log('Bridgeless mode is enabled');\n}\n\nregisterCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport opaque type DisplayModeType = number;\n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode: {[string]: DisplayModeType} = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value: ?number): DisplayModeType {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport default class HeadlessJsTaskError extends Error {}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nimport NativeHeadlessJsTaskSupport from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nexport default NativeHeadlessJsTaskSupport;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {AbstractComponent} from 'react';\n\nimport * as React from 'react';\n\ntype NoopComponent = AbstractComponent<{children: React.Node}>;\n\nconst cache: Map<\n  string, // displayName\n  NoopComponent, // ComponentWithDisplayName\n> = new Map();\n\nexport default function getCachedComponentWithDisplayName(\n  displayName: string,\n): NoopComponent {\n  let ComponentWithDisplayName = cache.get(displayName);\n\n  if (!ComponentWithDisplayName) {\n    ComponentWithDisplayName = ({children}: {children: React.Node}) => children;\n    // $FlowFixMe[prop-missing]\n    ComponentWithDisplayName.displayName = displayName;\n    cache.set(displayName, ComponentWithDisplayName);\n  }\n\n  return ComponentWithDisplayName;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype ActivityType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  rootViewStyle?: ?ViewStyleProp,\n  fabric?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        WrapperComponent={WrapperComponent}\n        rootViewStyle={rootViewStyle}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Activity: ActivityType = React.unstable_Activity;\n\n    renderable = (\n      <Activity\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Activity>\n    );\n  }\n\n  // We want to have concurrentRoot always enabled when you're on Fabric.\n  const useConcurrentRootOverride = fabric;\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRootOverride ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRootOverride),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nmodule.exports = require('../Components/UnimplementedViews/UnimplementedView');\n\ntype BackPressEventName = 'backPress' | 'hardwareBackPress';\n\nfunction emptyFunction(): void {}\n\ntype TBackHandler = {|\n  +exitApp: () => void,\n  +addEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => {remove: () => void, ...},\n  +removeEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => void,\n|};\n\nlet BackHandler: TBackHandler = {\n  exitApp: emptyFunction,\n  addEventListener(_eventName: BackPressEventName, _handler: Function) {\n    return {\n      remove: emptyFunction,\n    };\n  },\n  removeEventListener(_eventName: BackPressEventName, _handler: Function) {},\n};\n\nmodule.exports = BackHandler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport createPerformanceLogger from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport GlobalPerformanceLogger from './GlobalPerformanceLogger';\nimport * as React from 'react';\nimport {useContext} from 'react';\n\n/**\n * This is a React Context that provides a scoped instance of IPerformanceLogger.\n * We wrap every <AppContainer /> with a Provider for this context so the logger\n * should be available in every component.\n * See React docs about using Context: https://react.dev/docs/context.html\n */\nconst PerformanceLoggerContext: React.Context<IPerformanceLogger> =\n  React.createContext(GlobalPerformanceLogger);\nif (__DEV__) {\n  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';\n}\n\nexport function usePerformanceLogger(): IPerformanceLogger {\n  return useContext(PerformanceLoggerContext);\n}\n\nexport default PerformanceLoggerContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler: ?(...Array<mixed>) => void = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level: string, ...args: Array<mixed>): void {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to LogBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level: string, ...args: Array<mixed>): void {\n    // $FlowFixMe[invalid-computed-prop]\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler: typeof warningHandler): void {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nexport type Scene = {name: string, [string]: mixed, ...};\n\nlet _listeners: Array<(scene: Scene) => void> = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene: Scene) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene(): Scene {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(callback: (scene: Scene) => void): {\n    remove: () => void,\n    ...\n  } {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data: ArrayBuffer | $ArrayBufferView): string {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength}: DataView = (data: $FlowFixMe);\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {\n  Extras,\n  ExtraValue,\n  IPerformanceLogger,\n  Timespan,\n} from './IPerformanceLogger';\n\nimport infoLog from './infoLog';\n\nconst PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp: () => number =\n  global.nativeQPLTimestamp ?? (() => global.performance.now());\n\nclass PerformanceLogger implements IPerformanceLogger {\n  _timespans: {[key: string]: ?Timespan} = {};\n  _extras: {[key: string]: ?ExtraValue} = {};\n  _points: {[key: string]: ?number} = {};\n  _pointExtras: {[key: string]: ?Extras, ...} = {};\n  _closed: boolean = false;\n\n  addTimespan(\n    key: string,\n    startTime: number,\n    endTime: number,\n    startExtras?: Extras,\n    endExtras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger: IPerformanceLogger) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp(): number {\n    return getCurrentTimestamp();\n  }\n\n  getExtras(): {[key: string]: ?ExtraValue} {\n    return this._extras;\n  }\n\n  getPoints(): {[key: string]: ?number} {\n    return this._points;\n  }\n\n  getPointExtras(): {[key: string]: ?Extras} {\n    return this._pointExtras;\n  }\n\n  getTimespans(): {[key: string]: ?Timespan} {\n    return this._timespans;\n  }\n\n  hasTimespan(key: string): boolean {\n    return !!this._timespans[key];\n  }\n\n  isClosed(): boolean {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key: string): ?ExtraValue {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key: string, value: ExtraValue) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n  }\n}\n\n// Re-exporting for backwards compatibility with all the clients that\n// may still import it from this module.\nexport type {Extras, ExtraValue, IPerformanceLogger, Timespan};\n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger(): IPerformanceLogger {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<mixed>): void {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type Args = {|\n  title?: string,\n  message?: string,\n  buttons?: Array<Object>, // TODO(T67565166): have a better type\n  type?: string,\n  defaultValue?: string,\n  cancelButtonKey?: string,\n  destructiveButtonKey?: string,\n  preferredButtonKey?: string,\n  keyboardType?: string,\n  userInterfaceStyle?: string,\n|};\n\nexport interface Spec extends TurboModule {\n  +alertWithArgs: (\n    args: Args,\n    callback: (id: number, value: string) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AlertManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type Constants = {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => Constants;\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): Constants {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +startReportAProblemFlow: () => void;\n  +setExtraData: (extraData: Object, extraFiles: Object) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('BugReporting'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\n/* 'buttonClicked' | 'dismissed' */\ntype DialogAction = string;\n/*\n  buttonPositive = -1,\n  buttonNegative = -2,\n  buttonNeutral = -3\n*/\ntype DialogButtonKey = number;\nexport type DialogOptions = {|\n  title?: string,\n  message?: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  items?: Array<string>,\n  cancelable?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +buttonClicked: DialogAction,\n    +dismissed: DialogAction,\n    +buttonPositive: DialogButtonKey,\n    +buttonNegative: DialogButtonKey,\n    +buttonNeutral: DialogButtonKey,\n  |};\n  +showAlert: (\n    config: DialogOptions,\n    onError: (error: string) => void,\n    onAction: (action: DialogAction, buttonKey?: DialogButtonKey) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DialogManagerAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +notifyTaskFinished: (taskId: number) => void;\n  +notifyTaskRetry: (taskId: number) => Promise<boolean>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('HeadlessJsTaskSupport'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +sendRequest: (\n    query: {|\n      method: string,\n      url: string,\n      data: Object,\n      headers: Object,\n      responseType: string,\n      incrementalUpdates: boolean,\n      timeout: number,\n      withCredentials: boolean,\n    |},\n    callback: (requestId: number) => void,\n  ) => void;\n  +abortRequest: (requestId: number) => void;\n  +clearCookies: (callback: (result: boolean) => void) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Networking'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +setExtraData: (extraData: Object, forIdentifier: string) => void;\n  +dismiss: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('RedBox'): ?Spec);\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _readOnlyError(r) {\n  throw new TypeError('\"' + r + '\" is read-only');\n}\nmodule.exports = _readOnlyError, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_Platform","_interopRequireDefault","require","_RCTAlertManager","Alert","_classCallCheck2","default","_createClass2","key","value","title","message","buttons","options","Platform","OS","prompt","undefined","NativeDialogManagerAndroid","constants","getConstants","config","cancelable","validButtons","slice","text","buttonPositive","pop","buttonNegative","buttonNeutral","showAlert","errorMessage","console","warn","action","buttonKey","buttonClicked","onPress","dismissed","onDismiss","callbackOrButtons","type","arguments","length","defaultValue","keyboardType","cancelButtonKey","destructiveButtonKey","preferredButtonKey","callbacks","Array","isArray","forEach","btn","index","style","String","isPreferred","btnDef","push","RCTAlertManager","alertWithArgs","userInterfaceStyle","id","cb","module","exports","_NativeAlertManager","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","keys","prototype","_exportNames","enumerable","NativeAlertManager","args","callback","Blob","parts","BlobManager","this","data","createFromParts","_data","Error","start","end","contentType","_this$data","offset","size","createFromOptions","blobId","__collector","release","_NativeBlobModule","_invariant","BlobRegistry","invariant","NativeBlobModule","replace","c","Math","random","toString","items","map","part","ArrayBuffer","isView","reduce","acc","curr","global","unescape","encodeURI","lastModified","Date","now","register","assign","create","__blobCollectorProvider","unregister","addNetworkingHandler","socketId","addWebSocketHandler","removeWebSocketHandler","blob","sendOverSocket","isAvailable","registry","Map","used","delete","_RCTDeviceEventEmitter","_NativeRedBox","_NativeBugReporting","defaultExtras","BugReporting","addFileSource","_subscription","RCTDeviceEventEmitter","addListener","collectExtraData","_redboxSubscription","_addSource","_extraSources","_fileSources","source","_maybeInit","remove","extraData","_ref","_ref2","_slicedToArray2","fileData","_ref3","_ref4","NativeBugReporting","setExtraData","NativeRedBox","extras","files","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_StyleSheet","React","_jsxRuntime","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","UnimplementedView","_React$Component","o","constructor","apply","View","jsx","styles","unimplementedView","props","children","Component","StyleSheet","registerCallableModule","RN$Bridgeless","name","moduleOrFactory","RN$registerCallableModule","BatchedBridge","registerLazyCallableModule","NativeEventEmitter","nativeModule","hasAddListener","hasRemoveListeners","removeListeners","_nativeModule","eventType","listener","context","_this$_nativeModule","_this","subscription","_this$_nativeModule2","_len","_key","emit","concat","_this$_nativeModule3","listenerCount","removeAllListeners","RCTNativeAppEventEmitter","_NativeDialogManagerAndroid","FormData","_parts","filter","_ref5","_ref6","headers","fieldName","string","_NativeNetworkingIOS","NativeNetworkingIOS","_convertRequestBody","RCTNetworking","sendRequest","method","trackingName","url","responseType","incrementalUpdates","timeout","withCredentials","body","convertRequestBody","abortRequest","requestId","clearCookies","binaryToBase64","formData","getParts","base64","wrapperComponentProvider","rootViewStyleProvider","_registerCallableModule","_BugReporting","_createPerformanceLogger","_infoLog","_SceneTracker","_DisplayMode","_HeadlessJsTaskError","_NativeHeadlessJsTaskSupport","_renderApplication","_RendererProxy","runnables","runCount","sections","taskProviders","taskCancelProviders","componentProviderInstrumentationHook","component","AppRegistry","setWrapperComponentProvider","provider","setRootViewStyleProvider","registerConfig","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","createPerformanceLogger","appParameters","displayMode","_appParameters$initia","concurrentRootEnabled","initialProps","concurrentRoot","renderApplication","rootTag","fabric","registerSection","getAppKeys","getSectionKeys","getSections","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","msg","infoLog","addSource","SceneTracker","setActiveScene","coerceDisplayMode","setSurfaceProps","JSON","stringify","unmountApplicationComponentAtRootTag","unmountComponentAtNodeAndRemoveContainer","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","startHeadlessTask","taskId","NativeHeadlessJsTaskSupport","notifyTaskFinished","then","catch","reason","error","HeadlessJsTaskError","notifyTaskRetry","retryPosted","cancelHeadlessTask","RN$AppRegistry","RN$SurfaceRegistry","renderSurface","log","DisplayMode","SUSPENDED","HIDDEN","VISIBLE","freeze","_Error","_wrapNativeSuper2","displayName","ComponentWithDisplayName","cache","RootComponent","WrapperComponent","rootViewStyle","isLogBox","debugName","useConcurrentRoot","useOffscreen","performanceLogger","GlobalPerformanceLogger","renderable","_PerformanceLoggerContext","Provider","_AppContainer","internal_excludeLogBox","__DEV__","Activity","unstable_Activity","mode","useConcurrentRootOverride","startTimespan","setExtra","Renderer","isProfilingRenderer","renderElement","element","useFabric","stopTimespan","_GlobalPerformanceLogger","emptyFunction","BackHandler","exitApp","addEventListener","_eventName","_handler","removeEventListener","useContext","PerformanceLoggerContext","_react","createContext","levelsMap","info","fatal","warningHandler","RCTLog","logIfNoNativeHook","level","nativeLoggingHook","logToConsole","_console","logFn","_len2","_key2","setWarningHandler","handler","_listeners","_activeScene","scene","getActiveScene","addActiveSceneChangedListener","Uint8Array","fromByteArray","buffer","byteOffset","byteLength","PerformanceLogger","_global$nativeQPLTime","getCurrentTimestamp","nativeQPLTimestamp","performance","_timespans","_extras","_points","_pointExtras","_closed","startTime","endTime","startExtras","endExtras","totalTime","getTimespans","getExtras","getPoints","getPointExtras","_this$_timespans$_key","timestamp","timespan","TurboModuleRegistry","NativeModule","socketID","withId","getEnforcing","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","join","code","indexOf","num","output","f","k","Symbol","for","l","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","g","b","d","h","defaultProps","$$typeof","_owner","current","Fragment","jsxs","objectWithoutPropertiesLoose","getOwnPropertySymbols","s","includes","propertyIsEnumerable","TypeError"],"sourceRoot":""}