{"version":3,"file":"node_modules_react-native_Libraries_NativeComponent_NativeComponentRegistry_js-_d2990.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack:///./node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativePlatformConstantsIOS.js","webpack:///./node_modules/react-native/Libraries/Utilities/Platform.ios.js","webpack:///./node_modules/react-native/src/private/specs/modules/NativePlatformConstantsIOS.js","webpack:///./node_modules/invariant/browser.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfigWithoutName} from './PlatformBaseViewConfig';\n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport {\n  ConditionallyIgnoredEventHandlers,\n  DynamicallyInjectedByGestureHandler,\n} from './ViewConfigIgnore';\n\nconst bubblingEventTypes = {\n  // Generic Events\n  topPress: {\n    phasedRegistrationNames: {\n      bubbled: 'onPress',\n      captured: 'onPressCapture',\n    },\n  },\n  topChange: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture',\n    },\n  },\n  topFocus: {\n    phasedRegistrationNames: {\n      bubbled: 'onFocus',\n      captured: 'onFocusCapture',\n    },\n  },\n  topBlur: {\n    phasedRegistrationNames: {\n      bubbled: 'onBlur',\n      captured: 'onBlurCapture',\n    },\n  },\n  topSubmitEditing: {\n    phasedRegistrationNames: {\n      bubbled: 'onSubmitEditing',\n      captured: 'onSubmitEditingCapture',\n    },\n  },\n  topEndEditing: {\n    phasedRegistrationNames: {\n      bubbled: 'onEndEditing',\n      captured: 'onEndEditingCapture',\n    },\n  },\n  topKeyPress: {\n    phasedRegistrationNames: {\n      bubbled: 'onKeyPress',\n      captured: 'onKeyPressCapture',\n    },\n  },\n\n  // Touch Events\n  topTouchStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchStart',\n      captured: 'onTouchStartCapture',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchMove',\n      captured: 'onTouchMoveCapture',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchCancel',\n      captured: 'onTouchCancelCapture',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchEnd',\n      captured: 'onTouchEndCapture',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topClick: {\n    phasedRegistrationNames: {\n      captured: 'onClickCapture',\n      bubbled: 'onClick',\n    },\n  },\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerOver: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOverCapture',\n      bubbled: 'onPointerOver',\n    },\n  },\n  topPointerOut: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOutCapture',\n      bubbled: 'onPointerOut',\n    },\n  },\n  topGotPointerCapture: {\n    phasedRegistrationNames: {\n      captured: 'onGotPointerCaptureCapture',\n      bubbled: 'onGotPointerCapture',\n    },\n  },\n  topLostPointerCapture: {\n    phasedRegistrationNames: {\n      captured: 'onLostPointerCaptureCapture',\n      bubbled: 'onLostPointerCapture',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  topAccessibilityTap: {\n    registrationName: 'onAccessibilityTap',\n  },\n  topMagicTap: {\n    registrationName: 'onMagicTap',\n  },\n  topAccessibilityEscape: {\n    registrationName: 'onAccessibilityEscape',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n};\n\nconst validAttributesForNonEventProps = {\n  // View Props\n  accessible: true,\n  accessibilityActions: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityLanguage: true,\n  accessibilityValue: true,\n  accessibilityViewIsModal: true,\n  accessibilityElementsHidden: true,\n  accessibilityIgnoresInvertColors: true,\n  accessibilityShowsLargeContentViewer: true,\n  accessibilityLargeContentTitle: true,\n  testID: true,\n  backgroundColor: {process: require('../StyleSheet/processColor').default},\n  backfaceVisibility: true,\n  cursor: true,\n  opacity: true,\n  shadowColor: {process: require('../StyleSheet/processColor').default},\n  shadowOffset: {diff: require('../Utilities/differ/sizesDiffer')},\n  shadowOpacity: true,\n  shadowRadius: true,\n  needsOffscreenAlphaCompositing: true,\n  overflow: true,\n  shouldRasterizeIOS: true,\n  transform: {diff: require('../Utilities/differ/matricesDiffer')},\n  transformOrigin: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  nativeID: true,\n  pointerEvents: true,\n  removeClippedSubviews: true,\n  role: true,\n  borderRadius: true,\n  borderColor: {process: require('../StyleSheet/processColor').default},\n  borderBlockColor: {process: require('../StyleSheet/processColor').default},\n  borderCurve: true,\n  borderWidth: true,\n  borderBlockWidth: true,\n  borderStyle: true,\n  hitSlop: {diff: require('../Utilities/differ/insetsDiffer')},\n  collapsable: true,\n  collapsableChildren: true,\n  filter: {\n    process: require('../StyleSheet/processFilter').default,\n  },\n  boxShadow: {\n    process: require('../StyleSheet/processBoxShadow').default,\n  },\n  experimental_mixBlendMode: true,\n  isolation: true,\n\n  borderTopWidth: true,\n  borderTopColor: {process: require('../StyleSheet/processColor').default},\n  borderRightWidth: true,\n  borderRightColor: {process: require('../StyleSheet/processColor').default},\n  borderBottomWidth: true,\n  borderBottomColor: {process: require('../StyleSheet/processColor').default},\n  borderLeftWidth: true,\n  borderLeftColor: {process: require('../StyleSheet/processColor').default},\n  borderStartWidth: true,\n  borderBlockStartWidth: true,\n  borderStartColor: {process: require('../StyleSheet/processColor').default},\n  borderBlockStartColor: {\n    process: require('../StyleSheet/processColor').default,\n  },\n  borderEndWidth: true,\n  borderBlockEndWidth: true,\n  borderEndColor: {process: require('../StyleSheet/processColor').default},\n  borderBlockEndColor: {process: require('../StyleSheet/processColor').default},\n\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderTopEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderBottomEndRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  display: true,\n  zIndex: true,\n\n  // ShadowView properties\n  top: true,\n  right: true,\n  start: true,\n  end: true,\n  bottom: true,\n  left: true,\n\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n\n  width: true,\n  height: true,\n\n  minWidth: true,\n  maxWidth: true,\n  minHeight: true,\n  maxHeight: true,\n\n  // Also declared as ViewProps\n  // borderTopWidth: true,\n  // borderRightWidth: true,\n  // borderBottomWidth: true,\n  // borderLeftWidth: true,\n  // borderStartWidth: true,\n  // borderEndWidth: true,\n  // borderWidth: true,\n\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n\n  flex: true,\n  flexGrow: true,\n  rowGap: true,\n  columnGap: true,\n  gap: true,\n  flexShrink: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexWrap: true,\n  justifyContent: true,\n  alignItems: true,\n  alignSelf: true,\n  alignContent: true,\n  position: true,\n  aspectRatio: true,\n\n  // Also declared as ViewProps\n  // overflow: true,\n  // display: true,\n\n  direction: true,\n\n  style: ReactNativeStyleAttributes,\n\n  experimental_layoutConformance: true,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = ConditionallyIgnoredEventHandlers({\n  onLayout: true,\n  onMagicTap: true,\n\n  // Accessibility\n  onAccessibilityAction: true,\n  onAccessibilityEscape: true,\n  onAccessibilityTap: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onClick: true,\n  onClickCapture: true,\n  onPointerUp: true,\n  onPointerDown: true,\n  onPointerCancel: true,\n  onPointerEnter: true,\n  onPointerMove: true,\n  onPointerLeave: true,\n  onPointerOver: true,\n  onPointerOut: true,\n  onGotPointerCapture: true,\n  onLostPointerCapture: true,\n});\n\n/**\n * On iOS, view managers define all of a component's props.\n * All view managers extend RCTViewManager, and RCTViewManager declares these props.\n */\nconst PlatformBaseViewConfigIos: PartialViewConfigWithoutName = {\n  bubblingEventTypes,\n  directEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigIos;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport {createViewConfig} from './ViewConfig';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nlet getRuntimeConfig;\n\n/**\n * Configures a function that is called to determine whether a given component\n * should be registered using reflection of the native component at runtime.\n *\n * The provider should return null if the native component is unavailable in\n * the current environment.\n */\nexport function setRuntimeConfigProvider(\n  runtimeConfigProvider: (name: string) => ?{\n    native: boolean,\n    verify: boolean,\n  },\n): void {\n  if (getRuntimeConfig === undefined) {\n    getRuntimeConfig = runtimeConfigProvider;\n  }\n}\n\n/**\n * Gets a `NativeComponent` that can be rendered by React Native.\n *\n * The supplied `viewConfigProvider` may or may not be invoked and utilized,\n * depending on how `setRuntimeConfigProvider` is configured.\n */\nexport function get<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): HostComponent<Config> {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {native, verify} = getRuntimeConfig?.(name) ?? {\n      native: !global.RN$Bridgeless,\n      verify: false,\n    };\n\n    let viewConfig: ViewConfig;\n    if (native) {\n      viewConfig =\n        getNativeComponentAttributes(name) ??\n        createViewConfig(viewConfigProvider());\n    } else {\n      viewConfig =\n        createViewConfig(viewConfigProvider()) ??\n        getNativeComponentAttributes(name);\n    }\n\n    invariant(\n      viewConfig != null,\n      'NativeComponentRegistry.get: both static and native view config are missing for native component \"%s\".',\n      name,\n    );\n\n    if (verify) {\n      const nativeViewConfig = native\n        ? viewConfig\n        : getNativeComponentAttributes(name);\n\n      if (nativeViewConfig == null) {\n        // Defer to static view config if native view config is missing.\n        return viewConfig;\n      }\n\n      const staticViewConfig: ViewConfig = native\n        ? createViewConfig(viewConfigProvider())\n        : viewConfig;\n\n      const validationOutput = StaticViewConfigValidator.validate(\n        name,\n        nativeViewConfig,\n        staticViewConfig,\n      );\n\n      if (validationOutput.type === 'invalid') {\n        console.error(\n          StaticViewConfigValidator.stringifyValidationResult(\n            name,\n            validationOutput,\n          ),\n        );\n      }\n    }\n\n    return viewConfig;\n  });\n\n  // $FlowFixMe[incompatible-return] `NativeComponent` is actually string!\n  return name;\n}\n\n/**\n * Same as `NativeComponentRegistry.get(...)`, except this will check either\n * the `setRuntimeConfigProvider` configuration or use native reflection (slow)\n * to determine whether this native component is available.\n *\n * If the native component is not available, a stub component is returned. Note\n * that the return value of this is not `HostComponent` because the returned\n * component instance is not guaranteed to have native methods.\n */\nexport function getWithFallback_DEPRECATED<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): React.AbstractComponent<Config> {\n  if (getRuntimeConfig == null) {\n    // `getRuntimeConfig == null` when static view configs are disabled\n    // If `setRuntimeConfigProvider` is not configured, use native reflection.\n    if (hasNativeViewConfig(name)) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  } else {\n    // If there is no runtime config, then the native component is unavailable.\n    if (getRuntimeConfig(name) != null) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  }\n\n  const FallbackNativeComponent = function (props: Config): React.Node {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\n\nfunction hasNativeViewConfig(name: string): boolean {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if there is a StaticViewConfig registered for the\n * component name received as a parameter.\n */\nexport function unstable_hasStaticViewConfig(name: string): boolean {\n  const {native} = getRuntimeConfig?.(name) ?? {\n    native: true,\n  };\n  return !native;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nimport BaseViewConfig from './BaseViewConfig';\n\nexport type PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst PlatformBaseViewConfig: PartialViewConfigWithoutName = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences: Array<Difference> = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    // $FlowFixMe[invalid-computed-prop]\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    // $FlowFixMe[invalid-computed-prop]\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    // $FlowFixMe[incompatible-return]\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet<{...}>();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(\n  value: T,\n): T | void {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value: mixed): boolean {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @nolint\n * @flow strict-local\n * @generated SignedSource<<69d0cc554d77cddb1c779dfbdf569505>>\n */\n\n'use strict';\n\nimport {type ViewConfig} from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nexport const customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    phasedRegistrationNames: $ReadOnly<{\n      captured: string,\n      bubbled: string,\n      skipBubbling?: ?boolean,\n    }>,\n  }>,\n} = {};\nexport const customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    registrationName: string,\n  }>,\n} = {};\n\nconst viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\nconst viewConfigs = new Map<string, ViewConfig>();\n\nfunction processEventTypes(viewConfig: ViewConfig): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexport function register(name: string, callback: () => ViewConfig): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n}\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexport function get(name: string): ViewConfig {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        // $FlowFixMe[recursive-definition]\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nimport NativePlatformConstantsIOS from '../../src/private/specs/modules/NativePlatformConstantsIOS';\nexport default NativePlatformConstantsIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  Platform as PlatformType,\n  PlatformSelectSpec,\n} from './Platform.flow';\n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nconst Platform: PlatformType = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    forceTouchAvailable: boolean,\n    interfaceIdiom: string,\n    isTesting: boolean,\n    isDisableAnimations?: boolean,\n    osVersion: string,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?string,\n    |},\n    systemName: string,\n    isMacCatalyst?: boolean,\n  |} {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isVision(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'vision';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isMacCatalyst(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isMacCatalyst ?? false;\n  },\n  select: <T>(spec: PlatformSelectSpec<T>): T =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type PlatformConstantsIOS = {|\n  isTesting: boolean,\n  isDisableAnimations?: boolean,\n  reactNativeVersion: {|\n    major: number,\n    minor: number,\n    patch: number,\n    prerelease: ?string,\n  |},\n  forceTouchAvailable: boolean,\n  osVersion: string,\n  systemName: string,\n  interfaceIdiom: string,\n  isMacCatalyst?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => PlatformConstantsIOS;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'PlatformConstants',\n): Spec);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n"],"names":["_ReactNativeStyleAttributes","_interopRequireDefault","require","_ViewConfigIgnore","directEventTypes","topAccessibilityAction","registrationName","topAccessibilityTap","topMagicTap","topAccessibilityEscape","topLayout","onGestureHandlerEvent","DynamicallyInjectedByGestureHandler","onGestureHandlerStateChange","validAttributesForNonEventProps","accessible","accessibilityActions","accessibilityLabel","accessibilityHint","accessibilityLanguage","accessibilityValue","accessibilityViewIsModal","accessibilityElementsHidden","accessibilityIgnoresInvertColors","accessibilityShowsLargeContentViewer","accessibilityLargeContentTitle","testID","backgroundColor","process","backfaceVisibility","cursor","opacity","shadowColor","shadowOffset","diff","shadowOpacity","shadowRadius","needsOffscreenAlphaCompositing","overflow","shouldRasterizeIOS","transform","transformOrigin","accessibilityRole","accessibilityState","nativeID","pointerEvents","removeClippedSubviews","role","borderRadius","borderColor","borderBlockColor","borderCurve","borderWidth","borderBlockWidth","borderStyle","hitSlop","collapsable","collapsableChildren","filter","boxShadow","experimental_mixBlendMode","isolation","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","borderStartWidth","borderBlockStartWidth","borderStartColor","borderBlockStartColor","borderEndWidth","borderBlockEndWidth","borderEndColor","borderBlockEndColor","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomEndRadius","borderEndEndRadius","borderEndStartRadius","borderStartEndRadius","borderStartStartRadius","display","zIndex","top","right","start","end","bottom","left","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","width","height","minWidth","maxWidth","minHeight","maxHeight","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginEnd","marginHorizontal","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingEnd","paddingHorizontal","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","flex","flexGrow","rowGap","columnGap","gap","flexShrink","flexBasis","flexDirection","flexWrap","justifyContent","alignItems","alignSelf","alignContent","position","aspectRatio","direction","style","ReactNativeStyleAttributes","experimental_layoutConformance","validAttributesForEventProps","ConditionallyIgnoredEventHandlers","onLayout","onMagicTap","onAccessibilityAction","onAccessibilityEscape","onAccessibilityTap","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onResponderGrant","onResponderReject","onResponderStart","onResponderEnd","onResponderRelease","onResponderMove","onResponderTerminate","onResponderTerminationRequest","onShouldBlockNativeResponder","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onClick","onClickCapture","onPointerUp","onPointerDown","onPointerCancel","onPointerEnter","onPointerMove","onPointerLeave","onPointerOver","onPointerOut","onGotPointerCapture","onLostPointerCapture","PlatformBaseViewConfigIos","bubblingEventTypes","topPress","phasedRegistrationNames","bubbled","captured","topChange","topFocus","topBlur","topSubmitEditing","topEndEditing","topKeyPress","topTouchStart","topTouchMove","topTouchCancel","topTouchEnd","topClick","topPointerCancel","topPointerDown","topPointerMove","topPointerUp","topPointerEnter","skipBubbling","topPointerLeave","topPointerOver","topPointerOut","topGotPointerCapture","topLostPointerCapture","validAttributes","Object","assign","exports","name","viewConfigProvider","getRuntimeConfig","invariant","UIManager","getViewManagerConfig","hasNativeViewConfig","get","FallbackNativeComponent","props","displayName","runtimeConfigProvider","undefined","_getRuntimeConfig2","native","_getNativeComponentAttributes","_UIManager","ReactNativeViewConfigRegistry","_interopRequireWildcard","StaticViewConfigValidator","_ViewConfig","_invariant","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","register","_getRuntimeConfig","viewConfig","_getNativeComponentAt","_createViewConfig","_ref","global","RN$Bridgeless","verify","getNativeComponentAttributes","createViewConfig","nativeViewConfig","staticViewConfig","validationOutput","validate","type","console","error","stringifyValidationResult","PlatformBaseViewConfig","BaseViewConfig","validationResult","differences","concat","_toConsumableArray2","map","difference","path","join","accumulateDifferences","uiViewClassName","length","nativeObject","staticObject","nativeKey","nativeValue","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","push","pop","value","Array","isArray","partialViewConfig","Commands","composeIndexers","_PlatformBaseViewConfig","maybeA","maybeB","Platform","OS","object","ignoredViewConfigProps","add","_Platform","WeakSet","viewConfigs","callback","viewConfigCallbacks","test","__DEV__","topLevelType","customBubblingEventTypes","customDirectEventTypes","processEventTypes","Map","_NativePlatformConstantsIOS","keys","forEach","key","prototype","_exportNames","enumerable","NativePlatformConstantsIOS","__constants","Version","this","constants","osVersion","getConstants","isPad","interfaceIdiom","isTV","isVision","isTesting","isDisableAnimations","_this$constants$isDis","isMacCatalyst","_this$constants$isMac","select","spec","ios","module","TurboModuleRegistry","getEnforcing","condition","format","b","c","d","f","Error","args","argIndex","replace","framesToPop"],"sourceRoot":""}