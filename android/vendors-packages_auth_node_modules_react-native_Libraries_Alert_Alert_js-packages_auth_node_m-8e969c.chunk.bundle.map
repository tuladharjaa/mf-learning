{"version":3,"file":"vendors-packages_auth_node_modules_react-native_Libraries_Alert_Alert_js-packages_auth_node_m-8e969c.chunk.bundle","mappings":"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","sources":["webpack:///../../packages/auth/node_modules/react-native/Libraries/Alert/Alert.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Alert/RCTAlertManager.android.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Blob/Blob.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Blob/BlobManager.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Blob/BlobRegistry.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Blob/NativeBlobModule.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/BugReporting/BugReporting.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/BugReporting/NativeBugReporting.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/BugReporting/dumpReactTree.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Components/View/View.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Core/registerCallableModule.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/NativeModules/specs/NativeDeviceEventManager.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/NativeModules/specs/NativeRedBox.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Network/FormData.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Network/NativeNetworkingAndroid.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Network/RCTNetworking.android.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Network/convertRequestBody.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/AppContainer-prod.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/AppContainer.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/AppRegistry.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/DisplayMode.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/HeadlessJsTaskError.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/NativeHeadlessJsTaskSupport.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/RootTag.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/ReactNative/renderApplication.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Text/TextAncestor.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/BackHandler.android.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/PerformanceLoggerContext.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/RCTLog.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/SceneTracker.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack:///../../packages/auth/node_modules/react-native/Libraries/Utilities/infoLog.js","webpack:///../../packages/auth/node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack:///../../packages/auth/node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js","webpack:///../../packages/auth/node_modules/react-native/src/private/featureflags/specs/NativeReactNativeFeatureFlags.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeBlobModule.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeBugReporting.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeDeviceEventManager.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeDialogManagerAndroid.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeHeadlessJsTaskSupport.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeNetworkingAndroid.js","webpack:///../../packages/auth/node_modules/react-native/src/private/specs/modules/NativeRedBox.js","webpack:///../../packages/auth/node_modules/react-native/src/private/styles/composeStyles.js","webpack:///../../packages/auth/node_modules/base64-js/index.js","webpack:///../../packages/auth/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///../../packages/auth/node_modules/react/jsx-runtime.js","webpack:///../../packages/auth/node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///../../packages/auth/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///../../packages/auth/node_modules/@babel/runtime/helpers/readOnlyError.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {DialogOptions} from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nimport Platform from '../Utilities/Platform';\nimport RCTAlertManager from './RCTAlertManager';\n\nexport type AlertType =\n  | 'default'\n  | 'plain-text'\n  | 'secure-text'\n  | 'login-password';\nexport type AlertButtonStyle = 'default' | 'cancel' | 'destructive';\nexport type Buttons = Array<{\n  text?: string,\n  onPress?: ?Function,\n  isPreferred?: boolean,\n  style?: AlertButtonStyle,\n  ...\n}>;\n\ntype Options = {\n  cancelable?: ?boolean,\n  userInterfaceStyle?: 'unspecified' | 'light' | 'dark',\n  onDismiss?: ?() => void,\n  ...\n};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See https://reactnative.dev/docs/alert\n */\nclass Alert {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n  ): void {\n    if (Platform.OS === 'ios') {\n      Alert.prompt(\n        title,\n        message,\n        buttons,\n        'default',\n        undefined,\n        undefined,\n        options,\n      );\n    } else if (Platform.OS === 'android') {\n      const NativeDialogManagerAndroid =\n        require('../NativeModules/specs/NativeDialogManagerAndroid').default;\n      if (!NativeDialogManagerAndroid) {\n        return;\n      }\n      const constants = NativeDialogManagerAndroid.getConstants();\n\n      const config: DialogOptions = {\n        title: title || '',\n        message: message || '',\n        cancelable: false,\n      };\n\n      if (options && options.cancelable) {\n        config.cancelable = options.cancelable;\n      }\n      // At most three buttons (neutral, negative, positive). Ignore rest.\n      // The text 'OK' should be probably localized. iOS Alert does that in native.\n      const defaultPositiveText = 'OK';\n      const validButtons: Buttons = buttons\n        ? buttons.slice(0, 3)\n        : [{text: defaultPositiveText}];\n      const buttonPositive = validButtons.pop();\n      const buttonNegative = validButtons.pop();\n      const buttonNeutral = validButtons.pop();\n\n      if (buttonNeutral) {\n        config.buttonNeutral = buttonNeutral.text || '';\n      }\n      if (buttonNegative) {\n        config.buttonNegative = buttonNegative.text || '';\n      }\n      if (buttonPositive) {\n        config.buttonPositive = buttonPositive.text || defaultPositiveText;\n      }\n\n      /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      const onAction = (action, buttonKey) => {\n        if (action === constants.buttonClicked) {\n          if (buttonKey === constants.buttonNeutral) {\n            // $FlowFixMe[incompatible-type]\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (buttonKey === constants.buttonNegative) {\n            // $FlowFixMe[incompatible-type]\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (buttonKey === constants.buttonPositive) {\n            // $FlowFixMe[incompatible-type]\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === constants.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      };\n      const onError = (errorMessage: string) => console.warn(errorMessage);\n      NativeDialogManagerAndroid.showAlert(config, onError, onAction);\n    }\n  }\n\n  static prompt(\n    title: ?string,\n    message?: ?string,\n    callbackOrButtons?: ?(((text: string) => void) | Buttons),\n    type?: ?AlertType = 'plain-text',\n    defaultValue?: string,\n    keyboardType?: string,\n    options?: Options,\n  ): void {\n    if (Platform.OS === 'ios') {\n      let callbacks: Array<?any> = [];\n      const buttons = [];\n      let cancelButtonKey;\n      let destructiveButtonKey;\n      let preferredButtonKey;\n      if (typeof callbackOrButtons === 'function') {\n        callbacks = [callbackOrButtons];\n      } else if (Array.isArray(callbackOrButtons)) {\n        callbackOrButtons.forEach((btn, index) => {\n          callbacks[index] = btn.onPress;\n          if (btn.style === 'cancel') {\n            cancelButtonKey = String(index);\n          } else if (btn.style === 'destructive') {\n            destructiveButtonKey = String(index);\n          }\n          if (btn.isPreferred) {\n            preferredButtonKey = String(index);\n          }\n          if (btn.text || index < (callbackOrButtons || []).length - 1) {\n            const btnDef: {[number]: string} = {};\n            btnDef[index] = btn.text || '';\n            buttons.push(btnDef);\n          }\n        });\n      }\n\n      RCTAlertManager.alertWithArgs(\n        {\n          title: title || '',\n          message: message || undefined,\n          buttons,\n          type: type || undefined,\n          defaultValue,\n          cancelButtonKey,\n          destructiveButtonKey,\n          preferredButtonKey,\n          keyboardType,\n          userInterfaceStyle: options?.userInterfaceStyle || undefined,\n        },\n        (id, value) => {\n          const cb = callbacks[id];\n          cb && cb(value);\n        },\n      );\n    }\n  }\n}\n\nmodule.exports = Alert;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nfunction emptyCallback() {}\n\nmodule.exports = {\n  alertWithArgs: function (args, callback) {\n    // TODO(5998984): Polyfill it correctly with DialogManagerAndroid\n    if (!NativeDialogManagerAndroid) {\n      return;\n    }\n\n    NativeDialogManagerAndroid.showAlert(\n      args,\n      emptyCallback,\n      callback || emptyCallback,\n    );\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {BlobData, BlobOptions} from './BlobTypes';\n\n/**\n * Opaque JS representation of some binary data in native.\n *\n * The API is modeled after the W3C Blob API, with one caveat\n * regarding explicit deallocation. Refer to the `close()`\n * method for further details.\n *\n * Example usage in a React component:\n *\n *   class WebSocketImage extends React.Component {\n *      state = {blob: null};\n *      componentDidMount() {\n *        let ws = this.ws = new WebSocket(...);\n *        ws.binaryType = 'blob';\n *        ws.onmessage = (event) => {\n *          if (this.state.blob) {\n *            this.state.blob.close();\n *          }\n *          this.setState({blob: event.data});\n *        };\n *      }\n *      componentUnmount() {\n *        if (this.state.blob) {\n *          this.state.blob.close();\n *        }\n *        this.ws.close();\n *      }\n *      render() {\n *        if (!this.state.blob) {\n *          return <View />;\n *        }\n *        return <Image source={{uri: URL.createObjectURL(this.state.blob)}} />;\n *      }\n *   }\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob\n */\nclass Blob {\n  _data: ?BlobData;\n\n  /**\n   * Constructor for JS consumers.\n   * Currently we only support creating Blobs from other Blobs.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n   */\n  constructor(parts: Array<Blob | string> = [], options?: BlobOptions) {\n    const BlobManager = require('./BlobManager');\n    this.data = BlobManager.createFromParts(parts, options).data;\n  }\n\n  /*\n   * This method is used to create a new Blob object containing\n   * the data in the specified range of bytes of the source Blob.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  set data(data: ?BlobData) {\n    this._data = data;\n  }\n\n  // $FlowFixMe[unsafe-getters-setters]\n  get data(): BlobData {\n    if (!this._data) {\n      throw new Error('Blob has been closed and is no longer available');\n    }\n\n    return this._data;\n  }\n\n  slice(start?: number, end?: number, contentType: string = ''): Blob {\n    const BlobManager = require('./BlobManager');\n    let {offset, size} = this.data;\n\n    if (typeof start === 'number') {\n      if (start > size) {\n        // $FlowFixMe[reassign-const]\n        start = size;\n      }\n      offset += start;\n      size -= start;\n\n      if (typeof end === 'number') {\n        if (end < 0) {\n          // $FlowFixMe[reassign-const]\n          end = this.size + end;\n        }\n        if (end > this.size) {\n          // $FlowFixMe[reassign-const]\n          end = this.size;\n        }\n        size = end - start;\n      }\n    }\n    return BlobManager.createFromOptions({\n      blobId: this.data.blobId,\n      offset,\n      size,\n      type: contentType,\n      /* Since `blob.slice()` creates a new view onto the same binary\n       * data as the original blob, we should re-use the same collector\n       * object so that the underlying resource gets deallocated when\n       * the last view into the data is released, not the first.\n       */\n      __collector: this.data.__collector,\n    });\n  }\n\n  /**\n   * This method is in the standard, but not actually implemented by\n   * any browsers at this point. It's important for how Blobs work in\n   * React Native, however, since we cannot de-allocate resources automatically,\n   * so consumers need to explicitly de-allocate them.\n   *\n   * Note that the semantics around Blobs created via `blob.slice()`\n   * and `new Blob([blob])` are different. `blob.slice()` creates a\n   * new *view* onto the same binary data, so calling `close()` on any\n   * of those views is enough to deallocate the data, whereas\n   * `new Blob([blob, ...])` actually copies the data in memory.\n   */\n  close() {\n    const BlobManager = require('./BlobManager');\n    BlobManager.release(this.data.blobId);\n    this.data = null;\n  }\n\n  /**\n   * Size of the data contained in the Blob object, in bytes.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get size(): number {\n    return this.data.size;\n  }\n\n  /*\n   * String indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get type(): string {\n    return this.data.type || '';\n  }\n}\n\nmodule.exports = Blob;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {BlobCollector, BlobData, BlobOptions} from './BlobTypes';\n\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId: string): BlobCollector | null {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable: boolean = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts: Array<Blob | string>,\n    options?: BlobOptions,\n  ): Blob {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options: BlobData): Blob {\n    BlobRegistry.register(options.blobId);\n    // $FlowFixMe[prop-missing]\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId: string): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler(): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob: Blob, socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nconst registry: Map<string, number> = new Map();\n\nconst register = (id: string) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    registry.set(id, used + 1);\n  } else {\n    registry.set(id, 1);\n  }\n};\n\nconst unregister = (id: string) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    if (used <= 1) {\n      registry.delete(id);\n    } else {\n      registry.set(id, used - 1);\n    }\n  }\n};\n\nconst has = (id: string): number | boolean => {\n  return registry.get(id) || false;\n};\n\nmodule.exports = {\n  register,\n  unregister,\n  has,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeBlobModule';\nimport NativeBlobModule from '../../src/private/specs/modules/NativeBlobModule';\nexport default NativeBlobModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\ntype ExtraData = {[key: string]: string, ...};\ntype SourceCallback = () => string;\ntype DebugData = {\n  extras: ExtraData,\n  files: ExtraData,\n  ...\n};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EventSubscription = null;\n  static _redboxSubscription: ?EventSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void, ...} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeBugReporting';\nimport NativeBugReporting from '../../src/private/specs/modules/NativeBugReporting';\nexport default NativeBugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/*\nconst getReactData = require('getReactData');\n\nconst INDENTATION_SIZE = 2;\nconst MAX_DEPTH = 2;\nconst MAX_STRING_LENGTH = 50;\n*/\n\n/**\n * Dump all React Native root views and their content. This function tries\n * it best to get the content but ultimately relies on implementation details\n * of React and will fail in future versions.\n */\nfunction dumpReactTree(): string {\n  try {\n    return getReactTree();\n  } catch (e) {\n    return 'Failed to dump react tree: ' + e;\n  }\n}\n\nfunction getReactTree() {\n  // TODO(sema): Reenable tree dumps using the Fiber tree structure. #15945684\n  return (\n    'React tree dumps have been temporarily disabled while React is ' +\n    'upgraded to Fiber.'\n  );\n  /*\n  let output = '';\n  const rootIds = Object.getOwnPropertyNames(ReactNativeMount._instancesByContainerID);\n  for (const rootId of rootIds) {\n    const instance = ReactNativeMount._instancesByContainerID[rootId];\n    output += `============ Root ID: ${rootId} ============\\n`;\n    output += dumpNode(instance, 0);\n    output += `============ End root ID: ${rootId} ============\\n`;\n  }\n  return output;\n*/\n}\n\n/*\nfunction dumpNode(node: Object, indentation: number) {\n  const data = getReactData(node);\n  if (data.nodeType === 'Text') {\n    return indent(indentation) + data.text + '\\n';\n  } else if (data.nodeType === 'Empty') {\n    return '';\n  }\n  let output = indent(indentation) + `<${data.name}`;\n  if (data.nodeType === 'Composite') {\n    for (const propName of Object.getOwnPropertyNames(data.props || {})) {\n      if (isNormalProp(propName)) {\n        try {\n          const value = convertValue(data.props[propName]);\n          if (value) {\n            output += ` ${propName}=${value}`;\n          }\n        } catch (e) {\n          const message = `[Failed to get property: ${e}]`;\n          output += ` ${propName}=${message}`;\n        }\n      }\n    }\n  }\n  let childOutput = '';\n  for (const child of data.children || []) {\n    childOutput += dumpNode(child, indentation + 1);\n  }\n\n  if (childOutput) {\n    output += '>\\n' + childOutput + indent(indentation) + `</${data.name}>\\n`;\n  } else {\n    output += ' />\\n';\n  }\n\n  return output;\n}\n\nfunction isNormalProp(name: string): boolean {\n  switch (name) {\n    case 'children':\n    case 'key':\n    case 'ref':\n      return false;\n    default:\n      return true;\n  }\n}\n\nfunction convertObject(object: Object, depth: number) {\n  if (depth >= MAX_DEPTH) {\n    return '[...omitted]';\n  }\n  let output = '{';\n  let first = true;\n  for (const key of Object.getOwnPropertyNames(object)) {\n    if (!first) {\n      output += ', ';\n    }\n    output += `${key}: ${convertValue(object[key], depth + 1)}`;\n    first = false;\n  }\n  return output + '}';\n}\n\nfunction convertValue(value, depth = 0): ?string {\n  if (!value) {\n    return null;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(possiblyEllipsis(value).replace('\\n', '\\\\n'));\n    case 'boolean':\n    case 'number':\n      return JSON.stringify(value);\n    case 'function':\n      return '[function]';\n    case 'object':\n      return convertObject(value, depth);\n    default:\n      return null;\n  }\n}\n\nfunction possiblyEllipsis(value: string) {\n  if (value.length > MAX_STRING_LENGTH) {\n    return value.slice(0, MAX_STRING_LENGTH) + '...';\n  } else {\n    return value;\n  }\n}\n\nfunction indent(size: number) {\n  return ' '.repeat(size * INDENTATION_SIZE);\n}\n*/\n\nmodule.exports = dumpReactTree;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from './ViewPropTypes';\n\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View: React.AbstractComponent<\n  ViewProps,\n  React.ElementRef<typeof ViewNativeComponent>,\n> = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      tabIndex,\n      ...otherProps\n    }: ViewProps,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport Platform from '../../Utilities/Platform';\nimport {type ViewProps as Props} from './ViewPropTypes';\nimport * as React from 'react';\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig =\n  Platform.OS === 'android'\n    ? {\n        uiViewClassName: 'RCTView',\n        validAttributes: {\n          // ReactClippingViewManager @ReactProps\n          removeClippedSubviews: true,\n\n          // ReactViewManager @ReactProps\n          accessible: true,\n          hasTVPreferredFocus: true,\n          nextFocusDown: true,\n          nextFocusForward: true,\n          nextFocusLeft: true,\n          nextFocusRight: true,\n          nextFocusUp: true,\n\n          borderRadius: true,\n          borderTopLeftRadius: true,\n          borderTopRightRadius: true,\n          borderBottomRightRadius: true,\n          borderBottomLeftRadius: true,\n          borderTopStartRadius: true,\n          borderTopEndRadius: true,\n          borderBottomStartRadius: true,\n          borderBottomEndRadius: true,\n          borderEndEndRadius: true,\n          borderEndStartRadius: true,\n          borderStartEndRadius: true,\n          borderStartStartRadius: true,\n          borderStyle: true,\n          hitSlop: true,\n          pointerEvents: true,\n          nativeBackgroundAndroid: true,\n          nativeForegroundAndroid: true,\n          needsOffscreenAlphaCompositing: true,\n\n          borderWidth: true,\n          borderLeftWidth: true,\n          borderRightWidth: true,\n          borderTopWidth: true,\n          borderBottomWidth: true,\n          borderStartWidth: true,\n          borderEndWidth: true,\n\n          borderColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderLeftColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderRightColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderTopColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBottomColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderStartColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderEndColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockEndColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          borderBlockStartColor: {\n            process: require('../../StyleSheet/processColor').default,\n          },\n          focusable: true,\n          overflow: true,\n          backfaceVisibility: true,\n          experimental_layoutConformance: true,\n        },\n      }\n    : {\n        uiViewClassName: 'RCTView',\n      };\n\nconst ViewNativeComponent: HostComponent<Props> =\n  NativeComponentRegistry.get<Props>('RCTView', () => __INTERNAL_VIEW_CONFIG);\n\ninterface NativeCommands {\n  +hotspotUpdate: (\n    viewRef: React.ElementRef<HostComponent<mixed>>,\n    x: number,\n    y: number,\n  ) => void;\n  +setPressed: (\n    viewRef: React.ElementRef<HostComponent<mixed>>,\n    pressed: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['hotspotUpdate', 'setPressed'],\n});\n\nexport default ViewNativeComponent;\n\nexport type ViewNativeComponentType = HostComponent<Props>;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\ntype Module = {...};\ntype RegisterCallableModule = (\n  name: string,\n  moduleOrFactory: Module | (void => Module),\n) => void;\n\nconst registerCallableModule: RegisterCallableModule = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {\n  EventSubscription,\n  IEventEmitter,\n} from '../vendor/emitter/EventEmitter';\n\nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n\ninterface NativeModule {\n  addListener(eventType: string): void;\n  removeListeners(count: number): void;\n}\n\nexport type {EventSubscription};\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter<TEventToArgsMap: {...}>\n  implements IEventEmitter<TEventToArgsMap>\n{\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(\n        nativeModule != null,\n        '`new NativeEventEmitter()` requires a non-null argument.',\n      );\n    }\n\n    const hasAddListener =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.removeListeners === 'function';\n\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.',\n        );\n      }\n      if (!hasRemoveListeners) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.',\n        );\n      }\n    }\n  }\n\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    this._nativeModule?.addListener(eventType);\n    let subscription: ?EventSubscription = RCTDeviceEventEmitter.addListener(\n      eventType,\n      listener,\n      context,\n    );\n\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          // $FlowFixMe[incompatible-use]\n          subscription.remove();\n          subscription = null;\n        }\n      },\n    };\n  }\n\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: $ElementType<TEventToArgsMap, TEvent>\n  ): void {\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(\n    eventType?: ?TEvent,\n  ): void {\n    invariant(\n      eventType != null,\n      '`NativeEventEmitter.removeAllListener()` requires a non-null argument.',\n    );\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeDeviceEventManager';\nimport NativeDeviceEventManager from '../../../src/private/specs/modules/NativeDeviceEventManager';\nexport default NativeDeviceEventManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nimport NativeDialogManagerAndroid from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nexport default NativeDialogManagerAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../../src/private/specs/modules/NativeRedBox';\nimport NativeRedBox from '../../../src/private/specs/modules/NativeRedBox';\nexport default NativeRedBox;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\ntype FormDataNameValuePair = [string, FormDataValue];\n\ntype Headers = {[name: string]: string, ...};\ntype FormDataPart =\n  | {\n      string: string,\n      headers: Headers,\n      ...\n    }\n  | {\n      uri: string,\n      headers: Headers,\n      name?: string,\n      type?: string,\n      ...\n    };\n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts: Array<FormDataNameValuePair>;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key: string, value: FormDataValue) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key: string): Array<FormDataValue> {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts(): Array<FormDataPart> {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers: Headers = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += `; filename=\"${\n            value.name\n          }\"; filename*=utf-8''${encodeURI(value.name)}`;\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeNetworkingAndroid';\nimport NativeNetworkingAndroid from '../../src/private/specs/modules/NativeNetworkingAndroid';\nexport default NativeNetworkingAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {RequestBody} from './convertRequestBody';\nimport type {NativeResponseType} from './XMLHttpRequest';\n\n// Do not require the native RCTNetworking module directly! Use this wrapper module instead.\n// It will add the necessary requestId, so that you don't have to generate it yourself.\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport convertRequestBody from './convertRequestBody';\nimport NativeNetworkingAndroid from './NativeNetworkingAndroid';\n\ntype Header = [string, string];\n\n// Convert FormData headers to arrays, which are easier to consume in\n// native on Android.\nfunction convertHeadersMapToArray(headers: Object): Array<Header> {\n  const headerArray: Array<Header> = [];\n  for (const name in headers) {\n    headerArray.push([name, headers[name]]);\n  }\n  return headerArray;\n}\n\nlet _requestId = 1;\nfunction generateRequestId(): number {\n  return _requestId++;\n}\n\n/**\n * This class is a wrapper around the native RCTNetworking module. It adds a necessary unique\n * requestId to each network request that can be used to abort that request later on.\n */\n// FIXME: use typed events\nclass RCTNetworking extends NativeEventEmitter<$FlowFixMe> {\n  constructor() {\n    super(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeNetworkingAndroid,\n    );\n  }\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: Object,\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => mixed,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    if (body && body.formData) {\n      body.formData = body.formData.map(part => ({\n        ...part,\n        headers: convertHeadersMapToArray(part.headers),\n      }));\n    }\n    const requestId = generateRequestId();\n    NativeNetworkingAndroid.sendRequest(\n      method,\n      url,\n      requestId,\n      convertHeadersMapToArray(headers),\n      {...body, trackingName},\n      responseType,\n      incrementalUpdates,\n      timeout,\n      withCredentials,\n    );\n    callback(requestId);\n  }\n\n  abortRequest(requestId: number) {\n    NativeNetworkingAndroid.abortRequest(requestId);\n  }\n\n  clearCookies(callback: (result: boolean) => any) {\n    NativeNetworkingAndroid.clearCookies(callback);\n  }\n}\n\nexport default (new RCTNetworking(): RCTNetworking);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type {Props} from './AppContainer';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  rootTag,\n  WrapperComponent,\n  rootViewStyle,\n}: Props): React.Node => {\n  let innerView = children;\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent initialProps={initialProps} fabric={fabric === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View style={rootViewStyle || styles.root} pointerEvents=\"box-none\">\n        {innerView}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {flex: 1},\n});\n\nexport default AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {RootTag} from './RootTag';\n\nimport * as React from 'react';\n\nexport type Props = $ReadOnly<{|\n  children?: React.Node,\n  fabric?: boolean,\n  rootTag: number | RootTag,\n  initialProps?: {...},\n  WrapperComponent?: ?React.ComponentType<any>,\n  rootViewStyle?: ?ViewStyleProp,\n  internal_excludeLogBox?: boolean,\n  internal_excludeInspector?: boolean,\n|}>;\n\nconst AppContainer: React.AbstractComponent<Props> = __DEV__\n  ? require('./AppContainer-dev').default\n  : require('./AppContainer-prod').default;\n\nmodule.exports = AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\nimport type {DisplayModeType} from './DisplayMode';\n\nimport registerCallableModule from '../Core/registerCallableModule';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\ntype Task = (taskData: any) => Promise<void>;\nexport type TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component_: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Runnable,\n  section?: boolean,\n  ...\n};\ntype AppParameters = {\n  initialProps: $ReadOnly<{[string]: mixed, ...}>,\n  rootTag: RootTag,\n  fabric?: boolean,\n  concurrentRoot?: boolean,\n};\nexport type Runnable = (\n  appParameters: AppParameters,\n  displayMode: DisplayModeType,\n) => void;\nexport type Runnables = {[appKey: string]: Runnable};\nexport type Registry = {\n  sections: $ReadOnlyArray<string>,\n  runnables: Runnables,\n  ...\n};\nexport type WrapperComponentProvider = (\n  appParameters: Object,\n) => React$ComponentType<any>;\nexport type RootViewStyleProvider = (appParameters: Object) => ViewStyleProp;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook =\n  (component: ComponentProvider) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet rootViewStyleProvider: ?RootViewStyleProvider;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  setRootViewStyleProvider(provider: RootViewStyleProvider) {\n    rootViewStyleProvider = provider;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    const scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = (appParameters, displayMode) => {\n      const concurrentRootEnabled = Boolean(\n        appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot,\n      );\n      renderApplication(\n        componentProviderInstrumentationHook(\n          componentProvider,\n          scopedPerformanceLogger,\n        ),\n        appParameters.initialProps,\n        appParameters.rootTag,\n        wrapperComponentProvider && wrapperComponentProvider(appParameters),\n        rootViewStyleProvider && rootViewStyleProvider(appParameters),\n        appParameters.fabric,\n        scopedPerformanceLogger,\n        appKey === 'LogBox', // is logbox\n        appKey,\n        displayMode,\n        concurrentRootEnabled,\n      );\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Runnable): string {\n    runnables[appKey] = run;\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): $ReadOnlyArray<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): $ReadOnlyArray<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey: string,\n    appParameters: AppParameters,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__ ? ` with ${JSON.stringify(appParameters)}` : '';\n      const msg = `Running \"${appKey}\"${logParams}`;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey: string,\n    appParameters: Object,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: RootTag): void {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\n// Register LogBox as a default surface\nAppRegistry.registerComponent('LogBox', () => {\n  if (__DEV__ && typeof jest === 'undefined') {\n    return require('../LogBox/LogBoxInspectorContainer').default;\n  } else {\n    return function NoOp() {\n      return null;\n    };\n  }\n});\n\nglobal.RN$AppRegistry = AppRegistry;\n\n// Backwards compat with SurfaceRegistry, remove me later\nglobal.RN$SurfaceRegistry = {\n  renderSurface: AppRegistry.runApplication,\n  setSurfaceProps: AppRegistry.setSurfaceProps,\n};\n\nif (global.RN$Bridgeless === true) {\n  console.log('Bridgeless mode is enabled');\n}\n\nregisterCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport opaque type DisplayModeType = number;\n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode: {[string]: DisplayModeType} = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value: ?number): DisplayModeType {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport default class HeadlessJsTaskError extends Error {}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nexport * from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nimport NativeHeadlessJsTaskSupport from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nexport default NativeHeadlessJsTaskSupport;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport * as React from 'react';\n\nexport opaque type RootTag = number;\n\nexport const RootTagContext: React$Context<RootTag> =\n  React.createContext<RootTag>(0);\n\nif (__DEV__) {\n  RootTagContext.displayName = 'RootTagContext';\n}\n\n/**\n * Intended to only be used by `AppContainer`.\n */\nexport function createRootTag(rootTag: number | RootTag): RootTag {\n  return rootTag;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {AbstractComponent} from 'react';\n\nimport * as React from 'react';\n\ntype NoopComponent = AbstractComponent<{children: React.Node}>;\n\nconst cache: Map<\n  string, // displayName\n  NoopComponent, // ComponentWithDisplayName\n> = new Map();\n\nexport default function getCachedComponentWithDisplayName(\n  displayName: string,\n): NoopComponent {\n  let ComponentWithDisplayName = cache.get(displayName);\n\n  if (!ComponentWithDisplayName) {\n    ComponentWithDisplayName = ({children}: {children: React.Node}) => children;\n    // $FlowFixMe[prop-missing]\n    ComponentWithDisplayName.displayName = displayName;\n    cache.set(displayName, ComponentWithDisplayName);\n  }\n\n  return ComponentWithDisplayName;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype ActivityType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  rootViewStyle?: ?ViewStyleProp,\n  fabric?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        WrapperComponent={WrapperComponent}\n        rootViewStyle={rootViewStyle}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Activity: ActivityType = React.unstable_Activity;\n\n    renderable = (\n      <Activity\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Activity>\n    );\n  }\n\n  // We want to have concurrentRoot always enabled when you're on Fabric.\n  const useConcurrentRootOverride = fabric;\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRootOverride ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRootOverride),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {\n  ____ColorValue_Internal,\n  ____DangerouslyImpreciseStyle_Internal,\n  ____DangerouslyImpreciseStyleProp_Internal,\n  ____ImageStyle_Internal,\n  ____ImageStyleProp_Internal,\n  ____Styles_Internal,\n  ____TextStyle_Internal,\n  ____TextStyleProp_Internal,\n  ____ViewStyle_Internal,\n  ____ViewStyleProp_Internal,\n} from './StyleSheetTypes';\n\nimport composeStyles from '../../src/private/styles/composeStyles';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst flatten = require('./flattenStyle');\n\nexport type {NativeColorValue} from './StyleSheetTypes';\n\n/**\n * This type should be used as the type for anything that is a color. It is\n * most useful when using DynamicColorIOS which can be a string or a dynamic\n * color object.\n *\n * type props = {backgroundColor: ColorValue};\n */\nexport type ColorValue = ____ColorValue_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <View>'s `style` prop. This ensures call sites of the component\n * can't pass styles that View doesn't support such as `fontSize`.`\n *\n * type Props = {style: ViewStyleProp}\n * const MyComponent = (props: Props) => <View style={props.style} />\n */\nexport type ViewStyleProp = ____ViewStyleProp_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <Text>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Text doesn't support such as `resizeMode`.`\n *\n * type Props = {style: TextStyleProp}\n * const MyComponent = (props: Props) => <Text style={props.style} />\n */\nexport type TextStyleProp = ____TextStyleProp_Internal;\n\n/**\n * This type should be used as the type for a prop that is passed through\n * to an <Image>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Image doesn't support such as `fontSize`.`\n *\n * type Props = {style: ImageStyleProp}\n * const MyComponent = (props: Props) => <Image style={props.style} />\n */\nexport type ImageStyleProp = ____ImageStyleProp_Internal;\n\n/**\n * WARNING: You probably shouldn't be using this type. This type\n * is similar to the ones above except it allows styles that are accepted\n * by all of View, Text, or Image. It is therefore very unsafe to pass this\n * through to an underlying component. Using this is almost always a mistake\n * and using one of the other more restrictive types is likely the right choice.\n */\nexport type DangerouslyImpreciseStyleProp =\n  ____DangerouslyImpreciseStyleProp_Internal;\n\n/**\n * Utility type for getting the values for specific style keys.\n *\n * The following is bad because position is more restrictive than 'string':\n * ```\n * type Props = {position: string};\n * ```\n *\n * You should use the following instead:\n *\n * ```\n * type Props = {position: TypeForStyleKey<'position'>};\n * ```\n *\n * This will correctly give you the type 'absolute' | 'relative'\n */\nexport type TypeForStyleKey<\n  +key: $Keys<____DangerouslyImpreciseStyle_Internal>,\n> = $ElementType<____DangerouslyImpreciseStyle_Internal, key>;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for View.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ViewStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a View that can't be precomputed with\n * StyleSheet.create.\n */\nexport type ViewStyle = ____ViewStyle_Internal;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Text.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using TextStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a Text that can't be precomputed with\n * StyleSheet.create.\n */\nexport type TextStyle = ____TextStyle_Internal;\n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Image.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ImageStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to an Image that can't be precomputed with\n * StyleSheet.create.\n */\nexport type ImageStyle = ____ImageStyle_Internal;\n\n/**\n * WARNING: You probably shouldn't be using this type. This type is an object\n * with all possible style keys and their values. Note that this isn't\n * a safe way to type a style prop for a component as results from\n * StyleSheet.create return an internal identifier, not an object of styles.\n *\n * If you want to type the style prop of a function, consider using\n * ViewStyleProp, TextStyleProp, or ImageStyleProp.\n *\n * This should only be used by very core utilities that operate on an object\n * containing any possible style value.\n */\nexport type DangerouslyImpreciseStyle = ____DangerouslyImpreciseStyle_Internal;\n\nlet hairlineWidth: number = PixelRatio.roundToNearestPixel(0.4);\nif (hairlineWidth === 0) {\n  hairlineWidth = 1 / PixelRatio.get();\n}\n\nconst absoluteFill = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nif (__DEV__) {\n  Object.freeze(absoluteFill);\n}\n\n/**\n * A StyleSheet is an abstraction similar to CSS StyleSheets\n *\n * Create a new StyleSheet:\n *\n * ```\n * const styles = StyleSheet.create({\n *   container: {\n *     borderRadius: 4,\n *     borderWidth: 0.5,\n *     borderColor: '#d6d7da',\n *   },\n *   title: {\n *     fontSize: 19,\n *     fontWeight: 'bold',\n *   },\n *   activeTitle: {\n *     color: 'red',\n *   },\n * });\n * ```\n *\n * Use a StyleSheet:\n *\n * ```\n * <View style={styles.container}>\n *   <Text style={[styles.title, this.props.isActive && styles.activeTitle]} />\n * </View>\n * ```\n *\n * Code quality:\n *\n *  - By moving styles away from the render function, you're making the code\n *    easier to understand.\n *  - Naming the styles is a good way to add meaning to the low level components\n *  in the render function, and encourage reuse.\n *  - In most IDEs, using `StyleSheet.create()` will offer static type checking\n *  and suggestions to help you write valid styles.\n *\n */\nmodule.exports = {\n  /**\n   * This is defined as the width of a thin line on the platform. It can be\n   * used as the thickness of a border or division between two elements.\n   * Example:\n   * ```\n   *   {\n   *     borderBottomColor: '#bbb',\n   *     borderBottomWidth: StyleSheet.hairlineWidth\n   *   }\n   * ```\n   *\n   * This constant will always be a round number of pixels (so a line defined\n   * by it look crisp) and will try to match the standard width of a thin line\n   * on the underlying platform. However, you should not rely on it being a\n   * constant size, because on different platforms and screen densities its\n   * value may be calculated differently.\n   *\n   * A line with hairline width may not be visible if your simulator is downscaled.\n   */\n  hairlineWidth,\n\n  /**\n   * A very common pattern is to create overlays with position absolute and zero positioning,\n   * so `absoluteFill` can be used for convenience and to reduce duplication of these repeated\n   * styles.\n   */\n  absoluteFill: (absoluteFill: any), // TODO: This should be updated after we fix downstream Flow sites.\n\n  /**\n   * Sometimes you may want `absoluteFill` but with a couple tweaks - `absoluteFillObject` can be\n   * used to create a customized entry in a `StyleSheet`, e.g.:\n   *\n   *   const styles = StyleSheet.create({\n   *     wrapper: {\n   *       ...StyleSheet.absoluteFillObject,\n   *       top: 10,\n   *       backgroundColor: 'transparent',\n   *     },\n   *   });\n   */\n  absoluteFillObject: absoluteFill,\n\n  /**\n   * Combines two styles such that `style2` will override any styles in `style1`.\n   * If either style is falsy, the other one is returned without allocating an\n   * array, saving allocations and maintaining reference equality for\n   * PureComponent checks.\n   */\n  compose: composeStyles,\n\n  /**\n   * Flattens an array of style objects, into one aggregated style object.\n   *\n   * Example:\n   * ```\n   * const styles = StyleSheet.create({\n   *   listItem: {\n   *     flex: 1,\n   *     fontSize: 16,\n   *     color: 'white'\n   *   },\n   *   selectedListItem: {\n   *     color: 'green'\n   *   }\n   * });\n   *\n   * StyleSheet.flatten([styles.listItem, styles.selectedListItem])\n   * // returns { flex: 1, fontSize: 16, color: 'green' }\n   * ```\n   */\n  flatten,\n\n  /**\n   * WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will\n   * not be reliably announced. The whole thing might be deleted, who knows? Use\n   * at your own risk.\n   *\n   * Sets a function to use to pre-process a style property value. This is used\n   * internally to process color and transform values. You should not use this\n   * unless you really know what you are doing and have exhausted other options.\n   */\n  setStyleAttributePreprocessor(\n    property: string,\n    process: (nextProp: mixed) => mixed,\n  ) {\n    let value;\n\n    if (ReactNativeStyleAttributes[property] === true) {\n      value = {process};\n    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {\n      value = {...ReactNativeStyleAttributes[property], process};\n    } else {\n      console.error(`${property} is not a valid style attribute`);\n      return;\n    }\n\n    if (\n      __DEV__ &&\n      typeof value.process === 'function' &&\n      typeof ReactNativeStyleAttributes[property]?.process === 'function' &&\n      value.process !== ReactNativeStyleAttributes[property]?.process\n    ) {\n      console.warn(`Overwriting ${property} style attribute preprocessor`);\n    }\n\n    ReactNativeStyleAttributes[property] = value;\n  },\n\n  /**\n   * An identity function for creating style sheets.\n   */\n  // $FlowFixMe[unsupported-variance-annotation]\n  create<+S: ____Styles_Internal>(obj: S): $ReadOnly<S> {\n    // TODO: This should return S as the return type. But first,\n    // we need to codemod all the callsites that are typing this\n    // return value as a number (even though it was opaque).\n    if (__DEV__) {\n      for (const key in obj) {\n        if (obj[key]) {\n          Object.freeze(obj[key]);\n        }\n      }\n    }\n    return obj;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {DangerouslyImpreciseStyleProp} from './StyleSheet';\nimport type {____FlattenStyleProp_Internal} from './StyleSheetTypes';\n\nfunction flattenStyle<TStyleProp: DangerouslyImpreciseStyleProp>(\n  style: ?TStyleProp,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n): ?____FlattenStyleProp_Internal<TStyleProp> {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result: {[string]: $FlowFixMe} = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext: React$Context<$FlowFixMe> =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport NativeDeviceEventManager from '../../Libraries/NativeModules/specs/NativeDeviceEventManager';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\n\nconst DEVICE_BACK_EVENT = 'hardwareBackPress';\n\ntype BackPressEventName = 'backPress' | 'hardwareBackPress';\n\nconst _backPressSubscriptions = [];\n\nRCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {\n  for (let i = _backPressSubscriptions.length - 1; i >= 0; i--) {\n    if (_backPressSubscriptions[i]()) {\n      return;\n    }\n  }\n\n  BackHandler.exitApp();\n});\n\n/**\n * Detect hardware button presses for back navigation.\n *\n * Android: Detect hardware back button presses, and programmatically invoke the default back button\n * functionality to exit the app if there are no listeners or if none of the listeners return true.\n *\n * iOS: Not applicable.\n *\n * The event subscriptions are called in reverse order (i.e. last registered subscription first),\n * and if one subscription returns true then subscriptions registered earlier will not be called.\n *\n * Example:\n *\n * ```javascript\n * BackHandler.addEventListener('hardwareBackPress', function() {\n *  // this.onMainScreen and this.goBack are just examples, you need to use your own implementation here\n *  // Typically you would use the navigator here to go to the last state.\n *\n *  if (!this.onMainScreen()) {\n *    this.goBack();\n *    return true;\n *  }\n *  return false;\n * });\n * ```\n */\ntype TBackHandler = {|\n  +exitApp: () => void,\n  +addEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => {remove: () => void, ...},\n  +removeEventListener: (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ) => void,\n|};\nconst BackHandler: TBackHandler = {\n  exitApp: function (): void {\n    if (!NativeDeviceEventManager) {\n      return;\n    }\n\n    NativeDeviceEventManager.invokeDefaultBackPressHandler();\n  },\n\n  /**\n   * Adds an event handler. Supported events:\n   *\n   * - `hardwareBackPress`: Fires when the Android hardware back button is pressed.\n   */\n  addEventListener: function (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ): {remove: () => void, ...} {\n    if (_backPressSubscriptions.indexOf(handler) === -1) {\n      _backPressSubscriptions.push(handler);\n    }\n    return {\n      remove: (): void => BackHandler.removeEventListener(eventName, handler),\n    };\n  },\n\n  /**\n   * Removes the event handler.\n   */\n  removeEventListener: function (\n    eventName: BackPressEventName,\n    handler: () => ?boolean,\n  ): void {\n    const index = _backPressSubscriptions.indexOf(handler);\n    if (index !== -1) {\n      _backPressSubscriptions.splice(index, 1);\n    }\n  },\n};\n\nmodule.exports = BackHandler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport createPerformanceLogger from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\nimport GlobalPerformanceLogger from './GlobalPerformanceLogger';\nimport * as React from 'react';\nimport {useContext} from 'react';\n\n/**\n * This is a React Context that provides a scoped instance of IPerformanceLogger.\n * We wrap every <AppContainer /> with a Provider for this context so the logger\n * should be available in every component.\n * See React docs about using Context: https://react.dev/docs/context.html\n */\nconst PerformanceLoggerContext: React.Context<IPerformanceLogger> =\n  React.createContext(GlobalPerformanceLogger);\nif (__DEV__) {\n  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';\n}\n\nexport function usePerformanceLogger(): IPerformanceLogger {\n  return useContext(PerformanceLoggerContext);\n}\n\nexport default PerformanceLoggerContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler: ?(...Array<mixed>) => void = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level: string, ...args: Array<mixed>): void {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to LogBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level: string, ...args: Array<mixed>): void {\n    // $FlowFixMe[invalid-computed-prop]\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler: typeof warningHandler): void {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nexport type Scene = {name: string, [string]: mixed, ...};\n\nlet _listeners: Array<(scene: Scene) => void> = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene: Scene) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene(): Scene {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(callback: (scene: Scene) => void): {\n    remove: () => void,\n    ...\n  } {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data: ArrayBuffer | $ArrayBufferView): string {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength}: DataView = (data: $FlowFixMe);\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {\n  Extras,\n  ExtraValue,\n  IPerformanceLogger,\n  Timespan,\n} from './IPerformanceLogger';\n\nimport infoLog from './infoLog';\n\nconst PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp: () => number =\n  global.nativeQPLTimestamp ?? (() => global.performance.now());\n\nclass PerformanceLogger implements IPerformanceLogger {\n  _timespans: {[key: string]: ?Timespan} = {};\n  _extras: {[key: string]: ?ExtraValue} = {};\n  _points: {[key: string]: ?number} = {};\n  _pointExtras: {[key: string]: ?Extras, ...} = {};\n  _closed: boolean = false;\n\n  addTimespan(\n    key: string,\n    startTime: number,\n    endTime: number,\n    startExtras?: Extras,\n    endExtras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger: IPerformanceLogger) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp(): number {\n    return getCurrentTimestamp();\n  }\n\n  getExtras(): {[key: string]: ?ExtraValue} {\n    return this._extras;\n  }\n\n  getPoints(): {[key: string]: ?number} {\n    return this._points;\n  }\n\n  getPointExtras(): {[key: string]: ?Extras} {\n    return this._pointExtras;\n  }\n\n  getTimespans(): {[key: string]: ?Timespan} {\n    return this._timespans;\n  }\n\n  hasTimespan(key: string): boolean {\n    return !!this._timespans[key];\n  }\n\n  isClosed(): boolean {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key: string): ?ExtraValue {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key: string, value: ExtraValue) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n  }\n}\n\n// Re-exporting for backwards compatibility with all the clients that\n// may still import it from this module.\nexport type {Extras, ExtraValue, IPerformanceLogger, Timespan};\n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger(): IPerformanceLogger {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<mixed>): void {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<0bff47ec5af8ed96d8b2abe351f318f1>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n  type Getter,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = {\n  jsOnlyTestFlag: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  enableOptimisedVirtualizedCells: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  shouldSkipStateUpdatesForLoopingAnimations: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  shouldUseSetNativePropsInNativeAnimationsInFabric: Getter<boolean>,\n  usePassiveEffectsForAnimations: Getter<boolean>,\n  useRefsForTextInputState: Getter<boolean>,\n};\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = Partial<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = {\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  allowRecursiveCommitsWithSynchronousMountOnAndroid: Getter<boolean>,\n  batchRenderingUpdatesInEventLoop: Getter<boolean>,\n  completeReactInstanceCreationOnBgThreadOnAndroid: Getter<boolean>,\n  destroyFabricSurfacesInReactInstanceManager: Getter<boolean>,\n  enableAlignItemsBaselineOnFabricIOS: Getter<boolean>,\n  enableAndroidMixBlendModeProp: Getter<boolean>,\n  enableBackgroundStyleApplicator: Getter<boolean>,\n  enableCleanTextInputYogaNode: Getter<boolean>,\n  enableEagerRootViewAttachment: Getter<boolean>,\n  enableEventEmitterRetentionDuringGesturesOnAndroid: Getter<boolean>,\n  enableFabricLogs: Getter<boolean>,\n  enableFabricRendererExclusively: Getter<boolean>,\n  enableGranularShadowTreeStateReconciliation: Getter<boolean>,\n  enableIOSViewClipToPaddingBox: Getter<boolean>,\n  enableLayoutAnimationsOnIOS: Getter<boolean>,\n  enableLongTaskAPI: Getter<boolean>,\n  enableMicrotasks: Getter<boolean>,\n  enablePropsUpdateReconciliationAndroid: Getter<boolean>,\n  enableReportEventPaintTime: Getter<boolean>,\n  enableSynchronousStateUpdates: Getter<boolean>,\n  enableUIConsistency: Getter<boolean>,\n  enableViewRecycling: Getter<boolean>,\n  excludeYogaFromRawProps: Getter<boolean>,\n  fetchImagesInViewPreallocation: Getter<boolean>,\n  fixIncorrectScrollViewStateUpdateOnAndroid: Getter<boolean>,\n  fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean>,\n  fixMissedFabricStateUpdatesOnAndroid: Getter<boolean>,\n  fixMountingCoordinatorReportedPendingTransactionsOnAndroid: Getter<boolean>,\n  forceBatchingMountItemsOnAndroid: Getter<boolean>,\n  fuseboxEnabledDebug: Getter<boolean>,\n  fuseboxEnabledRelease: Getter<boolean>,\n  initEagerTurboModulesOnNativeModulesQueueAndroid: Getter<boolean>,\n  lazyAnimationCallbacks: Getter<boolean>,\n  loadVectorDrawablesOnImages: Getter<boolean>,\n  setAndroidLayoutDirection: Getter<boolean>,\n  traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean>,\n  useFabricInterop: Getter<boolean>,\n  useImmediateExecutorInAndroidBridgeless: Getter<boolean>,\n  useModernRuntimeScheduler: Getter<boolean>,\n  useNativeViewConfigsInBridgelessMode: Getter<boolean>,\n  useNewReactImageViewBackgroundDrawing: Getter<boolean>,\n  useOptimisedViewPreallocationOnAndroid: Getter<boolean>,\n  useOptimizedEventBatchingOnAndroid: Getter<boolean>,\n  useRuntimeShadowNodeReferenceUpdate: Getter<boolean>,\n  useRuntimeShadowNodeReferenceUpdateOnLayout: Getter<boolean>,\n  useStateAlignmentMechanism: Getter<boolean>,\n  useTurboModuleInterop: Getter<boolean>,\n}\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Removing unnecessary rerenders Virtualized cells after any rerenders of Virualized list. Works with strict=true option\n */\nexport const enableOptimisedVirtualizedCells: Getter<boolean> = createJavaScriptFlagGetter('enableOptimisedVirtualizedCells', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * If the animation is within Animated.loop, we do not send state updates to React.\n */\nexport const shouldSkipStateUpdatesForLoopingAnimations: Getter<boolean> = createJavaScriptFlagGetter('shouldSkipStateUpdatesForLoopingAnimations', false);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Enables use of setNativeProps in Native driven animations in Fabric.\n */\nexport const shouldUseSetNativePropsInNativeAnimationsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInNativeAnimationsInFabric', false);\n\n/**\n * Enable a variant of useAnimatedPropsLifecycle hook that constructs the animation graph in passive effect instead of layout effect\n */\nexport const usePassiveEffectsForAnimations: Getter<boolean> = createJavaScriptFlagGetter('usePassiveEffectsForAnimations', false);\n\n/**\n * Enable a variant of TextInput that moves some state to refs to avoid unnecessary re-renders\n */\nexport const useRefsForTextInputState: Getter<boolean> = createJavaScriptFlagGetter('useRefsForTextInputState', false);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Adds support for recursively processing commits that mount synchronously (Android only).\n */\nexport const allowRecursiveCommitsWithSynchronousMountOnAndroid: Getter<boolean> = createNativeFlagGetter('allowRecursiveCommitsWithSynchronousMountOnAndroid', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop: Getter<boolean> = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * Do not wait for a main-thread dispatch to complete init to start executing work on the JS thread on Android\n */\nexport const completeReactInstanceCreationOnBgThreadOnAndroid: Getter<boolean> = createNativeFlagGetter('completeReactInstanceCreationOnBgThreadOnAndroid', false);\n/**\n * When enabled, ReactInstanceManager will clean up Fabric surfaces on destroy().\n */\nexport const destroyFabricSurfacesInReactInstanceManager: Getter<boolean> = createNativeFlagGetter('destroyFabricSurfacesInReactInstanceManager', false);\n/**\n * Kill-switch to turn off support for aling-items:baseline on Fabric iOS.\n */\nexport const enableAlignItemsBaselineOnFabricIOS: Getter<boolean> = createNativeFlagGetter('enableAlignItemsBaselineOnFabricIOS', true);\n/**\n * Enables mix-blend-mode prop on Android.\n */\nexport const enableAndroidMixBlendModeProp: Getter<boolean> = createNativeFlagGetter('enableAndroidMixBlendModeProp', false);\n/**\n * Use BackgroundStyleApplicator in place of other background/border drawing code\n */\nexport const enableBackgroundStyleApplicator: Getter<boolean> = createNativeFlagGetter('enableBackgroundStyleApplicator', true);\n/**\n * Clean yoga node when <TextInput /> does not change.\n */\nexport const enableCleanTextInputYogaNode: Getter<boolean> = createNativeFlagGetter('enableCleanTextInputYogaNode', false);\n/**\n * Feature flag to configure eager attachment of the root view/initialisation of the JS code.\n */\nexport const enableEagerRootViewAttachment: Getter<boolean> = createNativeFlagGetter('enableEagerRootViewAttachment', false);\n/**\n * Enables the retention of EventEmitterWrapper on Android till the touch gesture is over to fix a bug on pressable (#44610)\n */\nexport const enableEventEmitterRetentionDuringGesturesOnAndroid: Getter<boolean> = createNativeFlagGetter('enableEventEmitterRetentionDuringGesturesOnAndroid', false);\n/**\n * This feature flag enables logs for Fabric.\n */\nexport const enableFabricLogs: Getter<boolean> = createNativeFlagGetter('enableFabricLogs', false);\n/**\n * When the app is completely migrated to Fabric, set this flag to true to disable parts of Paper infrastructure that are not needed anymore but consume memory and CPU. Specifically, UIViewOperationQueue and EventDispatcherImpl will no longer work as they will not subscribe to ReactChoreographer for updates.\n */\nexport const enableFabricRendererExclusively: Getter<boolean> = createNativeFlagGetter('enableFabricRendererExclusively', false);\n/**\n * When enabled, the renderer would only fail commits when they propagate state and the last commit that updated state changed before committing.\n */\nexport const enableGranularShadowTreeStateReconciliation: Getter<boolean> = createNativeFlagGetter('enableGranularShadowTreeStateReconciliation', false);\n/**\n * iOS Views will clip to their padding box vs border box\n */\nexport const enableIOSViewClipToPaddingBox: Getter<boolean> = createNativeFlagGetter('enableIOSViewClipToPaddingBox', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on iOS.\n */\nexport const enableLayoutAnimationsOnIOS: Getter<boolean> = createNativeFlagGetter('enableLayoutAnimationsOnIOS', true);\n/**\n * Enables the reporting of long tasks through `PerformanceObserver`. Only works if the event loop is enabled.\n */\nexport const enableLongTaskAPI: Getter<boolean> = createNativeFlagGetter('enableLongTaskAPI', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks: Getter<boolean> = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * When enabled, Android will receive prop updates based on the differences between the last rendered shadow node and the last committed shadow node.\n */\nexport const enablePropsUpdateReconciliationAndroid: Getter<boolean> = createNativeFlagGetter('enablePropsUpdateReconciliationAndroid', false);\n/**\n * Report paint time inside the Event Timing API implementation (PerformanceObserver).\n */\nexport const enableReportEventPaintTime: Getter<boolean> = createNativeFlagGetter('enableReportEventPaintTime', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates: Getter<boolean> = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Ensures that JavaScript always has a consistent view of the state of the UI (e.g.: commits done in other threads are not immediately propagated to JS during its execution).\n */\nexport const enableUIConsistency: Getter<boolean> = createNativeFlagGetter('enableUIConsistency', false);\n/**\n * Enables View Recycling. When enabled, individual ViewManagers must still opt-in.\n */\nexport const enableViewRecycling: Getter<boolean> = createNativeFlagGetter('enableViewRecycling', false);\n/**\n * When enabled, rawProps in Props will not include Yoga specific props.\n */\nexport const excludeYogaFromRawProps: Getter<boolean> = createNativeFlagGetter('excludeYogaFromRawProps', false);\n/**\n * Start image fetching during view preallocation instead of waiting for layout pass\n */\nexport const fetchImagesInViewPreallocation: Getter<boolean> = createNativeFlagGetter('fetchImagesInViewPreallocation', false);\n/**\n * When doing a smooth scroll animation, it stops setting the state with the final scroll position in Fabric before the animation starts.\n */\nexport const fixIncorrectScrollViewStateUpdateOnAndroid: Getter<boolean> = createNativeFlagGetter('fixIncorrectScrollViewStateUpdateOnAndroid', false);\n/**\n * Uses the default event priority instead of the discreet event priority by default when dispatching events from Fabric to React.\n */\nexport const fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean> = createNativeFlagGetter('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);\n/**\n * Enables a fix to prevent the possibility of state updates in Fabric being missed due to race conditions with previous state updates.\n */\nexport const fixMissedFabricStateUpdatesOnAndroid: Getter<boolean> = createNativeFlagGetter('fixMissedFabricStateUpdatesOnAndroid', false);\n/**\n * Fixes a limitation on Android where the mounting coordinator would report there are no pending transactions but some of them were actually not processed due to the use of the push model.\n */\nexport const fixMountingCoordinatorReportedPendingTransactionsOnAndroid: Getter<boolean> = createNativeFlagGetter('fixMountingCoordinatorReportedPendingTransactionsOnAndroid', false);\n/**\n * Forces the mounting layer on Android to always batch mount items instead of dispatching them immediately. This might fix some crashes related to synchronous state updates, where some views dispatch state updates during mount.\n */\nexport const forceBatchingMountItemsOnAndroid: Getter<boolean> = createNativeFlagGetter('forceBatchingMountItemsOnAndroid', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in debug builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledDebug: Getter<boolean> = createNativeFlagGetter('fuseboxEnabledDebug', true);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease: Getter<boolean> = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Construct modules that requires eager init on the dedicate native modules thread\n */\nexport const initEagerTurboModulesOnNativeModulesQueueAndroid: Getter<boolean> = createNativeFlagGetter('initEagerTurboModulesOnNativeModulesQueueAndroid', false);\n/**\n * Only enqueue Choreographer calls if there is an ongoing animation, instead of enqueueing every frame.\n */\nexport const lazyAnimationCallbacks: Getter<boolean> = createNativeFlagGetter('lazyAnimationCallbacks', false);\n/**\n * Adds support for loading vector drawable assets in the Image component (only on Android)\n */\nexport const loadVectorDrawablesOnImages: Getter<boolean> = createNativeFlagGetter('loadVectorDrawablesOnImages', false);\n/**\n * Propagate layout direction to Android views.\n */\nexport const setAndroidLayoutDirection: Getter<boolean> = createNativeFlagGetter('setAndroidLayoutDirection', false);\n/**\n * Enables storing js caller stack when creating promise in native module. This is useful in case of Promise rejection and tracing the cause.\n */\nexport const traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean> = createNativeFlagGetter('traceTurboModulePromiseRejectionsOnAndroid', false);\n/**\n * Should this application enable the Fabric Interop Layer for Android? If yes, the application will behave so that it can accept non-Fabric components and render them on Fabric. This toggle is controlling extra logic such as custom event dispatching that are needed for the Fabric Interop Layer to work correctly.\n */\nexport const useFabricInterop: Getter<boolean> = createNativeFlagGetter('useFabricInterop', false);\n/**\n * Invoke callbacks immediately on the ReactInstance rather than going through a background thread for synchronization\n */\nexport const useImmediateExecutorInAndroidBridgeless: Getter<boolean> = createNativeFlagGetter('useImmediateExecutorInAndroidBridgeless', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler: Getter<boolean> = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode: Getter<boolean> = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * Use shared background drawing code for ReactImageView instead of using Fresco to manipulate the bitmap\n */\nexport const useNewReactImageViewBackgroundDrawing: Getter<boolean> = createNativeFlagGetter('useNewReactImageViewBackgroundDrawing', false);\n/**\n * Moves more of the work in view preallocation to the main thread to free up JS thread.\n */\nexport const useOptimisedViewPreallocationOnAndroid: Getter<boolean> = createNativeFlagGetter('useOptimisedViewPreallocationOnAndroid', false);\n/**\n * Uses an optimized mechanism for event batching on Android that does not need to wait for a Choreographer frame callback.\n */\nexport const useOptimizedEventBatchingOnAndroid: Getter<boolean> = createNativeFlagGetter('useOptimizedEventBatchingOnAndroid', false);\n/**\n * When enabled, cloning shadow nodes within react native will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdate: Getter<boolean> = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdate', false);\n/**\n * When enabled, cloning shadow nodes during layout will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdateOnLayout: Getter<boolean> = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdateOnLayout', false);\n/**\n * When enabled, it uses optimised state reconciliation algorithm.\n */\nexport const useStateAlignmentMechanism: Getter<boolean> = createNativeFlagGetter('useStateAlignmentMechanism', false);\n/**\n * In Bridgeless mode, should legacy NativeModules use the TurboModule system?\n */\nexport const useTurboModuleInterop: Getter<boolean> = createNativeFlagGetter('useTurboModuleInterop', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  ReactNativeFeatureFlagsJsOnly,\n  ReactNativeFeatureFlagsJsOnlyOverrides,\n} from './ReactNativeFeatureFlags';\n\nimport NativeReactNativeFeatureFlags from './specs/NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags: Set<string> = new Set();\nlet overrides: ?ReactNativeFeatureFlagsJsOnlyOverrides;\n\nexport type Getter<T> = () => T;\n\nfunction createGetter<T: boolean | number | string>(\n  configName: string,\n  customValueGetter: Getter<?T>,\n  defaultValue: T,\n): Getter<T> {\n  let cachedValue: ?T;\n\n  return () => {\n    if (cachedValue == null) {\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter<\n  K: $Keys<ReactNativeFeatureFlagsJsOnly>,\n>(\n  configName: K,\n  defaultValue: ReturnType<ReactNativeFeatureFlagsJsOnly[K]>,\n): Getter<ReturnType<ReactNativeFeatureFlagsJsOnly[K]>> {\n  return createGetter(\n    configName,\n    () => {\n      accessedFeatureFlags.add(configName);\n      return overrides?.[configName]?.();\n    },\n    defaultValue,\n  );\n}\n\ntype NativeFeatureFlags = $NonMaybeType<typeof NativeReactNativeFeatureFlags>;\n\nexport function createNativeFlagGetter<K: $Keys<NativeFeatureFlags>>(\n  configName: K,\n  defaultValue: ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>,\n): Getter<ReturnType<$NonMaybeType<NativeFeatureFlags[K]>>> {\n  return createGetter(\n    configName,\n    () => {\n      const valueFromNative = NativeReactNativeFeatureFlags?.[configName]?.();\n      if (valueFromNative == null) {\n        logUnavailableNativeModuleError(configName);\n      }\n      return valueFromNative;\n    },\n    defaultValue,\n  );\n}\n\nexport function getOverrides(): ?ReactNativeFeatureFlagsJsOnlyOverrides {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides: ReactNativeFeatureFlagsJsOnlyOverrides,\n): void {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n\nconst reportedConfigNames: Set<string> = new Set();\n\nfunction logUnavailableNativeModuleError(configName: string): void {\n  if (!reportedConfigNames.has(configName)) {\n    reportedConfigNames.add(configName);\n    console.error(\n      `Could not access feature flag '${configName}' because native module method was not available`,\n    );\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<6d4aa48dfdd3b78ac5f0f8e70eb3895f>>\n * @flow strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +commonTestFlag?: () => boolean;\n  +allowRecursiveCommitsWithSynchronousMountOnAndroid?: () => boolean;\n  +batchRenderingUpdatesInEventLoop?: () => boolean;\n  +completeReactInstanceCreationOnBgThreadOnAndroid?: () => boolean;\n  +destroyFabricSurfacesInReactInstanceManager?: () => boolean;\n  +enableAlignItemsBaselineOnFabricIOS?: () => boolean;\n  +enableAndroidMixBlendModeProp?: () => boolean;\n  +enableBackgroundStyleApplicator?: () => boolean;\n  +enableCleanTextInputYogaNode?: () => boolean;\n  +enableEagerRootViewAttachment?: () => boolean;\n  +enableEventEmitterRetentionDuringGesturesOnAndroid?: () => boolean;\n  +enableFabricLogs?: () => boolean;\n  +enableFabricRendererExclusively?: () => boolean;\n  +enableGranularShadowTreeStateReconciliation?: () => boolean;\n  +enableIOSViewClipToPaddingBox?: () => boolean;\n  +enableLayoutAnimationsOnIOS?: () => boolean;\n  +enableLongTaskAPI?: () => boolean;\n  +enableMicrotasks?: () => boolean;\n  +enablePropsUpdateReconciliationAndroid?: () => boolean;\n  +enableReportEventPaintTime?: () => boolean;\n  +enableSynchronousStateUpdates?: () => boolean;\n  +enableUIConsistency?: () => boolean;\n  +enableViewRecycling?: () => boolean;\n  +excludeYogaFromRawProps?: () => boolean;\n  +fetchImagesInViewPreallocation?: () => boolean;\n  +fixIncorrectScrollViewStateUpdateOnAndroid?: () => boolean;\n  +fixMappingOfEventPrioritiesBetweenFabricAndReact?: () => boolean;\n  +fixMissedFabricStateUpdatesOnAndroid?: () => boolean;\n  +fixMountingCoordinatorReportedPendingTransactionsOnAndroid?: () => boolean;\n  +forceBatchingMountItemsOnAndroid?: () => boolean;\n  +fuseboxEnabledDebug?: () => boolean;\n  +fuseboxEnabledRelease?: () => boolean;\n  +initEagerTurboModulesOnNativeModulesQueueAndroid?: () => boolean;\n  +lazyAnimationCallbacks?: () => boolean;\n  +loadVectorDrawablesOnImages?: () => boolean;\n  +setAndroidLayoutDirection?: () => boolean;\n  +traceTurboModulePromiseRejectionsOnAndroid?: () => boolean;\n  +useFabricInterop?: () => boolean;\n  +useImmediateExecutorInAndroidBridgeless?: () => boolean;\n  +useModernRuntimeScheduler?: () => boolean;\n  +useNativeViewConfigsInBridgelessMode?: () => boolean;\n  +useNewReactImageViewBackgroundDrawing?: () => boolean;\n  +useOptimisedViewPreallocationOnAndroid?: () => boolean;\n  +useOptimizedEventBatchingOnAndroid?: () => boolean;\n  +useRuntimeShadowNodeReferenceUpdate?: () => boolean;\n  +useRuntimeShadowNodeReferenceUpdateOnLayout?: () => boolean;\n  +useStateAlignmentMechanism?: () => boolean;\n  +useTurboModuleInterop?: () => boolean;\n}\n\nconst NativeReactNativeFeatureFlags: ?Spec = TurboModuleRegistry.get<Spec>(\n  'NativeReactNativeFeatureFlagsCxx',\n);\n\nexport default NativeReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport type Constants = {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => Constants;\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): Constants {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +startReportAProblemFlow: () => void;\n  +setExtraData: (extraData: Object, extraFiles: Object) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('BugReporting'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +invokeDefaultBackPressHandler: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DeviceEventManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\n/* 'buttonClicked' | 'dismissed' */\ntype DialogAction = string;\n/*\n  buttonPositive = -1,\n  buttonNegative = -2,\n  buttonNeutral = -3\n*/\ntype DialogButtonKey = number;\nexport type DialogOptions = {|\n  title?: string,\n  message?: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  items?: Array<string>,\n  cancelable?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +buttonClicked: DialogAction,\n    +dismissed: DialogAction,\n    +buttonPositive: DialogButtonKey,\n    +buttonNegative: DialogButtonKey,\n    +buttonNeutral: DialogButtonKey,\n  |};\n  +showAlert: (\n    config: DialogOptions,\n    onError: (error: string) => void,\n    onAction: (action: DialogAction, buttonKey?: DialogButtonKey) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DialogManagerAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +notifyTaskFinished: (taskId: number) => void;\n  +notifyTaskRetry: (taskId: number) => Promise<boolean>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('HeadlessJsTaskSupport'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\ntype Header = [string, string];\n\nexport interface Spec extends TurboModule {\n  +sendRequest: (\n    method: string,\n    url: string,\n    requestId: number,\n    headers: Array<Header>,\n    data: Object,\n    responseType: string,\n    useIncrementalUpdates: boolean,\n    timeout: number,\n    withCredentials: boolean,\n  ) => void;\n  +abortRequest: (requestId: number) => void;\n  +clearCookies: (callback: (result: boolean) => void) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Networking'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +setExtraData: (extraData: Object, forIdentifier: string) => void;\n  +dismiss: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('RedBox'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * Combines two styles such that `style2` will override any styles in `style1`.\n * If either style is null or undefined, the other one is returned without\n * allocating an array, saving allocations and enabling memoization.\n */\nexport default function composeStyles<T1, T2>(\n  style1: ?T1,\n  style2: ?T2,\n): ?(T1 | T2 | $ReadOnlyArray<T1 | T2>) {\n  if (style1 == null) {\n    return style2;\n  }\n  if (style2 == null) {\n    return style1;\n  }\n  return [style1, style2];\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _readOnlyError(r) {\n  throw new TypeError('\"' + r + '\" is read-only');\n}\nmodule.exports = _readOnlyError, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_Platform","_interopRequireDefault","require","_RCTAlertManager","Alert","_classCallCheck2","default","_createClass2","key","value","title","message","buttons","options","Platform","OS","prompt","undefined","NativeDialogManagerAndroid","constants","getConstants","config","cancelable","validButtons","slice","text","buttonPositive","pop","buttonNegative","buttonNeutral","showAlert","errorMessage","console","warn","action","buttonKey","buttonClicked","onPress","dismissed","onDismiss","callbackOrButtons","type","arguments","length","defaultValue","keyboardType","cancelButtonKey","destructiveButtonKey","preferredButtonKey","callbacks","Array","isArray","forEach","btn","index","style","String","isPreferred","btnDef","push","RCTAlertManager","alertWithArgs","userInterfaceStyle","id","cb","module","exports","_NativeDialogManagerAndroid","emptyCallback","args","callback","Blob","parts","BlobManager","this","data","createFromParts","get","_data","Error","set","start","end","contentType","_this$data","offset","size","createFromOptions","blobId","__collector","release","_NativeBlobModule","_invariant","BlobRegistry","invariant","NativeBlobModule","replace","c","r","Math","random","toString","items","map","part","ArrayBuffer","isView","reduce","acc","curr","global","unescape","encodeURI","lastModified","Date","now","register","Object","assign","create","prototype","__blobCollectorProvider","unregister","has","addNetworkingHandler","socketId","addWebSocketHandler","removeWebSocketHandler","blob","sendOverSocket","isAvailable","registry","Map","used","delete","e","__esModule","t","_getRequireWildcardCache","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","_interopRequireWildcard","WeakMap","keys","_exportNames","enumerable","_RCTDeviceEventEmitter","_NativeRedBox","_NativeBugReporting","defaultExtras","BugReporting","addFileSource","_subscription","RCTDeviceEventEmitter","addListener","collectExtraData","_redboxSubscription","_addSource","_extraSources","_fileSources","source","_maybeInit","remove","extraData","_ref","_ref2","_slicedToArray2","fileData","_ref3","_ref4","NativeBugReporting","setExtraData","NativeRedBox","extras","files","_TextAncestor","_ViewNativeComponent","React","_jsxRuntime","_excluded","View","forwardRef","forwardedRef","_ariaLabelledBy$split","_accessibilityState","_accessibilityValue","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","importantForAccessibility","nativeID","tabIndex","otherProps","_objectWithoutProperties2","hasTextAncestor","useContext","TextAncestor","_accessibilityLabelledBy","split","busy","checked","disabled","expanded","selected","max","min","actualView","jsx","ref","Provider","children","displayName","NativeComponentRegistry","_codegenNativeCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","validAttributes","removeClippedSubviews","accessible","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderEndEndRadius","borderEndStartRadius","borderStartEndRadius","borderStartStartRadius","borderStyle","hitSlop","pointerEvents","nativeBackgroundAndroid","nativeForegroundAndroid","needsOffscreenAlphaCompositing","borderWidth","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderStartWidth","borderEndWidth","borderColor","process","borderLeftColor","borderRightColor","borderTopColor","borderBottomColor","borderStartColor","borderEndColor","borderBlockColor","borderBlockEndColor","borderBlockStartColor","overflow","backfaceVisibility","experimental_layoutConformance","ViewNativeComponent","codegenNativeCommands","supportedCommands","registerCallableModule","RN$Bridgeless","name","moduleOrFactory","RN$registerCallableModule","BatchedBridge","registerLazyCallableModule","NativeEventEmitter","nativeModule","hasAddListener","hasRemoveListeners","removeListeners","_nativeModule","eventType","listener","context","_this$_nativeModule","_this","subscription","_this$_nativeModule2","_len","_key","emit","apply","concat","_this$_nativeModule3","listenerCount","removeAllListeners","RCTNativeAppEventEmitter","_NativeDeviceEventManager","NativeDeviceEventManager","FormData","_parts","filter","_ref5","_ref6","headers","fieldName","string","_NativeNetworkingAndroid","NativeNetworkingAndroid","_NativeEventEmitter2","_convertRequestBody","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","convertHeadersMapToArray","headerArray","_requestId","RCTNetworking","_NativeEventEmitter","o","_getPrototypeOf2","_possibleConstructorReturn2","constructor","_inherits2","method","trackingName","url","responseType","incrementalUpdates","timeout","withCredentials","body","convertRequestBody","formData","requestId","sendRequest","abortRequest","clearCookies","binaryToBase64","getParts","base64","_View","_StyleSheet","_RootTag","styles","StyleSheet","root","flex","fabric","initialProps","rootTag","WrapperComponent","rootViewStyle","innerView","RootTagContext","createRootTag","AppContainer","wrapperComponentProvider","rootViewStyleProvider","_registerCallableModule","_BugReporting","_createPerformanceLogger","_infoLog","_SceneTracker","_DisplayMode","_HeadlessJsTaskError","_NativeHeadlessJsTaskSupport","_renderApplication","_RendererProxy","runnables","runCount","sections","taskProviders","taskCancelProviders","componentProviderInstrumentationHook","component","AppRegistry","setWrapperComponentProvider","provider","setRootViewStyleProvider","registerConfig","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","createPerformanceLogger","appParameters","displayMode","_appParameters$initia","concurrentRootEnabled","concurrentRoot","renderApplication","registerSection","getAppKeys","getSectionKeys","getSections","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","msg","infoLog","addSource","SceneTracker","setActiveScene","coerceDisplayMode","setSurfaceProps","JSON","stringify","unmountApplicationComponentAtRootTag","unmountComponentAtNodeAndRemoveContainer","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","startHeadlessTask","taskId","NativeHeadlessJsTaskSupport","notifyTaskFinished","then","catch","reason","error","HeadlessJsTaskError","notifyTaskRetry","retryPosted","cancelHeadlessTask","RN$AppRegistry","RN$SurfaceRegistry","renderSurface","log","DisplayMode","SUSPENDED","HIDDEN","VISIBLE","freeze","_Error","_wrapNativeSuper2","createContext","ComponentWithDisplayName","cache","RootComponent","isLogBox","debugName","useConcurrentRoot","useOffscreen","performanceLogger","GlobalPerformanceLogger","renderable","_PerformanceLoggerContext","_AppContainer","internal_excludeLogBox","__DEV__","Activity","unstable_Activity","mode","useConcurrentRootOverride","startTimespan","setExtra","Renderer","isProfilingRenderer","renderElement","element","useFabric","stopTimespan","_GlobalPerformanceLogger","_composeStyles","ReactNativeStyleAttributes","PixelRatio","flatten","hairlineWidth","roundToNearestPixel","absoluteFill","position","left","right","top","bottom","absoluteFillObject","compose","composeStyles","setStyleAttributePreprocessor","property","obj","flattenStyle","result","styleLength","computedStyle","TextAncestorContext","_backPressSubscriptions","BackHandler","exitApp","invokeDefaultBackPressHandler","addEventListener","eventName","handler","indexOf","removeEventListener","splice","PerformanceLoggerContext","_react","levelsMap","info","fatal","warningHandler","RCTLog","logIfNoNativeHook","level","nativeLoggingHook","logToConsole","_console","logFn","_len2","_key2","setWarningHandler","_listeners","_activeScene","scene","getActiveScene","addActiveSceneChangedListener","Uint8Array","fromByteArray","buffer","byteOffset","byteLength","dispatchCommand","commandObj","command","PerformanceLogger","_global$nativeQPLTime","getCurrentTimestamp","nativeQPLTimestamp","performance","_timespans","_extras","_points","_pointExtras","_closed","startTime","endTime","startExtras","endExtras","totalTime","getTimespans","getExtras","getPoints","getPointExtras","_this$_timespans$_key","timestamp","timespan","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","setOverrides","configName","createGetter","_overrides","_overrides$configName","accessedFeatureFlags","add","overrides","_NativeReactNativeFea","valueFromNative","NativeReactNativeFeatureFlags","reportedConfigNames","logUnavailableNativeModuleError","newOverrides","accessedFeatureFlagsStr","from","join","_NativeReactNativeFeatureFlags","Set","customValueGetter","cachedValue","_customValueGetter","NativeModule","socketID","withId","TurboModuleRegistry","getEnforcing","style1","style2","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","code","num","output","f","k","Symbol","for","l","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","__self","__source","q","g","b","d","h","defaultProps","$$typeof","props","_owner","current","Fragment","jsxs","objectWithoutPropertiesLoose","getOwnPropertySymbols","s","includes","propertyIsEnumerable","TypeError"],"sourceRoot":""}