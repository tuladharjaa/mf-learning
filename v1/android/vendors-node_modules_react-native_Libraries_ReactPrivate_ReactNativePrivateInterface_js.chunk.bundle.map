{"version":3,"file":"vendors-node_modules_react-native_Libraries_ReactPrivate_ReactNativePrivateInterface_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Components/AccessibilityInfo/legacySendAccessibilityEvent.android.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js","webpack:///./node_modules/react-native/Libraries/Core/RawEventEmitter.js","webpack:///./node_modules/react-native/Libraries/Core/ReactFiberErrorDialog.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js","webpack:///./node_modules/react-native/Libraries/Events/CustomEvent.js","webpack:///./node_modules/react-native/Libraries/Events/EventPolyfill.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricHostComponent.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js","webpack:///./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js","webpack:///./node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js","webpack:///./node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReactNativeElement.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyCharacterData.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyText.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js","webpack:///./node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js","webpack:///./node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport UIManager from '../../ReactNative/UIManager';\nimport nullthrows from 'nullthrows';\n\n/**\n * This is a function exposed to the React Renderer that can be used by the\n * pre-Fabric renderer to emit accessibility events to pre-Fabric nodes.\n */\nfunction legacySendAccessibilityEvent(\n  reactTag: number,\n  eventType: string,\n): void {\n  if (eventType === 'focus') {\n    nullthrows(UIManager.sendAccessibilityEvent)(\n      reactTag,\n      UIManager.getConstants().AccessibilityEventTypes.typeViewFocused,\n    );\n  }\n  if (eventType === 'click') {\n    nullthrows(UIManager.sendAccessibilityEvent)(\n      reactTag,\n      UIManager.getConstants().AccessibilityEventTypes.typeViewClicked,\n    );\n  }\n}\n\nmodule.exports = legacySendAccessibilityEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {\n  ColorValue,\n  TextStyleProp,\n  ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  Double,\n  Float,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n\nexport type KeyboardType =\n  // Cross Platform\n  | 'default'\n  | 'email-address'\n  | 'numeric'\n  | 'phone-pad'\n  | 'number-pad'\n  | 'decimal-pad'\n  | 'url'\n  // iOS-only\n  | 'ascii-capable'\n  | 'numbers-and-punctuation'\n  | 'name-phone-pad'\n  | 'twitter'\n  | 'web-search'\n  // Android-only\n  | 'visible-password';\n\nexport type ReturnKeyType =\n  // Cross Platform\n  | 'done'\n  | 'go'\n  | 'next'\n  | 'search'\n  | 'send'\n  // Android-only\n  | 'none'\n  | 'previous'\n  // iOS-only\n  | 'default'\n  | 'emergency-call'\n  | 'google'\n  | 'join'\n  | 'route'\n  | 'yahoo';\n\nexport type SubmitBehavior = 'submit' | 'blurAndSubmit' | 'newline';\n\nexport type NativeProps = $ReadOnly<{|\n  // This allows us to inherit everything from ViewProps except for style (see below)\n  // This must be commented for Fabric codegen to work.\n  ...$Diff<ViewProps, $ReadOnly<{|style: ?ViewStyleProp|}>>,\n\n  /**\n   * Android props after this\n   */\n  /**\n   * Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\n   * To disable autocomplete, set `autoComplete` to `off`.\n   *\n   * *Android Only*\n   *\n   * Possible values for `autoComplete` are:\n   *\n   * - `birthdate-day`\n   * - `birthdate-full`\n   * - `birthdate-month`\n   * - `birthdate-year`\n   * - `cc-csc`\n   * - `cc-exp`\n   * - `cc-exp-day`\n   * - `cc-exp-month`\n   * - `cc-exp-year`\n   * - `cc-number`\n   * - `email`\n   * - `gender`\n   * - `name`\n   * - `name-family`\n   * - `name-given`\n   * - `name-middle`\n   * - `name-middle-initial`\n   * - `name-prefix`\n   * - `name-suffix`\n   * - `password`\n   * - `password-new`\n   * - `postal-address`\n   * - `postal-address-country`\n   * - `postal-address-extended`\n   * - `postal-address-extended-postal-code`\n   * - `postal-address-locality`\n   * - `postal-address-region`\n   * - `postal-code`\n   * - `street-address`\n   * - `sms-otp`\n   * - `tel`\n   * - `tel-country-code`\n   * - `tel-national`\n   * - `tel-device`\n   * - `username`\n   * - `username-new`\n   * - `off`\n   *\n   * @platform android\n   */\n  autoComplete?: WithDefault<\n    | 'birthdate-day'\n    | 'birthdate-full'\n    | 'birthdate-month'\n    | 'birthdate-year'\n    | 'cc-csc'\n    | 'cc-exp'\n    | 'cc-exp-day'\n    | 'cc-exp-month'\n    | 'cc-exp-year'\n    | 'cc-number'\n    | 'email'\n    | 'gender'\n    | 'name'\n    | 'name-family'\n    | 'name-given'\n    | 'name-middle'\n    | 'name-middle-initial'\n    | 'name-prefix'\n    | 'name-suffix'\n    | 'password'\n    | 'password-new'\n    | 'postal-address'\n    | 'postal-address-country'\n    | 'postal-address-extended'\n    | 'postal-address-extended-postal-code'\n    | 'postal-address-locality'\n    | 'postal-address-region'\n    | 'postal-code'\n    | 'street-address'\n    | 'sms-otp'\n    | 'tel'\n    | 'tel-country-code'\n    | 'tel-national'\n    | 'tel-device'\n    | 'username'\n    | 'username-new'\n    | 'off',\n    'off',\n  >,\n\n  /**\n   * Sets the return key to the label. Use it instead of `returnKeyType`.\n   * @platform android\n   */\n  returnKeyLabel?: ?string,\n\n  /**\n   * Sets the number of lines for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  numberOfLines?: ?Int32,\n\n  /**\n   * When `false`, if there is a small amount of space available around a text input\n   * (e.g. landscape orientation on a phone), the OS may choose to have the user edit\n   * the text inside of a full screen text input mode. When `true`, this feature is\n   * disabled and users will always edit the text directly inside of the text input.\n   * Defaults to `false`.\n   * @platform android\n   */\n  disableFullscreenUI?: ?boolean,\n\n  /**\n   * Set text break strategy on Android API Level 23+, possible values are `simple`, `highQuality`, `balanced`\n   * The default value is `simple`.\n   * @platform android\n   */\n  textBreakStrategy?: WithDefault<\n    'simple' | 'highQuality' | 'balanced',\n    'simple',\n  >,\n\n  /**\n   * The color of the `TextInput` underline.\n   * @platform android\n   */\n  underlineColorAndroid?: ?ColorValue,\n\n  /**\n   * If defined, the provided image resource will be rendered on the left.\n   * The image resource must be inside `/android/app/src/main/res/drawable` and referenced\n   * like\n   * ```\n   * <TextInput\n   *  inlineImageLeft='search_icon'\n   * />\n   * ```\n   * @platform android\n   */\n  inlineImageLeft?: ?string,\n\n  /**\n   * Padding between the inline image, if any, and the text input itself.\n   * @platform android\n   */\n  inlineImagePadding?: ?Int32,\n\n  importantForAutofill?: string /*?(\n    | 'auto'\n    | 'no'\n    | 'noExcludeDescendants'\n    | 'yes'\n    | 'yesExcludeDescendants'\n  ),*/,\n\n  /**\n   * When `false`, it will prevent the soft keyboard from showing when the field is focused.\n   * Defaults to `true`.\n   */\n  showSoftInputOnFocus?: ?boolean,\n\n  /**\n   * TextInput props after this\n   */\n  /**\n   * Can tell `TextInput` to automatically capitalize certain characters.\n   *\n   * - `characters`: all characters.\n   * - `words`: first letter of each word.\n   * - `sentences`: first letter of each sentence (*default*).\n   * - `none`: don't auto capitalize anything.\n   */\n  autoCapitalize?: WithDefault<\n    'none' | 'sentences' | 'words' | 'characters',\n    'none',\n  >,\n\n  /**\n   * If `false`, disables auto-correct. The default value is `true`.\n   */\n  autoCorrect?: ?boolean,\n\n  /**\n   * If `true`, focuses the input on `componentDidMount`.\n   * The default value is `false`.\n   */\n  autoFocus?: ?boolean,\n\n  /**\n   * Specifies whether fonts should scale to respect Text Size accessibility settings. The\n   * default is `true`.\n   */\n  allowFontScaling?: ?boolean,\n\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier?: ?Float,\n\n  /**\n   * If `false`, text is not editable. The default value is `true`.\n   */\n  editable?: ?boolean,\n\n  /**\n   * Determines which keyboard to open, e.g.`numeric`.\n   *\n   * The following values work across platforms:\n   *\n   * - `default`\n   * - `numeric`\n   * - `number-pad`\n   * - `decimal-pad`\n   * - `email-address`\n   * - `phone-pad`\n   * - `url`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `visible-password`\n   */\n  keyboardType?: WithDefault<KeyboardType, 'default'>,\n\n  /**\n   * Determines how the return key should look. On Android you can also use\n   * `returnKeyLabel`.\n   *\n   * *Cross platform*\n   *\n   * The following values work across platforms:\n   *\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `search`\n   * - `send`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `none`\n   * - `previous`\n   */\n  returnKeyType?: WithDefault<ReturnKeyType, 'done'>,\n\n  /**\n   * Limits the maximum number of characters that can be entered. Use this\n   * instead of implementing the logic in JS to avoid flicker.\n   */\n  maxLength?: ?Int32,\n\n  /**\n   * If `true`, the text input can be multiple lines.\n   * The default value is `false`.\n   */\n  multiline?: ?boolean,\n\n  /**\n   * Callback that is called when the text input is blurred.\n   * `target` is the reactTag of the element\n   */\n  onBlur?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input is focused.\n   * `target` is the reactTag of the element\n   */\n  onFocus?: ?BubblingEventHandler<$ReadOnly<{|target: Int32|}>>,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * `target` is the reactTag of the element\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChange?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   * TODO: differentiate between onChange and onChangeText\n   */\n  onChangeText?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, eventCount: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's content size changes.\n   * This will be called with\n   * `{ nativeEvent: { contentSize: { width, height } } }`.\n   *\n   * Only called for multiline text inputs.\n   */\n  onContentSizeChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      contentSize: $ReadOnly<{|width: Double, height: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when text input ends.\n   */\n  onEndEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when the text input selection is changed.\n   * This will be called with\n   * `{ nativeEvent: { selection: { start, end } } }`.\n   */\n  onSelectionChange?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      selection: $ReadOnly<{|start: Double, end: Double|}>,\n    |}>,\n  >,\n\n  /**\n   * Callback that is called when the text input's submit button is pressed.\n   * Invalid if `multiline={true}` is specified.\n   */\n  onSubmitEditing?: ?BubblingEventHandler<\n    $ReadOnly<{|target: Int32, text: string|}>,\n  >,\n\n  /**\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   */\n  onKeyPress?: ?BubblingEventHandler<$ReadOnly<{|target: Int32, key: string|}>>,\n\n  /**\n   * Invoked on content scroll with `{ nativeEvent: { contentOffset: { x, y } } }`.\n   * May also contain other properties from ScrollEvent but on Android contentSize\n   * is not provided for performance reasons.\n   */\n  onScroll?: ?DirectEventHandler<\n    $ReadOnly<{|\n      target: Int32,\n      responderIgnoreScroll: boolean,\n      contentInset: $ReadOnly<{|\n        top: Double, // always 0 on Android\n        bottom: Double, // always 0 on Android\n        left: Double, // always 0 on Android\n        right: Double, // always 0 on Android\n      |}>,\n      contentOffset: $ReadOnly<{|\n        x: Double,\n        y: Double,\n      |}>,\n      contentSize: $ReadOnly<{|\n        width: Double, // always 0 on Android\n        height: Double, // always 0 on Android\n      |}>,\n      layoutMeasurement: $ReadOnly<{|\n        width: Double,\n        height: Double,\n      |}>,\n      velocity: $ReadOnly<{|\n        x: Double, // always 0 on Android\n        y: Double, // always 0 on Android\n      |}>,\n    |}>,\n  >,\n\n  /**\n   * The string that will be rendered before text input has been entered.\n   */\n  placeholder?: ?Stringish,\n\n  /**\n   * The text color of the placeholder string.\n   */\n  placeholderTextColor?: ?ColorValue,\n\n  /**\n   * If `true`, the text input obscures the text entered so that sensitive text\n   * like passwords stay secure. The default value is `false`. Does not work with 'multiline={true}'.\n   */\n  secureTextEntry?: ?boolean,\n\n  /**\n   * The highlight and cursor color of the text input.\n   */\n  selectionColor?: ?ColorValue,\n\n  /**\n   * The text selection handle color.\n   */\n  selectionHandleColor?: ?ColorValue,\n\n  /**\n   * The start and end of the text input's selection. Set start and end to\n   * the same value to position the cursor.\n   */\n  selection?: ?$ReadOnly<{|\n    start: Int32,\n    end?: ?Int32,\n  |}>,\n\n  /**\n   * The value to show for the text input. `TextInput` is a controlled\n   * component, which means the native value will be forced to match this\n   * value prop if provided. For most uses, this works great, but in some\n   * cases this may cause flickering - one common cause is preventing edits\n   * by keeping value the same. In addition to simply setting the same value,\n   * either set `editable={false}`, or set/update `maxLength` to prevent\n   * unwanted edits without flicker.\n   */\n  value?: ?string,\n\n  /**\n   * Provides an initial value that will change when the user starts typing.\n   * Useful for simple use-cases where you do not want to deal with listening\n   * to events and updating the value prop to keep the controlled state in sync.\n   */\n  defaultValue?: ?string,\n\n  /**\n   * If `true`, all text will automatically be selected on focus.\n   */\n  selectTextOnFocus?: ?boolean,\n\n  /**\n   * If `true`, the text field will blur when submitted.\n   * The default value is true for single-line fields and false for\n   * multiline fields. Note that for multiline fields, setting `blurOnSubmit`\n   * to `true` means that pressing return will blur the field and trigger the\n   * `onSubmitEditing` event instead of inserting a newline into the field.\n   *\n   * @deprecated\n   * Note that `submitBehavior` now takes the place of `blurOnSubmit` and will\n   * override any behavior defined by `blurOnSubmit`.\n   * @see submitBehavior\n   */\n  blurOnSubmit?: ?boolean,\n\n  /**\n   * When the return key is pressed,\n   *\n   * For single line inputs:\n   *\n   * - `'newline`' defaults to `'blurAndSubmit'`\n   * - `undefined` defaults to `'blurAndSubmit'`\n   *\n   * For multiline inputs:\n   *\n   * - `'newline'` adds a newline\n   * - `undefined` defaults to `'newline'`\n   *\n   * For both single line and multiline inputs:\n   *\n   * - `'submit'` will only send a submit event and not blur the input\n   * - `'blurAndSubmit`' will both blur the input and send a submit event\n   */\n  submitBehavior?: ?SubmitBehavior,\n\n  /**\n   * Note that not all Text styles are supported, an incomplete list of what is not supported includes:\n   *\n   * - `borderLeftWidth`\n   * - `borderTopWidth`\n   * - `borderRightWidth`\n   * - `borderBottomWidth`\n   * - `borderTopLeftRadius`\n   * - `borderTopRightRadius`\n   * - `borderBottomRightRadius`\n   * - `borderBottomLeftRadius`\n   *\n   * see [Issue#7070](https://github.com/facebook/react-native/issues/7070)\n   * for more detail.\n   *\n   * [Styles](docs/style.html)\n   */\n  // TODO: figure out what to do with this style prop for codegen/Fabric purposes\n  // This must be commented for Fabric codegen to work; it's currently not possible\n  // to override the default View style prop in codegen.\n  style?: ?TextStyleProp,\n\n  /**\n   * If `true`, caret is hidden. The default value is `false`.\n   * This property is supported only for single-line TextInput component on iOS.\n   */\n  caretHidden?: ?boolean,\n\n  /*\n   * If `true`, contextMenuHidden is hidden. The default value is `false`.\n   */\n  contextMenuHidden?: ?boolean,\n\n  /**\n   * The following are props that `BaseTextShadowNode` takes. It is unclear if they\n   * are used by TextInput.\n   */\n  textShadowColor?: ?ColorValue,\n  textShadowRadius?: ?Float,\n  textDecorationLine?: ?string,\n  fontStyle?: ?string,\n  textShadowOffset?: ?$ReadOnly<{|width?: ?Double, height?: ?Double|}>,\n  lineHeight?: ?Float,\n  textTransform?: ?string,\n  color?: ?Int32,\n  letterSpacing?: ?Float,\n  fontSize?: ?Float,\n  textAlign?: ?string,\n  includeFontPadding?: ?boolean,\n  fontWeight?: ?string,\n  fontFamily?: ?string,\n\n  /**\n   * I cannot find where these are defined but JS complains without them.\n   */\n  textAlignVertical?: ?string,\n  cursorColor?: ?ColorValue,\n\n  /**\n   * \"Private\" fields used by TextInput.js and not users of this component directly\n   */\n  mostRecentEventCount: Int32,\n  text?: ?string,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'AndroidTextInput',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n  },\n  validAttributes: {\n    maxFontSizeMultiplier: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    autoFocus: true,\n    placeholder: true,\n    inlineImagePadding: true,\n    contextMenuHidden: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    maxLength: true,\n    selectTextOnFocus: true,\n    textShadowRadius: true,\n    underlineColorAndroid: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    textDecorationLine: true,\n    submitBehavior: true,\n    textAlignVertical: true,\n    fontStyle: true,\n    textShadowOffset: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    selectionHandleColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    importantForAutofill: true,\n    lineHeight: true,\n    textTransform: true,\n    returnKeyType: true,\n    keyboardType: true,\n    multiline: true,\n    color: {process: require('../../StyleSheet/processColor').default},\n    autoComplete: true,\n    numberOfLines: true,\n    letterSpacing: true,\n    returnKeyLabel: true,\n    fontSize: true,\n    onKeyPress: true,\n    cursorColor: {process: require('../../StyleSheet/processColor').default},\n    text: true,\n    showSoftInputOnFocus: true,\n    textAlign: true,\n    autoCapitalize: true,\n    autoCorrect: true,\n    caretHidden: true,\n    secureTextEntry: true,\n    textBreakStrategy: true,\n    onScroll: true,\n    onContentSizeChange: true,\n    disableFullscreenUI: true,\n    includeFontPadding: true,\n    fontWeight: true,\n    fontFamily: true,\n    allowFontScaling: true,\n    onSelectionChange: true,\n    mostRecentEventCount: true,\n    inlineImageLeft: true,\n    editable: true,\n    fontVariant: true,\n    borderBottomRightRadius: true,\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderRadius: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderColor: {process: require('../../StyleSheet/processColor').default},\n    borderTopRightRadius: true,\n    borderStyle: true,\n    borderBottomLeftRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {process: require('../../StyleSheet/processColor').default},\n  },\n};\n\nlet AndroidTextInputNativeComponent = NativeComponentRegistry.get<NativeProps>(\n  'AndroidTextInput',\n  () => __INTERNAL_VIEW_CONFIG,\n);\n\n// flowlint-next-line unclear-type:off\nexport default ((AndroidTextInputNativeComponent: any): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n\ntype NativeType = HostComponent<mixed>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig,\n};\n\nconst SinglelineTextInputNativeComponent: HostComponent<mixed> =\n  NativeComponentRegistry.get<mixed>(\n    'RCTSinglelineTextInputView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\n// flowlint-next-line unclear-type:off\nexport default ((SinglelineTextInputNativeComponent: any): HostComponent<mixed>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topContentSizeChange: {\n      registrationName: 'onContentSizeChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n  },\n  validAttributes: {\n    dynamicTypeRamp: true,\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineBreakModeIOS: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    color: {process: require('../../StyleSheet/processColor').default},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    smartInsertDelete: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n      onChangeSync: true,\n      onKeyPressSync: true,\n    }),\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\nimport type {\n  HostComponent,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n} from '../../Renderer/shims/ReactNativeTypes';\n\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nconst {findNodeHandle} = require('../../ReactNative/RendererProxy');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set<{\n  blur(): void,\n  focus(): void,\n  measure(callback: MeasureOnSuccessCallback): void,\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void,\n  measureLayout(\n    relativeToNativeNode: number | React.ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void,\n  ): void,\n  setNativeProps(nativeProps: {...}): void,\n}>();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\nexport type RawEventEmitterEvent = $ReadOnly<{|\n  eventName: string,\n  // We expect, but do not/cannot require, that nativeEvent is an object\n  // with the properties: key, elementType (string), type (string), tag (numeric),\n  // and a stateNode of the native element/Fiber the event was emitted to.\n  nativeEvent: {[string]: mixed},\n|}>;\n\ntype RawEventDefinitions = {\n  [eventChannel: string]: [RawEventEmitterEvent],\n};\n\nconst RawEventEmitter: IEventEmitter<RawEventDefinitions> =\n  new EventEmitter<RawEventDefinitions>();\n\n// See the React renderer / react repo for how this is used.\n// Raw events are emitted here when they are received in JS\n// and before any event Plugins process them or before components\n// have a chance to respond to them. This allows you to implement\n// app-specific perf monitoring, which is unimplemented by default,\n// making this entire RawEventEmitter do nothing by default until\n// *you* add listeners for your own app.\n// Besides perf monitoring and maybe debugging, this RawEventEmitter\n// should not be used.\nexport default RawEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ExtendedError} from './ExtendedError';\n\nimport {SyntheticError, handleException} from './ExceptionsManager';\n\nexport type CapturedError = {\n  +componentStack: string,\n  +error: mixed,\n  +errorBoundary: ?{...},\n  ...\n};\n\nconst ReactFiberErrorDialog = {\n  /**\n   * Intercept lifecycle errors and ensure they are shown with the correct stack\n   * trace within the native redbox component.\n   */\n  showErrorDialog({componentStack, error: errorValue}: CapturedError): boolean {\n    let error: ?ExtendedError;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (errorValue: ExtendedError);\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError(errorValue): ExtendedError);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      // $FlowFixMe[incompatible-cast]\n      error = (new SyntheticError('Unspecified error'): ExtendedError);\n    }\n    try {\n      error.componentStack = componentStack;\n      error.isComponentError = true;\n    } catch {\n      // Ignored.\n    }\n\n    handleException(error, false);\n\n    // Return false here to prevent ReactFiberErrorLogger default behavior of\n    // logging error details to console.error. Calls to console.error are\n    // automatically routed to the native redbox controller, which we've already\n    // done above by calling ExceptionsManager.\n    return false;\n  },\n};\n\nexport default ReactFiberErrorDialog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// Make sure global Event is defined\nimport EventPolyfill from './EventPolyfill';\n\ntype CustomEvent$Options = $ReadOnly<{|\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  detail?: {...},\n|}>;\n\nclass CustomEvent extends EventPolyfill {\n  detail: ?{...};\n\n  constructor(typeArg: string, options: CustomEvent$Options) {\n    const {bubbles, cancelable, composed} = options;\n    super(typeArg, {bubbles, cancelable, composed});\n\n    this.detail = options.detail; // this would correspond to `NativeEvent` in SyntheticEvent\n  }\n}\n\nexport default CustomEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// https://dom.spec.whatwg.org/#dictdef-eventinit\ntype Event$Init = {\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  /** Non-standard. See `composed` instead. */\n  scoped?: boolean,\n  ...\n};\n\n/**\n * This is a copy of the Event interface defined in Flow:\n * https://github.com/facebook/flow/blob/741104e69c43057ebd32804dd6bcc1b5e97548ea/lib/dom.js\n * which is itself a faithful interface of the W3 spec:\n * https://dom.spec.whatwg.org/#interface-event\n *\n * Since Flow assumes that Event is provided and is on the global object,\n * we must provide an implementation of Event for CustomEvent (and future\n * alignment of React Native's event system with the W3 spec).\n */\ninterface IEvent {\n  constructor(type: string, eventInitDict?: Event$Init): void;\n  /**\n   * Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\n   */\n  +type: string;\n  /**\n   * Returns the object to which event is dispatched (its target).\n   */\n  +target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  +srcElement: Element; // TODO: nullable\n  /**\n   * Returns the object whose event listener's callback is currently being invoked.\n   */\n  +currentTarget: EventTarget; // TODO: nullable\n  /**\n   * Returns the invocation target objects of event's path (objects on which\n   * listeners will be invoked), except for any nodes in shadow trees of which\n   * the shadow root's mode is \"closed\" that are not reachable from event's\n   * currentTarget.\n   */\n  composedPath(): Array<EventTarget>;\n\n  +NONE: number;\n  +AT_TARGET: number;\n  +BUBBLING_PHASE: number;\n  +CAPTURING_PHASE: number;\n  /**\n   * Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET,\n   * and BUBBLING_PHASE.\n   */\n  +eventPhase: number;\n\n  /**\n   * When dispatched in a tree, invoking this method prevents event from reaching\n   * any objects other than the current object.\n   */\n  stopPropagation(): void;\n  /**\n   * Invoking this method prevents event from reaching any registered event\n   * listeners after the current one finishes running and, when dispatched in a\n   * tree, also prevents event from reaching any other objects.\n   */\n  stopImmediatePropagation(): void;\n\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event goes through its target's ancestors in reverse tree order, and\n   * false otherwise.\n   */\n  +bubbles: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. Its\n   * return value does not always carry meaning, but true can indicate\n   * that part of the operation during which event was dispatched, can\n   * be canceled by invoking the preventDefault() method.\n   */\n  +cancelable: boolean;\n  // returnValue: boolean; // legacy, and some subclasses still define it as a string!\n  /**\n   * If invoked when the cancelable attribute value is true, and while\n   * executing a listener for the event with passive set to false, signals to\n   * the operation that caused event to be dispatched that it needs to be\n   * canceled.\n   */\n  preventDefault(): void;\n  /**\n   * Returns true if preventDefault() was invoked successfully to indicate\n   * cancelation, and false otherwise.\n   */\n  +defaultPrevented: boolean;\n  /**\n   * Returns true or false depending on how event was initialized. True if\n   * event invokes listeners past a ShadowRoot node that is the root of its\n   * target, and false otherwise.\n   */\n  +composed: boolean;\n\n  /**\n   * Returns true if event was dispatched by the user agent, and false otherwise.\n   */\n  +isTrusted: boolean;\n  /**\n   * Returns the event's timestamp as the number of milliseconds measured relative\n   * to the time origin.\n   */\n  +timeStamp: number;\n\n  /** Non-standard. See Event.prototype.composedPath */\n  +deepPath?: () => EventTarget[];\n  /** Non-standard. See Event.prototype.composed */\n  +scoped: boolean;\n\n  /**\n   * @deprecated\n   */\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void;\n}\n\nclass EventPolyfill implements IEvent {\n  type: string;\n  bubbles: boolean;\n  cancelable: boolean;\n  composed: boolean;\n  // Non-standard. See `composed` instead.\n  scoped: boolean;\n  isTrusted: boolean;\n  defaultPrevented: boolean;\n  timeStamp: number;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n  NONE: number;\n  AT_TARGET: number;\n  BUBBLING_PHASE: number;\n  CAPTURING_PHASE: number;\n\n  eventPhase: number;\n\n  currentTarget: EventTarget; // TODO: nullable\n  target: EventTarget; // TODO: nullable\n  /** @deprecated */\n  srcElement: Element; // TODO: nullable\n\n  // React Native-specific: proxy data to a SyntheticEvent when\n  // certain methods are called.\n  // SyntheticEvent will also have a reference to this instance -\n  // it is circular - and both classes use this reference to keep\n  // data with the other in sync.\n  _syntheticEvent: mixed;\n\n  constructor(type: string, eventInitDict?: Event$Init) {\n    this.type = type;\n    this.bubbles = !!(eventInitDict?.bubbles || false);\n    this.cancelable = !!(eventInitDict?.cancelable || false);\n    this.composed = !!(eventInitDict?.composed || false);\n    this.scoped = !!(eventInitDict?.scoped || false);\n\n    // TODO: somehow guarantee that only \"private\" instantiations of Event\n    // can set this to true\n    this.isTrusted = false;\n\n    // TODO: in the future we'll want to make sure this has the same\n    // time-basis as events originating from native\n    this.timeStamp = Date.now();\n\n    this.defaultPrevented = false;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\n    this.NONE = 0;\n    this.AT_TARGET = 1;\n    this.BUBBLING_PHASE = 2;\n    this.CAPTURING_PHASE = 3;\n    this.eventPhase = this.NONE;\n\n    // $FlowFixMe\n    this.currentTarget = null;\n    // $FlowFixMe\n    this.target = null;\n    // $FlowFixMe\n    this.srcElement = null;\n  }\n\n  composedPath(): Array<EventTarget> {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.preventDefault();\n    }\n  }\n\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void {\n    throw new Error(\n      'TODO: not yet implemented. This method is also deprecated.',\n    );\n  }\n\n  stopImmediatePropagation(): void {\n    throw new Error('TODO: not yet implemented');\n  }\n\n  stopPropagation(): void {\n    if (this._syntheticEvent != null) {\n      // $FlowFixMe\n      this._syntheticEvent.stopPropagation();\n    }\n  }\n\n  setSyntheticEvent(value: mixed): void {\n    this._syntheticEvent = value;\n  }\n}\n\n// Assertion magic for polyfill follows.\ndeclare var checkEvent: Event; // eslint-disable-line no-unused-vars\n\n/*::\n// This can be a strict mode error at runtime so put it in a Flow comment.\n(checkEvent: IEvent);\n*/\n\nglobal.Event = EventPolyfill;\n\nexport default EventPolyfill;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfigWithoutName} from './PlatformBaseViewConfig';\n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport {DynamicallyInjectedByGestureHandler} from './ViewConfigIgnore';\n\nconst bubblingEventTypes = {\n  // Bubbling events from UIManagerModuleConstants.java\n  topChange: {\n    phasedRegistrationNames: {\n      captured: 'onChangeCapture',\n      bubbled: 'onChange',\n    },\n  },\n  topSelect: {\n    phasedRegistrationNames: {\n      captured: 'onSelectCapture',\n      bubbled: 'onSelect',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      captured: 'onTouchEndCapture',\n      bubbled: 'onTouchEnd',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      captured: 'onTouchCancelCapture',\n      bubbled: 'onTouchCancel',\n    },\n  },\n  topTouchStart: {\n    phasedRegistrationNames: {\n      captured: 'onTouchStartCapture',\n      bubbled: 'onTouchStart',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      captured: 'onTouchMoveCapture',\n      bubbled: 'onTouchMove',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n  topPointerOut: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOutCapture',\n      bubbled: 'onPointerOut',\n    },\n  },\n  topPointerOver: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOverCapture',\n      bubbled: 'onPointerOver',\n    },\n  },\n  topClick: {\n    phasedRegistrationNames: {\n      captured: 'onClickCapture',\n      bubbled: 'onClick',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n\n  // Direct events from UIManagerModuleConstants.java\n  topContentSizeChange: {\n    registrationName: 'onContentSizeChange',\n  },\n  topScrollBeginDrag: {\n    registrationName: 'onScrollBeginDrag',\n  },\n  topMessage: {\n    registrationName: 'onMessage',\n  },\n  topSelectionChange: {\n    registrationName: 'onSelectionChange',\n  },\n  topLoadingFinish: {\n    registrationName: 'onLoadingFinish',\n  },\n  topMomentumScrollEnd: {\n    registrationName: 'onMomentumScrollEnd',\n  },\n  topLoadingStart: {\n    registrationName: 'onLoadingStart',\n  },\n  topLoadingError: {\n    registrationName: 'onLoadingError',\n  },\n  topMomentumScrollBegin: {\n    registrationName: 'onMomentumScrollBegin',\n  },\n  topScrollEndDrag: {\n    registrationName: 'onScrollEndDrag',\n  },\n  topScroll: {\n    registrationName: 'onScroll',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n};\n\nconst validAttributesForNonEventProps = {\n  // @ReactProps from BaseViewManager\n  backgroundColor: {process: require('../StyleSheet/processColor').default},\n  transform: true,\n  transformOrigin: true,\n  experimental_backgroundImage: {\n    process: require('../StyleSheet/processBackgroundImage').default,\n  },\n  boxShadow: {\n    process: require('../StyleSheet/processBoxShadow').default,\n  },\n  filter: {\n    process: require('../StyleSheet/processFilter').default,\n  },\n  experimental_mixBlendMode: true,\n  isolation: true,\n  opacity: true,\n  elevation: true,\n  shadowColor: {process: require('../StyleSheet/processColor').default},\n  zIndex: true,\n  renderToHardwareTextureAndroid: true,\n  testID: true,\n  nativeID: true,\n  accessibilityLabelledBy: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityRole: true,\n  accessibilityCollection: true,\n  accessibilityCollectionItem: true,\n  accessibilityState: true,\n  accessibilityActions: true,\n  accessibilityValue: true,\n  importantForAccessibility: true,\n  role: true,\n  rotation: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n  accessibilityLiveRegion: true,\n\n  // @ReactProps from LayoutShadowNode\n  width: true,\n  minWidth: true,\n  collapsable: true,\n  collapsableChildren: true,\n  maxWidth: true,\n  height: true,\n  minHeight: true,\n  maxHeight: true,\n  flex: true,\n  flexGrow: true,\n  rowGap: true,\n  columnGap: true,\n  gap: true,\n  flexShrink: true,\n  flexBasis: true,\n  aspectRatio: true,\n  flexDirection: true,\n  flexWrap: true,\n  alignSelf: true,\n  alignItems: true,\n  alignContent: true,\n  justifyContent: true,\n  overflow: true,\n  display: true,\n\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n\n  borderWidth: true,\n  borderStartWidth: true,\n  borderEndWidth: true,\n  borderTopWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n\n  start: true,\n  end: true,\n  left: true,\n  right: true,\n  top: true,\n  bottom: true,\n\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n\n  position: true,\n\n  style: ReactNativeStyleAttributes,\n\n  experimental_layoutConformance: true,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = {\n  onLayout: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onClick: true,\n  onClickCapture: true,\n  onPointerEnter: true,\n  onPointerEnterCapture: true,\n  onPointerLeave: true,\n  onPointerLeaveCapture: true,\n  onPointerMove: true,\n  onPointerMoveCapture: true,\n  onPointerOut: true,\n  onPointerOutCapture: true,\n  onPointerOver: true,\n  onPointerOverCapture: true,\n};\n\n/**\n * On Android, Props are derived from a ViewManager and its ShadowNode.\n *\n * Where did we find these base platform props from?\n * - Nearly all component ViewManagers descend from BaseViewManager,\n * - and BaseViewManagers' ShadowNodes descend from LayoutShadowNode.\n * - Also, all components inherit ViewConfigs from UIManagerModuleConstants.java.\n *\n * So, these ViewConfigs are generated from LayoutShadowNode and BaseViewManager.\n */\nconst PlatformBaseViewConfigAndroid: PartialViewConfigWithoutName = {\n  directEventTypes,\n  bubblingEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport {createViewConfig} from './ViewConfig';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nlet getRuntimeConfig;\n\n/**\n * Configures a function that is called to determine whether a given component\n * should be registered using reflection of the native component at runtime.\n *\n * The provider should return null if the native component is unavailable in\n * the current environment.\n */\nexport function setRuntimeConfigProvider(\n  runtimeConfigProvider: (name: string) => ?{\n    native: boolean,\n    verify: boolean,\n  },\n): void {\n  if (getRuntimeConfig === undefined) {\n    getRuntimeConfig = runtimeConfigProvider;\n  }\n}\n\n/**\n * Gets a `NativeComponent` that can be rendered by React Native.\n *\n * The supplied `viewConfigProvider` may or may not be invoked and utilized,\n * depending on how `setRuntimeConfigProvider` is configured.\n */\nexport function get<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): HostComponent<Config> {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {native, verify} = getRuntimeConfig?.(name) ?? {\n      native: !global.RN$Bridgeless,\n      verify: false,\n    };\n\n    let viewConfig: ViewConfig;\n    if (native) {\n      viewConfig =\n        getNativeComponentAttributes(name) ??\n        createViewConfig(viewConfigProvider());\n    } else {\n      viewConfig =\n        createViewConfig(viewConfigProvider()) ??\n        getNativeComponentAttributes(name);\n    }\n\n    invariant(\n      viewConfig != null,\n      'NativeComponentRegistry.get: both static and native view config are missing for native component \"%s\".',\n      name,\n    );\n\n    if (verify) {\n      const nativeViewConfig = native\n        ? viewConfig\n        : getNativeComponentAttributes(name);\n\n      if (nativeViewConfig == null) {\n        // Defer to static view config if native view config is missing.\n        return viewConfig;\n      }\n\n      const staticViewConfig: ViewConfig = native\n        ? createViewConfig(viewConfigProvider())\n        : viewConfig;\n\n      const validationOutput = StaticViewConfigValidator.validate(\n        name,\n        nativeViewConfig,\n        staticViewConfig,\n      );\n\n      if (validationOutput.type === 'invalid') {\n        console.error(\n          StaticViewConfigValidator.stringifyValidationResult(\n            name,\n            validationOutput,\n          ),\n        );\n      }\n    }\n\n    return viewConfig;\n  });\n\n  // $FlowFixMe[incompatible-return] `NativeComponent` is actually string!\n  return name;\n}\n\n/**\n * Same as `NativeComponentRegistry.get(...)`, except this will check either\n * the `setRuntimeConfigProvider` configuration or use native reflection (slow)\n * to determine whether this native component is available.\n *\n * If the native component is not available, a stub component is returned. Note\n * that the return value of this is not `HostComponent` because the returned\n * component instance is not guaranteed to have native methods.\n */\nexport function getWithFallback_DEPRECATED<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): React.AbstractComponent<Config> {\n  if (getRuntimeConfig == null) {\n    // `getRuntimeConfig == null` when static view configs are disabled\n    // If `setRuntimeConfigProvider` is not configured, use native reflection.\n    if (hasNativeViewConfig(name)) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  } else {\n    // If there is no runtime config, then the native component is unavailable.\n    if (getRuntimeConfig(name) != null) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  }\n\n  const FallbackNativeComponent = function (props: Config): React.Node {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\n\nfunction hasNativeViewConfig(name: string): boolean {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if there is a StaticViewConfig registered for the\n * component name received as a parameter.\n */\nexport function unstable_hasStaticViewConfig(name: string): boolean {\n  const {native} = getRuntimeConfig?.(name) ?? {\n    native: true,\n  };\n  return !native;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nimport BaseViewConfig from './BaseViewConfig';\n\nexport type PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst PlatformBaseViewConfig: PartialViewConfigWithoutName = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences: Array<Difference> = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    // $FlowFixMe[invalid-computed-prop]\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    // $FlowFixMe[invalid-computed-prop]\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    // $FlowFixMe[incompatible-return]\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet<{...}>();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(\n  value: T,\n): T | void {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value: mixed): boolean {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../Components/TextInput/TextInputState';\nimport {getNodeFromInternalInstanceHandle} from '../../ReactNative/RendererProxy';\nimport {getFabricUIManager} from '../FabricUIManager';\nimport {create} from './ReactNativeAttributePayload';\nimport warnForStyleProps from './warnForStyleProps';\nimport nullthrows from 'nullthrows';\n\nconst {\n  measure: fabricMeasure,\n  measureInWindow: fabricMeasureInWindow,\n  measureLayout: fabricMeasureLayout,\n  getBoundingClientRect: fabricGetBoundingClientRect,\n  setNativeProps,\n} = nullthrows(getFabricUIManager());\n\nconst noop = () => {};\n\n/**\n * This is used for refs on host components.\n */\nexport default class ReactFabricHostComponent implements INativeMethods {\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  _viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    this.__nativeTag = tag;\n    this._viewConfig = viewConfig;\n    this.__internalInstanceHandle = internalInstanceHandle;\n  }\n\n  blur() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (\n      typeof relativeToNativeNode === 'number' ||\n      !(relativeToNativeNode instanceof ReactFabricHostComponent)\n    ) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    const fromStateNode = getNodeFromInternalInstanceHandle(\n      relativeToNativeNode.__internalInstanceHandle,\n    );\n\n    if (toStateNode != null && fromStateNode != null) {\n      fabricMeasureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  unstable_getBoundingClientRect(): DOMRect {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      const rect = fabricGetBoundingClientRect(node, true);\n\n      if (rect) {\n        return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n      }\n    }\n\n    // Empty rect if any of the above failed\n    return new DOMRect(0, 0, 0, 0);\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this._viewConfig.validAttributes);\n    }\n    const updatePayload = create(nativeProps, this._viewConfig.validAttributes);\n\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null && updatePayload != null) {\n      setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/**\n * This module is meant to be used by the React renderers to create public\n * instances and get some data from them (like their instance handle / fiber).\n */\n\nimport type ReactNativeElement from '../../../src/private/webapis/dom/nodes/ReactNativeElement';\nimport type ReadOnlyText from '../../../src/private/webapis/dom/nodes/ReadOnlyText';\nimport typeof * as RendererProxyT from '../../ReactNative/RendererProxy';\nimport type {\n  InternalInstanceHandle,\n  Node,\n  ViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type ReactFabricHostComponent from './ReactFabricHostComponent';\n\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet PublicInstanceClass:\n  | Class<ReactFabricHostComponent>\n  | Class<ReactNativeElement>;\nlet ReadOnlyTextClass: Class<ReadOnlyText>;\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet RendererProxy: RendererProxyT;\n\nexport function createPublicInstance(\n  tag: number,\n  viewConfig: ViewConfig,\n  internalInstanceHandle: InternalInstanceHandle,\n): ReactFabricHostComponent | ReactNativeElement {\n  if (PublicInstanceClass == null) {\n    // We don't use inline requires in react-native, so this forces lazy loading\n    // the right module to avoid eagerly loading both.\n    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass =\n        require('../../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\n\nexport function createPublicTextInstance(\n  internalInstanceHandle: InternalInstanceHandle,\n): ReadOnlyText {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass =\n      require('../../../src/private/webapis/dom/nodes/ReadOnlyText').default;\n  }\n\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\n\nexport function getNativeTagFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): number {\n  return publicInstance.__nativeTag;\n}\n\nexport function getNodeFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): ?Node {\n  // Avoid loading ReactFabric if using an instance from the legacy renderer.\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n\n  if (RendererProxy == null) {\n    RendererProxy = require('../../ReactNative/RendererProxy');\n  }\n  return RendererProxy.getNodeFromInternalInstanceHandle(\n    publicInstance.__internalInstanceHandle,\n  );\n}\n\nexport function getInternalInstanceHandleFromPublicInstance(\n  publicInstance: ReactFabricHostComponent | ReactNativeElement,\n): InternalInstanceHandle {\n  // TODO(T174762768): Remove this once OSS versions of renderers will be synced.\n  // $FlowExpectedError[prop-missing] Keeping this for backwards-compatibility with the renderers versions in open source.\n  if (publicInstance._internalInstanceHandle != null) {\n    // $FlowExpectedError[incompatible-return] Keeping this for backwards-compatibility with the renderers versions in open source.\n    return publicInstance._internalInstanceHandle;\n  }\n\n  return publicInstance.__internalInstanceHandle;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport deepDiffer from '../../Utilities/differ/deepDiffer';\n\nconst emptyObject = {};\n\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\ntype NestedNode = Array<NestedNode> | Object;\n\n// Tracks removed keys\nlet removedKeys: {[string]: boolean} | null = null;\nlet removedKeyCount = 0;\n\nconst deepDifferOptions = {\n  unsafelyIgnoreFunctions: true,\n};\n\nfunction defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {\n  if (typeof nextProp !== 'object' || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return deepDiffer(prevProp, nextProp, deepDifferOptions);\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload: Object,\n  node: NestedNode,\n  validAttributes: AttributeConfiguration,\n) {\n  if (Array.isArray(node)) {\n    let i = node.length;\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes,\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    const obj = node;\n    for (const propKey in removedKeys) {\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n      let nextProp = obj[propKey];\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      const attributeConfig = validAttributes[propKey];\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === 'function') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = true;\n      }\n      if (typeof nextProp === 'undefined') {\n        // $FlowFixMe[incompatible-type] found when upgrading Flow\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload: null | Object,\n  prevArray: Array<NestedNode>,\n  nextArray: Array<NestedNode>,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  const minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  let i;\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  if (Array.isArray(prevProp)) {\n    return diffProperties(\n      updatePayload,\n      // $FlowFixMe - We know that this is always an object when the input is.\n      flattenStyle(prevProp),\n      // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp,\n    // $FlowFixMe - We know that this is always an object when the input is.\n    flattenStyle(nextProp),\n    validAttributes,\n  );\n}\n\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\nfunction addNestedProperty(\n  updatePayload: null | Object,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): $FlowFixMe {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (let i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes,\n    );\n  }\n\n  return updatePayload;\n}\n\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\nfunction clearNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (let i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\nfunction diffProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  let attributeConfig;\n  let nextProp;\n  let prevProp;\n\n  for (const propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey];\n\n    // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n    if (typeof nextProp === 'function') {\n      nextProp = (true: any);\n      // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n      if (typeof prevProp === 'function') {\n        prevProp = (true: any);\n      }\n    }\n\n    // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n    if (typeof nextProp === 'undefined') {\n      nextProp = (null: any);\n      if (typeof prevProp === 'undefined') {\n        prevProp = (null: any);\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    }\n\n    // Pattern match on: attributeConfig\n    if (typeof attributeConfig !== 'object') {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration\n      const shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === 'function'\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n      if (shouldUpdate) {\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? // $FlowFixMe[incompatible-use] found when upgrading Flow\n              attributeConfig.process(nextProp)\n            : nextProp;\n        (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n          propKey\n        ] = nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0;\n      // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          ((attributeConfig: any): AttributeConfiguration),\n        );\n        removedKeys = null;\n      }\n    }\n  }\n\n  // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n  for (const propKey in prevProps) {\n    if (nextProps[propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[propKey];\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    }\n    // Pattern match on: attributeConfig\n    if (\n      typeof attributeConfig !== 'object' ||\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = ({}: {[string]: $FlowFixMe})))[\n        propKey\n      ] = null;\n      if (!removedKeys) {\n        removedKeys = ({}: {[string]: boolean});\n      }\n      if (!removedKeys[propKey]) {\n        removedKeys[propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n    }\n  }\n  return updatePayload;\n}\n\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\nfunction addProperties(\n  updatePayload: null | Object,\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\nfunction clearProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nexport function create(\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes,\n  );\n}\n\nexport function diff(\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {AttributeConfiguration} from '../../Renderer/shims/ReactNativeTypes';\n\nexport default function warnForStyleProps(\n  props: {...},\n  validAttributes: AttributeConfiguration,\n): void {\n  if (__DEV__) {\n    for (const key in validAttributes.style) {\n      // $FlowFixMe[invalid-computed-prop]\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        console.error(\n          'You are setting the style `{ %s' +\n            ': ... }` as a prop. You ' +\n            'should nest it in a style object. ' +\n            'E.g. `{ style: { %s' +\n            ': ... } }`',\n          key,\n          key,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport typeof BatchedBridge from '../BatchedBridge/BatchedBridge';\nimport typeof legacySendAccessibilityEvent from '../Components/AccessibilityInfo/legacySendAccessibilityEvent';\nimport typeof TextInputState from '../Components/TextInput/TextInputState';\nimport typeof ExceptionsManager from '../Core/ExceptionsManager';\nimport typeof RawEventEmitter from '../Core/RawEventEmitter';\nimport typeof ReactFiberErrorDialog from '../Core/ReactFiberErrorDialog';\nimport typeof RCTEventEmitter from '../EventEmitter/RCTEventEmitter';\nimport typeof CustomEvent from '../Events/CustomEvent';\nimport typeof {\n  createPublicInstance,\n  createPublicTextInstance,\n  getInternalInstanceHandleFromPublicInstance,\n  getNativeTagFromPublicInstance,\n  getNodeFromPublicInstance,\n} from '../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance';\nimport typeof {\n  create as createAttributePayload,\n  diff as diffAttributePayloads,\n} from '../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';\nimport typeof UIManager from '../ReactNative/UIManager';\nimport typeof * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport typeof flattenStyle from '../StyleSheet/flattenStyle';\nimport type {DangerouslyImpreciseStyleProp} from '../StyleSheet/StyleSheet';\nimport typeof deepFreezeAndThrowOnMutationInDev from '../Utilities/deepFreezeAndThrowOnMutationInDev';\nimport typeof deepDiffer from '../Utilities/differ/deepDiffer';\nimport typeof Platform from '../Utilities/Platform';\n\n// flowlint unsafe-getters-setters:off\nmodule.exports = {\n  get BatchedBridge(): BatchedBridge {\n    return require('../BatchedBridge/BatchedBridge');\n  },\n  get ExceptionsManager(): ExceptionsManager {\n    return require('../Core/ExceptionsManager');\n  },\n  get Platform(): Platform {\n    return require('../Utilities/Platform');\n  },\n  get RCTEventEmitter(): RCTEventEmitter {\n    return require('../EventEmitter/RCTEventEmitter');\n  },\n  get ReactNativeViewConfigRegistry(): ReactNativeViewConfigRegistry {\n    return require('../Renderer/shims/ReactNativeViewConfigRegistry');\n  },\n  get TextInputState(): TextInputState {\n    return require('../Components/TextInput/TextInputState');\n  },\n  get UIManager(): UIManager {\n    return require('../ReactNative/UIManager');\n  },\n  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`\n  get deepDiffer(): deepDiffer {\n    return require('../Utilities/differ/deepDiffer');\n  },\n  get deepFreezeAndThrowOnMutationInDev(): deepFreezeAndThrowOnMutationInDev<\n    {...} | Array<mixed>,\n  > {\n    return require('../Utilities/deepFreezeAndThrowOnMutationInDev');\n  },\n  // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`\n  get flattenStyle(): flattenStyle<DangerouslyImpreciseStyleProp> {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    // $FlowFixMe[incompatible-return]\n    return require('../StyleSheet/flattenStyle');\n  },\n  get ReactFiberErrorDialog(): ReactFiberErrorDialog {\n    return require('../Core/ReactFiberErrorDialog').default;\n  },\n  get legacySendAccessibilityEvent(): legacySendAccessibilityEvent {\n    return require('../Components/AccessibilityInfo/legacySendAccessibilityEvent');\n  },\n  get RawEventEmitter(): RawEventEmitter {\n    return require('../Core/RawEventEmitter').default;\n  },\n  get CustomEvent(): CustomEvent {\n    return require('../Events/CustomEvent').default;\n  },\n  get createAttributePayload(): createAttributePayload {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')\n      .create;\n  },\n  get diffAttributePayloads(): diffAttributePayloads {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload')\n      .diff;\n  },\n  get createPublicInstance(): createPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .createPublicInstance;\n  },\n  get createPublicTextInstance(): createPublicTextInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .createPublicTextInstance;\n  },\n  get getNativeTagFromPublicInstance(): getNativeTagFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getNativeTagFromPublicInstance;\n  },\n  get getNodeFromPublicInstance(): getNodeFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getNodeFromPublicInstance;\n  },\n  get getInternalInstanceHandleFromPublicInstance(): getInternalInstanceHandleFromPublicInstance {\n    return require('../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n      .getInternalInstanceHandleFromPublicInstance;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @nolint\n * @flow strict-local\n * @generated SignedSource<<69d0cc554d77cddb1c779dfbdf569505>>\n */\n\n'use strict';\n\nimport {type ViewConfig} from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nexport const customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    phasedRegistrationNames: $ReadOnly<{\n      captured: string,\n      bubbled: string,\n      skipBubbling?: ?boolean,\n    }>,\n  }>,\n} = {};\nexport const customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{\n    registrationName: string,\n  }>,\n} = {};\n\nconst viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\nconst viewConfigs = new Map<string, ViewConfig>();\n\nfunction processEventTypes(viewConfig: ViewConfig): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexport function register(name: string, callback: () => ViewConfig): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n}\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexport function get(name: string): ViewConfig {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        // $FlowFixMe[recursive-definition]\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {DangerouslyImpreciseStyleProp} from './StyleSheet';\nimport type {____FlattenStyleProp_Internal} from './StyleSheetTypes';\n\nfunction flattenStyle<TStyleProp: DangerouslyImpreciseStyleProp>(\n  style: ?TStyleProp,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n): ?____FlattenStyleProp_Internal<TStyleProp> {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result: {[string]: $FlowFixMe} = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nlet logListeners;\n\ntype LogListeners = {|\n  +onDifferentFunctionsIgnored: (nameOne: ?string, nameTwo: ?string) => void,\n|};\n\ntype Options = {|+unsafelyIgnoreFunctions?: boolean|};\n\nfunction unstable_setLogListeners(listeners: ?LogListeners) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one: any,\n  two: any,\n  maxDepthOrOptions: Options | number = -1,\n  maybeOptions?: Options,\n): boolean {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  HostComponent,\n  INativeMethods,\n  InternalInstanceHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  ViewConfig,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {ElementRef} from 'react';\n\nimport TextInputState from '../../../../../Libraries/Components/TextInput/TextInputState';\nimport {getFabricUIManager} from '../../../../../Libraries/ReactNative/FabricUIManager';\nimport {create as createAttributePayload} from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload';\nimport warnForStyleProps from '../../../../../Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps';\nimport ReadOnlyElement, {getBoundingClientRect} from './ReadOnlyElement';\nimport ReadOnlyNode from './ReadOnlyNode';\nimport {\n  getPublicInstanceFromInternalInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport nullthrows from 'nullthrows';\n\nconst noop = () => {};\n\nexport default class ReactNativeElement\n  extends ReadOnlyElement\n  implements INativeMethods\n{\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag: number;\n  __internalInstanceHandle: InternalInstanceHandle;\n\n  #viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandle: InternalInstanceHandle,\n  ) {\n    super(internalInstanceHandle);\n\n    this.__nativeTag = tag;\n    this.__internalInstanceHandle = internalInstanceHandle;\n    this.#viewConfig = viewConfig;\n  }\n\n  get offsetHeight(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).height,\n    );\n  }\n\n  get offsetLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      return Math.round(offset[2]);\n    }\n\n    return 0;\n  }\n\n  get offsetParent(): ReadOnlyElement | null {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      // For children of the root node we currently return offset data\n      // but a `null` parent because the root node is not accessible\n      // in JavaScript yet.\n      if (offset[0] != null) {\n        const offsetParentInstanceHandle = offset[0];\n        const offsetParent = getPublicInstanceFromInternalInstanceHandle(\n          offsetParentInstanceHandle,\n        );\n        // $FlowExpectedError[incompatible-type] The value returned by `getOffset` is always an instance handle for `ReadOnlyElement`.\n        const offsetParentElement: ReadOnlyElement | null = offsetParent;\n        return offsetParentElement;\n      }\n    }\n\n    return null;\n  }\n\n  get offsetTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const offset = NativeDOM.getOffset(node);\n      return Math.round(offset[1]);\n    }\n\n    return 0;\n  }\n\n  get offsetWidth(): number {\n    return Math.round(\n      getBoundingClientRect(this, {includeTransform: false}).width,\n    );\n  }\n\n  /**\n   * React Native compatibility methods\n   */\n\n  blur(): void {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measure(node, callback);\n    }\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    const node = getShadowNode(this);\n    if (node != null) {\n      nullthrows(getFabricUIManager()).measureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    if (!(relativeToNativeNode instanceof ReadOnlyNode)) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getShadowNode(this);\n    const fromStateNode = getShadowNode(relativeToNativeNode);\n\n    if (toStateNode != null && fromStateNode != null) {\n      nullthrows(getFabricUIManager()).measureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  setNativeProps(nativeProps: {...}): void {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this.#viewConfig.validAttributes);\n    }\n\n    const updatePayload = createAttributePayload(\n      nativeProps,\n      this.#viewConfig.validAttributes,\n    );\n\n    const node = getShadowNode(this);\n\n    if (node != null && updatePayload != null) {\n      nullthrows(getFabricUIManager()).setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport ReadOnlyNode, {getShadowNode} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport {getElementSibling} from './utilities/Traversal';\n\nexport default class ReadOnlyCharacterData extends ReadOnlyNode {\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get data(): string {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return NativeDOM.getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  /**\n   * @override\n   */\n  get textContent(): string | null {\n    return this.data;\n  }\n\n  /**\n   * @override\n   */\n  get nodeValue(): string {\n    return this.data;\n  }\n\n  substringData(offset: number, count: number): string {\n    const data = this.data;\n    if (offset < 0) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`,\n      );\n    }\n    if (offset > data.length) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`,\n      );\n    }\n    let adjustedCount = count < 0 || count > data.length ? data.length : count;\n    return data.slice(offset, offset + adjustedCount);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type HTMLCollection from '../oldstylecollections/HTMLCollection';\n\nimport DOMRect from '../geometry/DOMRect';\nimport {createHTMLCollection} from '../oldstylecollections/HTMLCollection';\nimport ReadOnlyNode, {\n  getChildNodes,\n  getInstanceHandle,\n  getShadowNode,\n} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport {getElementSibling} from './utilities/Traversal';\n\nexport default class ReadOnlyElement extends ReadOnlyNode {\n  get childElementCount(): number {\n    return getChildElements(this).length;\n  }\n\n  get children(): HTMLCollection<ReadOnlyElement> {\n    return createHTMLCollection(getChildElements(this));\n  }\n\n  get clientHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = NativeDOM.getInnerSize(node);\n      return innerSize[1];\n    }\n\n    return 0;\n  }\n\n  get clientLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = NativeDOM.getBorderWidth(node);\n      return borderSize[3];\n    }\n\n    return 0;\n  }\n\n  get clientTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const borderSize = NativeDOM.getBorderWidth(node);\n      return borderSize[0];\n    }\n\n    return 0;\n  }\n\n  get clientWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const innerSize = NativeDOM.getInnerSize(node);\n      return innerSize[0];\n    }\n\n    return 0;\n  }\n\n  get firstElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[0];\n  }\n\n  get id(): string {\n    const instanceHandle = getInstanceHandle(this);\n    // TODO: migrate off this private React API\n    // $FlowExpectedError[incompatible-use]\n    const props = instanceHandle?.stateNode?.canonical?.currentProps;\n    return props?.id ?? props?.nativeID ?? '';\n  }\n\n  get lastElementChild(): ReadOnlyElement | null {\n    const childElements = getChildElements(this);\n\n    if (childElements.length === 0) {\n      return null;\n    }\n\n    return childElements[childElements.length - 1];\n  }\n\n  get nextElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'next');\n  }\n\n  get nodeName(): string {\n    return this.tagName;\n  }\n\n  get nodeType(): number {\n    return ReadOnlyNode.ELEMENT_NODE;\n  }\n\n  get nodeValue(): string | null {\n    return null;\n  }\n\n  set nodeValue(value: string): void {}\n\n  get previousElementSibling(): ReadOnlyElement | null {\n    return getElementSibling(this, 'previous');\n  }\n\n  get scrollHeight(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = NativeDOM.getScrollSize(node);\n      return scrollSize[1];\n    }\n\n    return 0;\n  }\n\n  get scrollLeft(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = NativeDOM.getScrollPosition(node);\n      return scrollPosition[0];\n    }\n\n    return 0;\n  }\n\n  get scrollTop(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollPosition = NativeDOM.getScrollPosition(node);\n      return scrollPosition[1];\n    }\n\n    return 0;\n  }\n\n  get scrollWidth(): number {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      const scrollSize = NativeDOM.getScrollSize(node);\n      return scrollSize[0];\n    }\n\n    return 0;\n  }\n\n  get tagName(): string {\n    const node = getShadowNode(this);\n\n    if (node != null) {\n      return NativeDOM.getTagName(node);\n    }\n\n    return '';\n  }\n\n  get textContent(): string | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return NativeDOM.getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  getBoundingClientRect(): DOMRect {\n    return getBoundingClientRect(this, {includeTransform: true});\n  }\n\n  /**\n   * Pointer Capture APIs\n   */\n  hasPointerCapture(pointerId: number): boolean {\n    const node = getShadowNode(this);\n    if (node != null) {\n      return NativeDOM.hasPointerCapture(node, pointerId);\n    }\n    return false;\n  }\n\n  setPointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      NativeDOM.setPointerCapture(node, pointerId);\n    }\n  }\n\n  releasePointerCapture(pointerId: number): void {\n    const node = getShadowNode(this);\n    if (node != null) {\n      NativeDOM.releasePointerCapture(node, pointerId);\n    }\n  }\n}\n\nfunction getChildElements(node: ReadOnlyNode): $ReadOnlyArray<ReadOnlyElement> {\n  // $FlowIssue[incompatible-call]\n  return getChildNodes(node).filter(\n    childNode => childNode instanceof ReadOnlyElement,\n  );\n}\n\n/**\n * The public API for `getBoundingClientRect` always includes transform,\n * so we use this internal version to get the data without transform to\n * implement methods like `offsetWidth` and `offsetHeight`.\n */\nexport function getBoundingClientRect(\n  node: ReadOnlyElement,\n  {includeTransform}: {includeTransform: boolean},\n): DOMRect {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode != null) {\n    const rect = NativeDOM.getBoundingClientRect(shadowNode, includeTransform);\n    return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n  }\n\n  // Empty rect if any of the above failed\n  return new DOMRect(0, 0, 0, 0);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  InternalInstanceHandle,\n  Node as ShadowNode,\n} from '../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type NodeList from '../oldstylecollections/NodeList';\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {createNodeList} from '../oldstylecollections/NodeList';\nimport NativeDOM from './specs/NativeDOM';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `ReadOnlyNode`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport default class ReadOnlyNode {\n  constructor(internalInstanceHandle: InternalInstanceHandle) {\n    setInstanceHandle(this, internalInstanceHandle);\n  }\n\n  get childNodes(): NodeList<ReadOnlyNode> {\n    const childNodes = getChildNodes(this);\n    return createNodeList(childNodes);\n  }\n\n  get firstChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[0];\n  }\n\n  get isConnected(): boolean {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return false;\n    }\n\n    return NativeDOM.isConnected(shadowNode);\n  }\n\n  get lastChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[childNodes.length - 1];\n  }\n\n  get nextSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === siblings.length - 1) {\n      // this node is the last child of its parent, so there is no next sibling.\n      return null;\n    }\n\n    return siblings[position + 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeName(): string {\n    throw new TypeError(\n      '`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeType(): number {\n    throw new TypeError(\n      '`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeValue(): string | null {\n    throw new TypeError(\n      '`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  get parentElement(): ReadOnlyElement | null {\n    const parentNode = this.parentNode;\n\n    if (ReadOnlyElementClass == null) {\n      // We initialize this lazily to avoid a require cycle.\n      ReadOnlyElementClass = require('./ReadOnlyElement').default;\n    }\n\n    if (parentNode instanceof ReadOnlyElementClass) {\n      return parentNode;\n    }\n\n    return null;\n  }\n\n  get parentNode(): ReadOnlyNode | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return null;\n    }\n\n    const parentInstanceHandle = NativeDOM.getParentNode(shadowNode);\n\n    if (parentInstanceHandle == null) {\n      return null;\n    }\n\n    return (\n      getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle) ?? null\n    );\n  }\n\n  get previousSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === 0) {\n      // this node is the first child of its parent, so there is no previous sibling.\n      return null;\n    }\n\n    return siblings[position - 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get textContent(): string | null {\n    throw new TypeError(\n      '`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  compareDocumentPosition(otherNode: ReadOnlyNode): number {\n    // Quick check to avoid having to call into Fabric if the nodes are the same.\n    if (otherNode === this) {\n      return 0;\n    }\n\n    const shadowNode = getShadowNode(this);\n    const otherShadowNode = getShadowNode(otherNode);\n\n    if (shadowNode == null || otherShadowNode == null) {\n      return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n    }\n\n    return NativeDOM.compareDocumentPosition(shadowNode, otherShadowNode);\n  }\n\n  contains(otherNode: ReadOnlyNode): boolean {\n    if (otherNode === this) {\n      return true;\n    }\n\n    const position = this.compareDocumentPosition(otherNode);\n    // eslint-disable-next-line no-bitwise\n    return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n  }\n\n  getRootNode(): ReadOnlyNode {\n    // eslint-disable-next-line consistent-this\n    let lastKnownParent: ReadOnlyNode = this;\n    let nextPossibleParent: ?ReadOnlyNode = this.parentNode;\n\n    while (nextPossibleParent != null) {\n      lastKnownParent = nextPossibleParent;\n      nextPossibleParent = nextPossibleParent.parentNode;\n    }\n\n    return lastKnownParent;\n  }\n\n  hasChildNodes(): boolean {\n    return getChildNodes(this).length > 0;\n  }\n\n  /*\n   * Node types, as returned by the `nodeType` property.\n   */\n\n  /**\n   * Type of Element, HTMLElement and ReactNativeElement instances.\n   */\n  static ELEMENT_NODE: number = 1;\n  /**\n   * Currently Unused in React Native.\n   */\n  static ATTRIBUTE_NODE: number = 2;\n  /**\n   * Text nodes.\n   */\n  static TEXT_NODE: number = 3;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static CDATA_SECTION_NODE: number = 4;\n  /**\n   * @deprecated\n   */\n  static ENTITY_REFERENCE_NODE: number = 5;\n  /**\n   * @deprecated\n   */\n  static ENTITY_NODE: number = 6;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static PROCESSING_INSTRUCTION_NODE: number = 7;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static COMMENT_NODE: number = 8;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_NODE: number = 9;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_TYPE_NODE: number = 10;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_FRAGMENT_NODE: number = 11;\n  /**\n   * @deprecated\n   */\n  static NOTATION_NODE: number = 12;\n\n  /*\n   * Document position flags. Used to check the return value of\n   * `compareDocumentPosition()`.\n   */\n\n  /**\n   * Both nodes are in different documents.\n   */\n  static DOCUMENT_POSITION_DISCONNECTED: number = 1;\n  /**\n   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_PRECEDING: number = 2;\n  /**\n   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_FOLLOWING: number = 4;\n  /**\n   * `otherNode` is an ancestor of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINS: number = 8;\n  /**\n   * `otherNode` is a descendant of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINED_BY: number = 16;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number = 32;\n}\n\nconst INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n\nexport function getInstanceHandle(node: ReadOnlyNode): InternalInstanceHandle {\n  // $FlowExpectedError[prop-missing]\n  return node[INSTANCE_HANDLE_KEY];\n}\n\nfunction setInstanceHandle(\n  node: ReadOnlyNode,\n  instanceHandle: InternalInstanceHandle,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\n\nexport function getShadowNode(node: ReadOnlyNode): ?ShadowNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const RendererProxy = require('../../../../../Libraries/ReactNative/RendererProxy');\n  return RendererProxy.getNodeFromInternalInstanceHandle(\n    getInstanceHandle(node),\n  );\n}\n\nexport function getChildNodes(\n  node: ReadOnlyNode,\n): $ReadOnlyArray<ReadOnlyNode> {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode == null) {\n    return [];\n  }\n\n  const childNodeInstanceHandles = NativeDOM.getChildNodes(shadowNode);\n  return childNodeInstanceHandles\n    .map(instanceHandle =>\n      getPublicInstanceFromInternalInstanceHandle(instanceHandle),\n    )\n    .filter(Boolean);\n}\n\nfunction getNodeSiblingsAndPosition(\n  node: ReadOnlyNode,\n): [$ReadOnlyArray<ReadOnlyNode>, number] {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return [[node], 0];\n  }\n\n  const siblings = getChildNodes(parent);\n  const position = siblings.indexOf(node);\n\n  if (position === -1) {\n    throw new TypeError(\"Missing node in parent's child node list\");\n  }\n\n  return [siblings, position];\n}\n\nexport function getPublicInstanceFromInternalInstanceHandle(\n  instanceHandle: InternalInstanceHandle,\n): ?ReadOnlyNode {\n  // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n  // With a static import we can't use these classes for Paper-only variants.\n  const RendererProxy = require('../../../../../Libraries/ReactNative/RendererProxy');\n  const mixedPublicInstance =\n    RendererProxy.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n  return mixedPublicInstance;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\n\nexport default class ReadOnlyText extends ReadOnlyCharacterData {\n  /**\n   * @override\n   */\n  get nodeName(): string {\n    return '#text';\n  }\n\n  /**\n   * @override\n   */\n  get nodeType(): number {\n    return ReadOnlyNode.TEXT_NODE;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {\n  InternalInstanceHandle as InstanceHandle,\n  Node as ShadowNode,\n} from '../../../../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {TurboModule} from '../../../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../../../Libraries/TurboModule/TurboModuleRegistry';\nimport nullthrows from 'nullthrows';\n\nexport type MeasureInWindowOnSuccessCallback = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => void;\n\nexport type MeasureOnSuccessCallback = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  pageX: number,\n  pageY: number,\n) => void;\n\nexport type MeasureLayoutOnSuccessCallback = (\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) => void;\n\nexport interface Spec extends TurboModule {\n  +getParentNode: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => mixed /* ?InstanceHandle */;\n\n  +getChildNodes: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<mixed> /* $ReadOnlyArray<InstanceHandle> */;\n\n  +isConnected: (shadowNode: mixed /* ShadowNode */) => boolean;\n\n  +compareDocumentPosition: (\n    shadowNode: mixed /* ShadowNode */,\n    otherShadowNode: mixed /* ShadowNode */,\n  ) => number;\n\n  +getTextContent: (shadowNode: mixed /* ShadowNode */) => string;\n\n  +getBoundingClientRect: (\n    shadowNode: mixed /* ShadowNode */,\n    includeTransform: boolean,\n  ) => $ReadOnlyArray<number> /* [x: number, y: number, width: number, height: number] */;\n\n  +getOffset: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<mixed> /* [offsetParent: ?InstanceHandle, top: number, left: number] */;\n\n  +getScrollPosition: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [scrollLeft: number, scrollTop: number] */;\n\n  +getScrollSize: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [scrollWidth: number, scrollHeight: number] */;\n\n  +getInnerSize: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [width: number, height: number] */;\n\n  +getBorderWidth: (\n    shadowNode: mixed /* ShadowNode */,\n  ) => $ReadOnlyArray<number> /* [topWidth: number, rightWidth: number, bottomWidth: number, leftWidth: number] */;\n\n  +getTagName: (shadowNode: mixed /* ShadowNode */) => string;\n\n  +hasPointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => boolean;\n\n  +setPointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => void;\n\n  +releasePointerCapture: (\n    shadowNode: mixed /* ShadowNode */,\n    pointerId: number,\n  ) => void;\n\n  /**\n   * Legacy layout APIs\n   */\n\n  +measure: (shadowNode: mixed, callback: MeasureOnSuccessCallback) => void;\n\n  +measureInWindow: (\n    shadowNode: mixed,\n    callback: MeasureInWindowOnSuccessCallback,\n  ) => void;\n\n  +measureLayout: (\n    shadowNode: mixed,\n    relativeNode: mixed,\n    onFail: () => void,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n  ) => void;\n}\n\nconst RawNativeDOM = (TurboModuleRegistry.get<Spec>('NativeDOMCxx'): ?Spec);\n\n// This is the actual interface of this module, but the native module codegen\n// isn't expressive enough yet.\nexport interface RefinedSpec {\n  /**\n   * This is a React Native implementation of `Node.prototype.parentNode`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode).\n   *\n   * If a version of the given shadow node is present in the current revision of\n   * an active shadow tree, it returns the instance handle of its parent.\n   * Otherwise, it returns `null`.\n   */\n  +getParentNode: (shadowNode: ShadowNode) => ?InstanceHandle;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.childNodes`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes).\n   *\n   * If a version of the given shadow node is present in the current revision\n   * of an active shadow tree, it returns an array of instance handles of its\n   * children. Otherwise, it returns an empty array.\n   */\n  +getChildNodes: (shadowNode: ShadowNode) => $ReadOnlyArray<InstanceHandle>;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.isConnected`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected).\n   *\n   * Indicates whether a version of the given shadow node is present in the\n   * current revision of an active shadow tree.\n   */\n  +isConnected: (shadowNode: ShadowNode) => boolean;\n\n  /**\n   * This is a React Native implementation of `Node.prototype.compareDocumentPosition`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition).\n   *\n   * It uses the version of the shadow nodes that are present in the current\n   * revision of the shadow tree (if any). If any of the nodes is not present,\n   * it just indicates they are disconnected.\n   */\n  +compareDocumentPosition: (\n    shadowNode: ShadowNode,\n    otherShadowNode: ShadowNode,\n  ) => number;\n\n  /**\n   * This is a React Native implementation of `Element.prototype.textContent`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Element/textContent).\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree.\n   * If the version is present, is traverses all its children in DFS and\n   * concatenates all the text contents. Otherwise, it returns an empty string.\n   *\n   * This is also used to access the text content of text nodes, which does not\n   * need any traversal.\n   */\n  +getTextContent: (shadowNode: ShadowNode) => string;\n\n  /**\n   * This is a React Native implementation of `Element.prototype.getBoundingClientRect`\n   * (see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect).\n   *\n   * This is similar to `measureInWindow`, except it's explicitly synchronous\n   * (returns the result instead of passing it to a callback).\n   *\n   * It allows indicating whether to include transforms so it can also be used\n   * to implement methods like [`offsetWidth`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth)\n   * and [`offsetHeight`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight).\n   */\n  +getBoundingClientRect: (\n    shadowNode: ShadowNode,\n    includeTransform: boolean,\n  ) => $ReadOnly<\n    [\n      /* x: */ number,\n      /* y: */ number,\n      /* width: */ number,\n      /* height: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access the offset information for a shadow node, to\n   * implement these methods:\n   *   - `HTMLElement.prototype.offsetParent`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent.\n   *   - `HTMLElement.prototype.offsetTop`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetTop.\n   *   - `HTMLElement.prototype.offsetLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not\n   * displayed (because any of its ancestors or itself have 'display: none'),\n   * it returns `undefined`. Otherwise, it returns its parent (as all nodes in\n   * React Native are currently \"positioned\") and its offset relative to its\n   * parent.\n   */\n  +getOffset: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<\n    [\n      /* offsetParent: */ ?InstanceHandle,\n      /* top: */ number,\n      /* left: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access scroll information for a shadow node, to\n   * implement these methods:\n   *   - `Element.prototype.scrollLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft.\n   *   - `Element.prototype.scrollTop`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not displayed\n   * (because any of its ancestors or itself have 'display: none'), it returns\n   * `undefined`. Otherwise, it returns the scroll position.\n   */\n  +getScrollPosition: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* scrollLeft: */ number, /* scrollTop: */ number]>;\n\n  /**\n   *\n   * This is a method to access the scroll information of a shadow node, to\n   * implement these methods:\n   *   - `Element.prototype.scrollWidth`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth.\n   *   - `Element.prototype.scrollHeight`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present or is not displayed\n   * (because any of its ancestors or itself have 'display: none'), it returns\n   * `undefined`. Otherwise, it returns the scroll size.\n   */\n  +getScrollSize: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* scrollWidth: */ number, /* scrollHeight: */ number]>;\n\n  /**\n   * This is a method to access the inner size of a shadow node, to implement\n   * these methods:\n   *   - `Element.prototype.clientWidth`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth.\n   *   - `Element.prototype.clientHeight`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present, it is not\n   * displayed (because any of its ancestors or itself have 'display: none'), or\n   * it has an inline display, it returns `undefined`. Otherwise, it returns its\n   * inner size.\n   */\n  +getInnerSize: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<[/* width: */ number, /* height: */ number]>;\n\n  /**\n   * This is a method to access the border size of a shadow node, to implement\n   * these methods:\n   *   - `Element.prototype.clientLeft`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft.\n   *   - `Element.prototype.clientTop`: see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop.\n   *\n   * It uses the version of the shadow node that is present in the current\n   * revision of the shadow tree. If the node is not present, it is not\n   * displayed (because any of its ancestors or itself have 'display: none'), or\n   * it has an inline display, it returns `undefined`. Otherwise, it returns its\n   * border size.\n   */\n  +getBorderWidth: (\n    shadowNode: ShadowNode,\n  ) => $ReadOnly<\n    [\n      /* topWidth: */ number,\n      /* rightWidth: */ number,\n      /* bottomWidth: */ number,\n      /* leftWidth: */ number,\n    ],\n  >;\n\n  /**\n   * This is a method to access the normalized tag name of a shadow node, to\n   * implement `Element.prototype.tagName` (see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName).\n   */\n  +getTagName: (shadowNode: ShadowNode) => string;\n\n  /**\n   * Pointer Capture APIs\n   */\n\n  +hasPointerCapture: (shadowNode: ShadowNode, pointerId: number) => boolean;\n\n  +setPointerCapture: (shadowNode: ShadowNode, pointerId: number) => void;\n\n  +releasePointerCapture: (shadowNode: ShadowNode, pointerId: number) => void;\n\n  /**\n   * Legacy layout APIs\n   */\n\n  +measure: (\n    shadowNode: ShadowNode,\n    callback: MeasureOnSuccessCallback,\n  ) => void;\n\n  +measureInWindow: (\n    shadowNode: ShadowNode,\n    callback: MeasureInWindowOnSuccessCallback,\n  ) => void;\n\n  +measureLayout: (\n    shadowNode: ShadowNode,\n    relativeNode: ShadowNode,\n    onFail: () => void,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n  ) => void;\n}\n\nconst NativeDOM: RefinedSpec = {\n  getParentNode(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getParentNode(\n      shadowNode,\n    ): ?InstanceHandle);\n  },\n\n  getChildNodes(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getChildNodes(\n      shadowNode,\n    ): $ReadOnlyArray<InstanceHandle>);\n  },\n\n  isConnected(shadowNode) {\n    return nullthrows(RawNativeDOM).isConnected(shadowNode);\n  },\n\n  compareDocumentPosition(shadowNode, otherShadowNode) {\n    return nullthrows(RawNativeDOM).compareDocumentPosition(\n      shadowNode,\n      otherShadowNode,\n    );\n  },\n\n  getTextContent(shadowNode) {\n    return nullthrows(RawNativeDOM).getTextContent(shadowNode);\n  },\n\n  getBoundingClientRect(shadowNode, includeTransform: boolean) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getBoundingClientRect(\n      shadowNode,\n      includeTransform,\n    ): $ReadOnly<\n      [\n        /* x: */ number,\n        /* y: */ number,\n        /* width: */ number,\n        /* height: */ number,\n      ],\n    >);\n  },\n\n  getOffset(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getOffset(shadowNode): $ReadOnly<\n      [\n        /* offsetParent: */ ?InstanceHandle,\n        /* top: */ number,\n        /* left: */ number,\n      ],\n    >);\n  },\n\n  getScrollPosition(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getScrollPosition(shadowNode): $ReadOnly<\n      [/* scrollLeft: */ number, /* scrollTop: */ number],\n    >);\n  },\n\n  getScrollSize(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getScrollSize(shadowNode): $ReadOnly<\n      [/* scrollWidth: */ number, /* scrollHeight: */ number],\n    >);\n  },\n\n  getInnerSize(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getInnerSize(shadowNode): $ReadOnly<\n      [/* width: */ number, /* height: */ number],\n    >);\n  },\n\n  getBorderWidth(shadowNode) {\n    // $FlowExpectedError[incompatible-cast]\n    return (nullthrows(RawNativeDOM).getBorderWidth(shadowNode): $ReadOnly<\n      [\n        /* topWidth: */ number,\n        /* rightWidth: */ number,\n        /* bottomWidth: */ number,\n        /* leftWidth: */ number,\n      ],\n    >);\n  },\n\n  getTagName(shadowNode) {\n    return nullthrows(RawNativeDOM).getTagName(shadowNode);\n  },\n\n  hasPointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).hasPointerCapture(shadowNode, pointerId);\n  },\n\n  setPointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).setPointerCapture(shadowNode, pointerId);\n  },\n\n  releasePointerCapture(shadowNode, pointerId) {\n    return nullthrows(RawNativeDOM).releasePointerCapture(\n      shadowNode,\n      pointerId,\n    );\n  },\n\n  /**\n   * Legacy layout APIs\n   */\n\n  measure(shadowNode, callback) {\n    return nullthrows(RawNativeDOM).measure(shadowNode, callback);\n  },\n\n  measureInWindow(shadowNode, callback) {\n    return nullthrows(RawNativeDOM).measureInWindow(shadowNode, callback);\n  },\n\n  measureLayout(shadowNode, relativeNode, onFail, onSuccess) {\n    return nullthrows(RawNativeDOM).measureLayout(\n      shadowNode,\n      relativeNode,\n      onFail,\n      onSuccess,\n    );\n  },\n};\n\nexport default NativeDOM;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\n\nimport {getChildNodes} from '../ReadOnlyNode';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `Traversal`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport function getElementSibling(\n  node: ReadOnlyNode,\n  direction: 'next' | 'previous',\n): ReadOnlyElement | null {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return null;\n  }\n\n  const childNodes = getChildNodes(parent);\n\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n\n  const increment = direction === 'next' ? 1 : -1;\n\n  let position = startPosition + increment;\n\n  if (ReadOnlyElementClass == null) {\n    // We initialize this lazily to avoid a require cycle.\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n\n  while (\n    childNodes[position] != null &&\n    !(childNodes[position] instanceof ReadOnlyElementClass)\n  ) {\n    position = position + increment;\n  }\n\n  return childNodes[position] ?? null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n/**\n * This definition is different from the current built-in type `$ArrayLike`\n * provided by Flow, in that this is an interface and that one is an object.\n *\n * The difference is important because, when using objects, Flow thinks\n * a `length` property would be copied over when using the spread operator,\n * which is incorrect.\n */\nexport interface ArrayLike<T> extends Iterable<T> {\n  // This property should've been read-only as well, but Flow doesn't handle\n  // read-only indexers correctly (thinks reads are writes and fails).\n  [indexer: number]: T;\n  +length: number;\n}\n\nexport function* createValueIterator<T>(arrayLike: ArrayLike<T>): Iterator<T> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield arrayLike[i];\n  }\n}\n\nexport function* createKeyIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<number> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield i;\n  }\n}\n\nexport function* createEntriesIterator<T>(\n  arrayLike: ArrayLike<T>,\n): Iterator<[number, T]> {\n  for (let i = 0; i < arrayLike.length; i++) {\n    yield [i, arrayLike[i]];\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {createValueIterator} from './ArrayLikeUtils';\n\n// IMPORTANT: The type definition for this module is defined in `HTMLCollection.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class HTMLCollection<T> implements Iterable<T>, ArrayLike<T> {\n  #length: number;\n\n  /**\n   * Use `createHTMLCollection` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        enumerable: true,\n        configurable: false,\n        writable: false,\n      });\n    }\n\n    this.#length = elements.length;\n  }\n\n  get length(): number {\n    return this.#length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this.#length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  /**\n   * @deprecated Unused in React Native.\n   */\n  namedItem(name: string): T | null {\n    return null;\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `HTMLCollection`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `HTMLCollection` lives in\n * `HTMLCollection.js.flow`, not here.\n */\nexport function createHTMLCollection<T>(\n  elements: $ReadOnlyArray<T>,\n): HTMLCollection<T> {\n  return new HTMLCollection(elements);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {ArrayLike} from './ArrayLikeUtils';\n\nimport {\n  createEntriesIterator,\n  createKeyIterator,\n  createValueIterator,\n} from './ArrayLikeUtils';\n\n// IMPORTANT: The Flow type definition for this module is defined in `NodeList.js.flow`\n// because Flow only supports indexers in classes in declaration files.\n\n// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\nexport default class NodeList<T> implements Iterable<T>, ArrayLike<T> {\n  #length: number;\n\n  /**\n   * Use `createNodeList` to create instances of this class.\n   *\n   * @private This is not defined in the declaration file, so users will not see\n   *          the signature of the constructor.\n   */\n  constructor(elements: $ReadOnlyArray<T>) {\n    for (let i = 0; i < elements.length; i++) {\n      Object.defineProperty(this, i, {\n        value: elements[i],\n        writable: false,\n      });\n    }\n    this.#length = elements.length;\n  }\n\n  get length(): number {\n    return this.#length;\n  }\n\n  item(index: number): T | null {\n    if (index < 0 || index >= this.#length) {\n      return null;\n    }\n\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n    return arrayLike[index];\n  }\n\n  entries(): Iterator<[number, T]> {\n    return createEntriesIterator(this);\n  }\n\n  forEach<ThisType>(\n    callbackFn: (value: T, index: number, array: NodeList<T>) => mixed,\n    thisArg?: ThisType,\n  ): void {\n    // assigning to the interface allows us to access the indexer property in a\n    // type-safe way.\n    // eslint-disable-next-line consistent-this\n    const arrayLike: ArrayLike<T> = this;\n\n    for (let index = 0; index < this.#length; index++) {\n      if (thisArg == null) {\n        callbackFn(arrayLike[index], index, this);\n      } else {\n        callbackFn.call(thisArg, arrayLike[index], index, this);\n      }\n    }\n  }\n\n  keys(): Iterator<number> {\n    return createKeyIterator(this);\n  }\n\n  values(): Iterator<T> {\n    return createValueIterator(this);\n  }\n\n  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n  [Symbol.iterator](): Iterator<T> {\n    return createValueIterator(this);\n  }\n}\n\n/**\n * This is an internal method to create instances of `NodeList`,\n * which avoids leaking its constructor to end users.\n * We can do that because the external definition of `NodeList` lives in\n * `NodeList.js.flow`, not here.\n */\nexport function createNodeList<T>(elements: $ReadOnlyArray<T>): NodeList<T> {\n  return new NodeList(elements);\n}\n"],"names":["_UIManager","_interopRequireDefault","require","_nullthrows","module","exports","reactTag","eventType","nullthrows","UIManager","sendAccessibilityEvent","getConstants","AccessibilityEventTypes","typeViewFocused","typeViewClicked","NativeComponentRegistry","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_codegenNativeCommands","WeakMap","codegenNativeCommands","supportedCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topEndEditing","topFocus","topKeyPress","topSubmitEditing","directEventTypes","topScroll","registrationName","validAttributes","maxFontSizeMultiplier","adjustsFontSizeToFit","minimumFontScale","autoFocus","placeholder","inlineImagePadding","contextMenuHidden","textShadowColor","process","maxLength","selectTextOnFocus","textShadowRadius","underlineColorAndroid","textDecorationLine","submitBehavior","textAlignVertical","fontStyle","textShadowOffset","selectionColor","selectionHandleColor","placeholderTextColor","importantForAutofill","lineHeight","textTransform","returnKeyType","keyboardType","multiline","color","autoComplete","numberOfLines","letterSpacing","returnKeyLabel","fontSize","onKeyPress","cursorColor","text","showSoftInputOnFocus","textAlign","autoCapitalize","autoCorrect","caretHidden","secureTextEntry","textBreakStrategy","onScroll","onContentSizeChange","disableFullscreenUI","includeFontPadding","fontWeight","fontFamily","allowFontScaling","onSelectionChange","mostRecentEventCount","inlineImageLeft","editable","fontVariant","borderBottomRightRadius","borderBottomColor","borderRadius","borderRightColor","borderColor","borderTopRightRadius","borderStyle","borderBottomLeftRadius","borderLeftColor","borderTopLeftRadius","borderTopColor","AndroidTextInputNativeComponent","_RCTTextInputViewConfig","assign","RCTTextInputViewConfig","SinglelineTextInputNativeComponent","_ViewConfigIgnore","topChange","topTouchCancel","topTouchEnd","topTouchMove","topSelectionChange","topContentSizeChange","topChangeSync","topKeyPressSync","dynamicTypeRamp","diff","lineBreakModeIOS","isHighlighted","writingDirection","textDecorationStyle","textDecorationColor","inputAccessoryViewID","enablesReturnKeyAutomatically","clearButtonMode","selection","scrollEnabled","textContentType","keyboardAppearance","passwordRules","spellCheck","clearTextOnFocus","lineBreakStrategyIOS","smartInsertDelete","ConditionallyIgnoredEventHandlers","onChange","onChangeSync","onKeyPressSync","_AndroidTextInputNativeComponent","_RCTSingelineTextInputNativeComponent","findNodeHandle","Platform","currentlyFocusedInputRef","inputs","Set","focusInput","textField","blurInput","currentlyFocusedInput","currentlyFocusedField","focusField","textFieldID","__DEV__","blurField","focusTextInput","_textField$currentPro","currentProps","OS","iOSTextInputCommands","focus","AndroidTextInputCommands","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","RawEventEmitter","EventEmitter","_ExceptionsManager","ReactFiberErrorDialog","showErrorDialog","_ref","error","componentStack","errorValue","Error","SyntheticError","isComponentError","_unused","handleException","BatchedBridge","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","_isNativeReflectConstruct","Boolean","prototype","valueOf","Reflect","construct","CustomEvent","_EventPolyfill","typeArg","options","_this","_classCallCheck2","o","bubbles","cancelable","composed","_getPrototypeOf2","_possibleConstructorReturn2","constructor","apply","detail","_inherits2","_createClass2","EventPolyfill","type","eventInitDict","this","scoped","isTrusted","timeStamp","Date","now","defaultPrevented","NONE","AT_TARGET","BUBBLING_PHASE","CAPTURING_PHASE","eventPhase","currentTarget","target","srcElement","key","value","_syntheticEvent","preventDefault","stopPropagation","Event","_ReactNativeStyleAttributes","topAccessibilityAction","onGestureHandlerEvent","DynamicallyInjectedByGestureHandler","onGestureHandlerStateChange","topScrollBeginDrag","topMessage","topLoadingFinish","topMomentumScrollEnd","topLoadingStart","topLoadingError","topMomentumScrollBegin","topScrollEndDrag","topLayout","validAttributesForNonEventProps","backgroundColor","transform","transformOrigin","experimental_backgroundImage","boxShadow","filter","experimental_mixBlendMode","isolation","opacity","elevation","shadowColor","zIndex","renderToHardwareTextureAndroid","testID","nativeID","accessibilityLabelledBy","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityCollection","accessibilityCollectionItem","accessibilityState","accessibilityActions","accessibilityValue","importantForAccessibility","role","rotation","scaleX","scaleY","translateX","translateY","accessibilityLiveRegion","width","minWidth","collapsable","collapsableChildren","maxWidth","height","minHeight","maxHeight","flex","flexGrow","rowGap","columnGap","gap","flexShrink","flexBasis","aspectRatio","flexDirection","flexWrap","alignSelf","alignItems","alignContent","justifyContent","overflow","display","margin","marginBlock","marginBlockEnd","marginBlockStart","marginBottom","marginEnd","marginHorizontal","marginInline","marginInlineEnd","marginInlineStart","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingBottom","paddingEnd","paddingHorizontal","paddingInline","paddingInlineEnd","paddingInlineStart","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","borderWidth","borderStartWidth","borderEndWidth","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","start","end","left","right","top","bottom","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","position","style","ReactNativeStyleAttributes","experimental_layoutConformance","PlatformBaseViewConfigAndroid","topSelect","topTouchStart","topPointerCancel","topPointerDown","topPointerEnter","skipBubbling","topPointerLeave","topPointerMove","topPointerUp","topPointerOut","topPointerOver","topClick","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onResponderGrant","onResponderReject","onResponderStart","onResponderEnd","onResponderRelease","onResponderMove","onResponderTerminate","onResponderTerminationRequest","onShouldBlockNativeResponder","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onClick","onClickCapture","onPointerEnter","onPointerEnterCapture","onPointerLeave","onPointerLeaveCapture","onPointerMove","onPointerMoveCapture","onPointerOut","onPointerOutCapture","onPointerOver","onPointerOverCapture","name","viewConfigProvider","getRuntimeConfig","invariant","getViewManagerConfig","hasNativeViewConfig","FallbackNativeComponent","props","displayName","runtimeConfigProvider","undefined","_getRuntimeConfig2","native","_getNativeComponentAttributes","ReactNativeViewConfigRegistry","StaticViewConfigValidator","_ViewConfig","_invariant","_getRuntimeConfig","viewConfig","_getNativeComponentAt","_createViewConfig","verify","getNativeComponentAttributes","createViewConfig","nativeViewConfig","staticViewConfig","validationOutput","validate","console","stringifyValidationResult","PlatformBaseViewConfig","BaseViewConfig","validationResult","differences","concat","_toConsumableArray2","map","difference","path","join","accumulateDifferences","length","nativeObject","staticObject","nativeKey","nativeValue","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","push","pop","Array","isArray","partialViewConfig","Commands","composeIndexers","_PlatformBaseViewConfig","maybeA","maybeB","object","ignoredViewConfigProps","_Platform","WeakSet","_TextInputState","_RendererProxy","_FabricUIManager","_ReactNativeAttributePayload","getFabricUIManager","fabricMeasure","measure","fabricMeasureInWindow","measureInWindow","fabricMeasureLayout","measureLayout","fabricGetBoundingClientRect","getBoundingClientRect","setNativeProps","noop","ReactFabricHostComponent","tag","internalInstanceHandle","__nativeTag","_viewConfig","__internalInstanceHandle","TextInputState","callback","node","getNodeFromInternalInstanceHandle","relativeToNativeNode","onSuccess","onFail","toStateNode","fromStateNode","rect","DOMRect","nativeProps","updatePayload","create","PublicInstanceClass","ReactNativeFeatureFlags","enableAccessToHostTreeInFabric","ReadOnlyTextClass","publicInstance","_internalInstanceHandle","RendererProxy","addProperties","prevProps","nextProps","diffProperties","_flattenStyle","_deepDiffer","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","obj","propKey","attributeConfig","nextValue","diffNestedProperty","prevArray","nextArray","minLength","clearNestedProperty","addNestedProperty","diffNestedArrayProperty","flattenStyle","clearProperties","ExceptionsManager","deepFreezeAndThrowOnMutationInDev","legacySendAccessibilityEvent","createAttributePayload","diffAttributePayloads","createPublicInstance","createPublicTextInstance","getNativeTagFromPublicInstance","getNodeFromPublicInstance","getInternalInstanceHandleFromPublicInstance","viewConfigs","viewConfigCallbacks","test","topLevelType","customBubblingEventTypes","customDirectEventTypes","processEventTypes","Map","result","styleLength","computedStyle","dispatchCommand","commandObj","forEach","command","ref","_len","arguments","args","_key","logListeners","one","two","maxDepthOrOptions","maxDepth","onDifferentFunctionsIgnored","len","ii","twoKey","unstable_setLogListeners","listeners","_ReadOnlyElement2","_ReadOnlyNode","_NativeDOM","_classPrivateFieldLooseKey2","_ReadOnlyElement","ReactNativeElement","writable","_classPrivateFieldLooseBase2","Math","round","includeTransform","getShadowNode","offset","NativeDOM","getOffset","offsetParentInstanceHandle","getPublicInstanceFromInternalInstanceHandle","ReadOnlyNode","ReadOnlyElement","_ReadOnlyNode2","_Traversal","ReadOnlyCharacterData","getElementSibling","shadowNode","getTextContent","data","count","TypeError","adjustedCount","slice","_DOMRect","_HTMLCollection","getChildElements","createHTMLCollection","getInnerSize","getBorderWidth","childElements","_instanceHandle$state","_props$id","instanceHandle","getInstanceHandle","stateNode","canonical","id","tagName","ELEMENT_NODE","getScrollSize","getScrollPosition","getTagName","pointerId","hasPointerCapture","setPointerCapture","releasePointerCapture","getChildNodes","childNode","_ref2","ReadOnlyElementClass","_NodeList","INSTANCE_HANDLE_KEY","childNodes","createNodeList","isConnected","_getNodeSiblingsAndPo","getNodeSiblingsAndPosition","_getNodeSiblingsAndPo2","_slicedToArray2","siblings","parentNode","_getPublicInstanceFro","parentInstanceHandle","getParentNode","_getNodeSiblingsAndPo3","_getNodeSiblingsAndPo4","otherNode","otherShadowNode","DOCUMENT_POSITION_DISCONNECTED","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","lastKnownParent","nextPossibleParent","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","Symbol","parent","indexOf","_ReadOnlyCharacterData","_ReadOnlyCharacterDat","ReadOnlyText","TurboModuleRegistry","RawNativeDOM","relativeNode","direction","_childNodes$position","startPosition","increment","arrayLike","elements","HTMLCollection","_ArrayLikeUtils","_length","enumerable","configurable","index","iterator","createValueIterator","NodeList","createEntriesIterator","callbackFn","thisArg","createKeyIterator"],"sourceRoot":""}