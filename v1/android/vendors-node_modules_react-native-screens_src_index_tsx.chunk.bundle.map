{"version":3,"file":"vendors-node_modules_react-native-screens_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-freeze/src/index.tsx","webpack:///./node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///./node_modules/react-native-screens/src/components/DebugContainer.tsx","webpack:///./node_modules/react-native-screens/src/components/FullWindowOverlay.tsx","webpack:///./node_modules/react-native-screens/src/components/Screen.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenContainer.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenContentWrapper.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenFooter.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStack.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStackHeaderConfig.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStackItem.tsx","webpack:///./node_modules/react-native-screens/src/components/SearchBar.tsx","webpack:///./node_modules/react-native-screens/src/components/helpers/DelayedFreeze.tsx","webpack:///./node_modules/react-native-screens/src/components/helpers/usePrevious.tsx","webpack:///./node_modules/react-native-screens/src/contexts.tsx","webpack:///./node_modules/react-native-screens/src/core.ts","webpack:///./node_modules/react-native-screens/src/fabric/FullWindowOverlayNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ModalScreenNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/NativeScreensModule.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenContainerNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenContentWrapperNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenFooterNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenNavigationContainerNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackHeaderConfigNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackHeaderSubviewNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/SearchBarNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/index.tsx","webpack:///./node_modules/react-native-screens/src/useTransitionProgress.tsx","webpack:///./node_modules/react-native-screens/src/utils.ts","webpack:///./node_modules/warn-once/index.js"],"sourcesContent":["import React, { Suspense, Fragment } from \"react\";\n\nconst infiniteThenable = { then() {} };\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  if (freeze) {\n    throw infiniteThenable;\n  }\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n","'use client';\n\nimport * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined,\n);\n","import * as React from 'react';\nimport { Platform, type ViewProps } from 'react-native';\n// @ts-expect-error importing private component\n// eslint-disable-next-line import/namespace, import/default, import/no-named-as-default, import/no-named-as-default-member\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport ScreenContentWrapper from './ScreenContentWrapper';\nimport { StackPresentationTypes } from '../types';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\n/**\n * This view must *not* be flattened.\n * See https://github.com/software-mansion/react-native-screens/pull/1825\n * for detailed explanation.\n */\nlet DebugContainer: React.ComponentType<ContainerProps> = props => {\n  return <ScreenContentWrapper {...props} />;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line react/display-name\n  DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (\n      Platform.OS === 'ios' &&\n      stackPresentation !== 'push' &&\n      stackPresentation !== 'formSheet'\n    ) {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <ScreenContentWrapper {...rest} />\n        </AppContainer>\n      );\n    }\n\n    return <ScreenContentWrapper {...rest} />;\n  };\n\n  DebugContainer.displayName = 'DebugContainer';\n}\n\nexport default DebugContainer;\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n  useWindowDimensions,\n} from 'react-native';\n\n// Native components\nimport FullWindowOverlayNativeComponent from '../fabric/FullWindowOverlayNativeComponent';\nconst NativeFullWindowOverlay: React.ComponentType<\n  PropsWithChildren<{\n    style: StyleProp<ViewStyle>;\n  }>\n> = FullWindowOverlayNativeComponent as any;\n\nfunction FullWindowOverlay(props: { children: ReactNode }) {\n  const { width, height } = useWindowDimensions();\n  if (Platform.OS !== 'ios') {\n    console.warn('Using FullWindowOverlay is only valid on iOS devices.');\n    return <View {...props} />;\n  }\n  return (\n    <NativeFullWindowOverlay\n      style={[StyleSheet.absoluteFill, { width, height }]}>\n      {props.children}\n    </NativeFullWindowOverlay>\n  );\n}\n\nexport default FullWindowOverlay;\n","'use client';\n\nimport React from 'react';\nimport { Animated, View, Platform } from 'react-native';\n\nimport TransitionProgressContext from '../TransitionProgressContext';\nimport DelayedFreeze from './helpers/DelayedFreeze';\nimport { ScreenProps } from '../types';\n\nimport {\n  freezeEnabled,\n  isNativePlatformSupported,\n  screensEnabled,\n} from '../core';\n\n// Native components\nimport ScreenNativeComponent, {\n  NativeProps as ScreenNativeComponentProps,\n} from '../fabric/ScreenNativeComponent';\nimport ModalScreenNativeComponent, {\n  NativeProps as ModalScreenNativeComponentProps,\n} from '../fabric/ModalScreenNativeComponent';\nimport { usePrevious } from './helpers/usePrevious';\n\ntype NativeProps = ScreenNativeComponentProps | ModalScreenNativeComponentProps;\nconst AnimatedNativeScreen = Animated.createAnimatedComponent(\n  ScreenNativeComponent,\n);\nconst AnimatedNativeModalScreen = Animated.createAnimatedComponent(\n  ModalScreenNativeComponent,\n);\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n  _viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\n// This value must be kept in sync with native side.\nconst SHEET_FIT_TO_CONTENTS = [-1];\nconst SHEET_COMPAT_LARGE = [1.0];\nconst SHEET_COMPAT_MEDIUM = [0.5];\nconst SHEET_COMPAT_ALL = [0.5, 1.0];\n\nconst SHEET_DIMMED_ALWAYS = -1;\n// const SHEET_DIMMED_NEVER = 9999;\n\nfunction assertDetentsArrayIsSorted(array: number[]) {\n  for (let i = 1; i < array.length; i++) {\n    if (array[i - 1] > array[i]) {\n      throw new Error(\n        '[RNScreens] The detent array is not sorted in ascending order!',\n      );\n    }\n  }\n}\n\n// These exist to transform old 'legacy' values used by the formsheet API to the new API shape.\n// We can get rid of it, once we get rid of support for legacy values: 'large', 'medium', 'all'.\nfunction resolveSheetAllowedDetents(\n  allowedDetentsCompat: ScreenProps['sheetAllowedDetents'],\n): number[] {\n  if (Array.isArray(allowedDetentsCompat)) {\n    if (Platform.OS === 'android' && allowedDetentsCompat.length > 3) {\n      if (__DEV__) {\n        console.warn(\n          '[RNScreens] Sheets API on Android do accept only up to 3 values. Any surplus value are ignored.',\n        );\n      }\n      allowedDetentsCompat = allowedDetentsCompat.slice(0, 3);\n    }\n    if (__DEV__) {\n      assertDetentsArrayIsSorted(allowedDetentsCompat);\n    }\n    return allowedDetentsCompat;\n  } else if (allowedDetentsCompat === 'fitToContents') {\n    return SHEET_FIT_TO_CONTENTS;\n  } else if (allowedDetentsCompat === 'large') {\n    return SHEET_COMPAT_LARGE;\n  } else if (allowedDetentsCompat === 'medium') {\n    return SHEET_COMPAT_MEDIUM;\n  } else if (allowedDetentsCompat === 'all') {\n    return SHEET_COMPAT_ALL;\n  } else {\n    // Safe default, only large detent is allowed.\n    return [1.0];\n  }\n}\n\nfunction resolveSheetLargestUndimmedDetent(\n  lud: ScreenProps['sheetLargestUndimmedDetentIndex'],\n  lastDetentIndex: number,\n): number {\n  if (typeof lud === 'number') {\n    if (!isIndexInClosedRange(lud, SHEET_DIMMED_ALWAYS, lastDetentIndex)) {\n      if (__DEV__) {\n        throw new Error(\n          \"[RNScreens] Provided value of 'sheetLargestUndimmedDetentIndex' prop is out of bounds of 'sheetAllowedDetents' array.\",\n        );\n      }\n      // Return default in production\n      return SHEET_DIMMED_ALWAYS;\n    }\n    return lud;\n  } else if (lud === 'last') {\n    return lastDetentIndex;\n  } else if (lud === 'none' || lud === 'all') {\n    return SHEET_DIMMED_ALWAYS;\n  } else if (lud === 'large') {\n    return 1;\n  } else if (lud === 'medium') {\n    return 0;\n  } else {\n    // Safe default, every detent is dimmed\n    return SHEET_DIMMED_ALWAYS;\n  }\n}\n\nfunction resolveSheetInitialDetentIndex(\n  index: ScreenProps['sheetInitialDetentIndex'],\n  lastDetentIndex: number,\n): number {\n  if (index === 'last') {\n    index = lastDetentIndex;\n  } else if (index == null) {\n    // Intentional check for undefined & null ^\n    index = 0;\n  }\n  if (!isIndexInClosedRange(index, 0, lastDetentIndex)) {\n    if (__DEV__) {\n      throw new Error(\n        \"[RNScreens] Provided value of 'sheetInitialDetentIndex' prop is out of bounds of 'sheetAllowedDetents' array.\",\n      );\n    }\n    // Return default in production\n    return 0;\n  }\n  return index;\n}\n\nfunction isIndexInClosedRange(\n  value: number,\n  lowerBound: number,\n  upperBound: number,\n): boolean {\n  return Number.isInteger(value) && value >= lowerBound && value <= upperBound;\n}\n\nexport const InnerScreen = React.forwardRef<View, ScreenProps>(\n  function InnerScreen(props, ref) {\n    const innerRef = React.useRef<ViewConfig | null>(null);\n    React.useImperativeHandle(ref, () => innerRef.current!, []);\n    const prevActivityState = usePrevious(props.activityState);\n\n    const setRef = (ref: ViewConfig) => {\n      innerRef.current = ref;\n      props.onComponentRef?.(ref);\n    };\n\n    const closing = React.useRef(new Animated.Value(0)).current;\n    const progress = React.useRef(new Animated.Value(0)).current;\n    const goingForward = React.useRef(new Animated.Value(0)).current;\n\n    const {\n      enabled = screensEnabled(),\n      freezeOnBlur = freezeEnabled(),\n      ...rest\n    } = props;\n\n    // To maintain default behavior of formSheet stack presentation style and to have reasonable\n    // defaults for new medium-detent iOS API we need to set defaults here\n    const {\n      // formSheet presentation related props\n      sheetAllowedDetents = [1.0],\n      sheetLargestUndimmedDetentIndex = SHEET_DIMMED_ALWAYS,\n      sheetGrabberVisible = false,\n      sheetCornerRadius = -1.0,\n      sheetExpandsWhenScrolledToEdge = true,\n      sheetElevation = 24,\n      sheetInitialDetentIndex = 0,\n      // Other\n      stackPresentation,\n      // Events for override\n      onAppear,\n      onDisappear,\n      onWillAppear,\n      onWillDisappear,\n    } = rest;\n\n    if (enabled && isNativePlatformSupported) {\n      const resolvedSheetAllowedDetents =\n        resolveSheetAllowedDetents(sheetAllowedDetents);\n      const resolvedSheetLargestUndimmedDetent =\n        resolveSheetLargestUndimmedDetent(\n          sheetLargestUndimmedDetentIndex,\n          resolvedSheetAllowedDetents.length - 1,\n        );\n      const resolvedSheetInitialDetentIndex = resolveSheetInitialDetentIndex(\n        sheetInitialDetentIndex,\n        resolvedSheetAllowedDetents.length - 1,\n      );\n      // Due to how Yoga resolves layout, we need to have different components for modal nad non-modal screens\n      const AnimatedScreen =\n        Platform.OS === 'android' ||\n        stackPresentation === undefined ||\n        stackPresentation === 'push' ||\n        stackPresentation === 'containedModal' ||\n        stackPresentation === 'containedTransparentModal'\n          ? AnimatedNativeScreen\n          : AnimatedNativeModalScreen;\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        onGestureCancel,\n        style,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens',\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      if (\n        isNativeStack &&\n        prevActivityState !== undefined &&\n        activityState !== undefined\n      ) {\n        if (prevActivityState > activityState) {\n          throw new Error(\n            '[RNScreens] activityState cannot be decreased in NativeStack',\n          );\n        }\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          setRef(ref);\n        } else if (ref?._viewConfig?.validAttributes?.style) {\n          ref._viewConfig.validAttributes.style = {\n            ...ref._viewConfig.validAttributes.style,\n            display: false,\n          };\n          setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedScreen\n            {...props}\n            /**\n             * This messy override is to conform NativeProps used by codegen and\n             * our Public API. To see reasoning go to this PR:\n             * https://github.com/software-mansion/react-native-screens/pull/2423#discussion_r1810616995\n             */\n            onAppear={onAppear as NativeProps['onAppear']}\n            onDisappear={onDisappear as NativeProps['onDisappear']}\n            onWillAppear={onWillAppear as NativeProps['onWillAppear']}\n            onWillDisappear={onWillDisappear as NativeProps['onWillDisappear']}\n            onGestureCancel={\n              (onGestureCancel as NativeProps['onGestureCancel']) ??\n              (() => {\n                // for internal use\n              })\n            }\n            //\n            // Hierarchy of screens is handled on the native side and setting zIndex value causes this issue:\n            // https://github.com/software-mansion/react-native-screens/issues/2345\n            // With below change of zIndex, we force RN diffing mechanism to NOT include detaching and attaching mutation in one transaction.\n            // Detailed information can be found here https://github.com/software-mansion/react-native-screens/pull/2351\n            style={[style, { zIndex: undefined }]}\n            activityState={activityState}\n            sheetAllowedDetents={resolvedSheetAllowedDetents}\n            sheetLargestUndimmedDetent={resolvedSheetLargestUndimmedDetent}\n            sheetElevation={sheetElevation}\n            sheetGrabberVisible={sheetGrabberVisible}\n            sheetCornerRadius={sheetCornerRadius}\n            sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n            sheetInitialDetent={resolvedSheetInitialDetentIndex}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress,\n                          closing,\n                          goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true },\n                  )\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress,\n                  closing,\n                  goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={setRef}\n          {...props}\n        />\n      );\n    }\n  },\n);\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nexport const ScreenContext = React.createContext(InnerScreen);\n\nconst Screen = React.forwardRef<View, ScreenProps>((props, ref) => {\n  const ScreenWrapper = React.useContext(ScreenContext) || InnerScreen;\n\n  return <ScreenWrapper {...props} ref={ref} />;\n});\n\nScreen.displayName = 'Screen';\n\nexport default Screen;\n","'use client';\n\nimport { Platform, View } from 'react-native';\nimport React from 'react';\nimport { ScreenContainerProps } from '../types';\nimport { isNativePlatformSupported, screensEnabled } from '../core';\n\n// Native components\nimport ScreenContainerNativeComponent from '../fabric/ScreenContainerNativeComponent';\nimport ScreenNavigationContainerNativeComponent from '../fabric/ScreenNavigationContainerNativeComponent';\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = screensEnabled(), hasTwoStates, ...rest } = props;\n\n  if (enabled && isNativePlatformSupported) {\n    if (hasTwoStates) {\n      const ScreenNavigationContainer =\n        Platform.OS === 'ios'\n          ? ScreenNavigationContainerNativeComponent\n          : ScreenContainerNativeComponent;\n      return <ScreenNavigationContainer {...rest} />;\n    }\n    return <ScreenContainerNativeComponent {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nexport default ScreenContainer;\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport ScreenContentWrapperNativeComponent from '../fabric/ScreenContentWrapperNativeComponent';\n\nfunction ScreenContentWrapper(props: ViewProps) {\n  return <ScreenContentWrapperNativeComponent collapsable={false} {...props} />;\n}\n\nexport default ScreenContentWrapper;\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport ScreenFooterNativeComponent from '../fabric/ScreenFooterNativeComponent';\n\n/**\n * Unstable API\n */\nfunction ScreenFooter(props: ViewProps) {\n  return <ScreenFooterNativeComponent {...props} />;\n}\n\ntype FooterProps = {\n  children?: React.ReactNode;\n};\n\nexport function FooterComponent({ children }: FooterProps) {\n  return <ScreenFooter collapsable={false}>{children}</ScreenFooter>;\n}\n\nexport default ScreenFooter;\n","'use client';\n\nimport React, { PropsWithChildren } from 'react';\nimport {\n  GestureDetectorBridge,\n  ScreensRefsHolder,\n  GestureProviderProps,\n  GoBackGesture,\n  ScreenStackProps,\n} from '../types';\nimport { GHContext, RNSScreensRefContext } from '../contexts';\nimport { freezeEnabled } from '../core';\nimport DelayedFreeze from './helpers/DelayedFreeze';\nimport warnOnce from 'warn-once';\n\n// Native components\nimport ScreenStackNativeComponent, {\n  NativeProps,\n} from '../fabric/ScreenStackNativeComponent';\n\nfunction isFabric() {\n  return 'nativeFabricUIManager' in global;\n}\n\nconst assertGHProvider = (\n  ScreenGestureDetector: (\n    props: PropsWithChildren<GestureProviderProps>,\n  ) => React.JSX.Element,\n  goBackGesture: GoBackGesture | undefined,\n) => {\n  const isGestureDetectorProviderNotDetected =\n    ScreenGestureDetector.name !== 'GHWrapper' && goBackGesture !== undefined;\n\n  warnOnce(\n    isGestureDetectorProviderNotDetected,\n    'Cannot detect GestureDetectorProvider in a screen that uses `goBackGesture`. Make sure your navigator is wrapped in GestureDetectorProvider.',\n  );\n};\n\nconst assertCustomScreenTransitionsProps = (\n  screensRefs: ScreenStackProps['screensRefs'],\n  currentScreenId: ScreenStackProps['currentScreenId'],\n  goBackGesture: ScreenStackProps['goBackGesture'],\n) => {\n  const isGestureDetectorNotConfiguredProperly =\n    goBackGesture !== undefined &&\n    screensRefs === null &&\n    currentScreenId === undefined;\n\n  warnOnce(\n    isGestureDetectorNotConfiguredProperly,\n    'Custom Screen Transition require screensRefs and currentScreenId to be provided.',\n  );\n};\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const {\n    goBackGesture,\n    screensRefs: passedScreenRefs, // TODO: For compatibility with v5, remove once v5 is removed\n    currentScreenId,\n    transitionAnimation,\n    screenEdgeGesture,\n    onFinishTransitioning,\n    children,\n    ...rest\n  } = props;\n\n  const screensRefs = React.useRef<ScreensRefsHolder>(\n    passedScreenRefs?.current ?? {},\n  );\n  const ref = React.useRef(null);\n  const size = React.Children.count(children);\n  const ScreenGestureDetector = React.useContext(GHContext);\n  const gestureDetectorBridge = React.useRef<GestureDetectorBridge>({\n    stackUseEffectCallback: _stackRef => {\n      // this method will be overriden in GestureDetector\n    },\n  });\n\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const isFreezeEnabled =\n      descriptor?.options?.freezeOnBlur ?? freezeEnabled();\n\n    // On Fabric, when screen is frozen, animated and reanimated values are not updated\n    // due to component being unmounted. To avoid this, we don't freeze the previous screen there\n    const freezePreviousScreen = isFabric()\n      ? size - index > 2\n      : size - index > 1;\n\n    return (\n      <DelayedFreeze freeze={isFreezeEnabled && freezePreviousScreen}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  React.useEffect(() => {\n    gestureDetectorBridge.current.stackUseEffectCallback(ref);\n  });\n\n  assertGHProvider(ScreenGestureDetector, goBackGesture);\n\n  assertCustomScreenTransitionsProps(\n    screensRefs,\n    currentScreenId,\n    goBackGesture,\n  );\n\n  return (\n    <RNSScreensRefContext.Provider value={screensRefs}>\n      <ScreenGestureDetector\n        gestureDetectorBridge={gestureDetectorBridge}\n        goBackGesture={goBackGesture}\n        transitionAnimation={transitionAnimation}\n        screenEdgeGesture={screenEdgeGesture ?? false}\n        screensRefs={screensRefs}\n        currentScreenId={currentScreenId}>\n        <ScreenStackNativeComponent\n          {...rest}\n          /**\n           * This messy override is to conform NativeProps used by codegen and\n           * our Public API. To see reasoning go to this PR:\n           * https://github.com/software-mansion/react-native-screens/pull/2423#discussion_r1810616995\n           */\n          onFinishTransitioning={\n            onFinishTransitioning as NativeProps['onFinishTransitioning']\n          }\n          ref={ref}>\n          {childrenWithFreeze}\n        </ScreenStackNativeComponent>\n      </ScreenGestureDetector>\n    </RNSScreensRefContext.Provider>\n  );\n}\n\nexport default ScreenStack;\n","'use client';\n\nimport React from 'react';\nimport {\n  HeaderSubviewTypes,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from '../types';\nimport {\n  Image,\n  ImageProps,\n  Platform,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\n// Native components\nimport ScreenStackHeaderConfigNativeComponent from '../fabric/ScreenStackHeaderConfigNativeComponent';\nimport ScreenStackHeaderSubviewNativeComponent from '../fabric/ScreenStackHeaderSubviewNativeComponent';\n\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = ScreenStackHeaderSubviewNativeComponent as any;\n\nexport const ScreenStackHeaderConfig = React.forwardRef<\n  View,\n  ScreenStackHeaderConfigProps\n>((props, ref) => (\n  <ScreenStackHeaderConfigNativeComponent\n    {...props}\n    ref={ref}\n    style={styles.headerConfig}\n    pointerEvents=\"box-none\"\n  />\n));\n\nScreenStackHeaderConfig.displayName = 'ScreenStackHeaderConfig';\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps,\n): JSX.Element => (\n  <ScreenStackHeaderSubview type=\"back\" style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreenStackHeaderSubview>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>,\n): JSX.Element => {\n  const { style, ...rest } = props;\n\n  return (\n    <ScreenStackHeaderSubview\n      {...rest}\n      type=\"right\"\n      style={[styles.headerSubview, style]}\n    />\n  );\n};\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>,\n): JSX.Element => {\n  const { style, ...rest } = props;\n\n  return (\n    <ScreenStackHeaderSubview\n      {...rest}\n      type=\"left\"\n      style={[styles.headerSubview, style]}\n    />\n  );\n};\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>,\n): JSX.Element => {\n  const { style, ...rest } = props;\n\n  return (\n    <ScreenStackHeaderSubview\n      {...rest}\n      type=\"center\"\n      style={[styles.headerSubviewCenter, style]}\n    />\n  );\n};\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>,\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  headerSubviewCenter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 1,\n  },\n  headerConfig: {\n    position: 'absolute',\n    top: '-100%',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // We only want to center align the subviews on iOS.\n    // See https://github.com/software-mansion/react-native-screens/pull/2456\n    alignItems: Platform.OS === 'ios' ? 'center' : undefined,\n  },\n});\n","import * as React from 'react';\nimport {\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  type ViewStyle,\n  View,\n} from 'react-native';\nimport warnOnce from 'warn-once';\n\nimport DebugContainer from './DebugContainer';\nimport { ScreenProps, ScreenStackHeaderConfigProps } from '../types';\nimport { ScreenStackHeaderConfig } from './ScreenStackHeaderConfig';\nimport Screen from './Screen';\nimport ScreenStack from './ScreenStack';\nimport { RNSScreensRefContext } from '../contexts';\nimport { FooterComponent } from './ScreenFooter';\n\ntype Props = Omit<\n  ScreenProps,\n  'enabled' | 'isNativeStack' | 'hasLargeHeader'\n> & {\n  screenId: string;\n  headerConfig?: ScreenStackHeaderConfigProps;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nfunction ScreenStackItem(\n  {\n    children,\n    headerConfig,\n    activityState,\n    stackPresentation,\n    contentStyle,\n    style,\n    screenId,\n    // eslint-disable-next-line camelcase\n    unstable_sheetFooter,\n    ...rest\n  }: Props,\n  ref: React.ForwardedRef<View>,\n) {\n  const currentScreenRef = React.useRef<View | null>(null);\n  const screenRefs = React.useContext(RNSScreensRefContext);\n\n  React.useImperativeHandle(ref, () => currentScreenRef.current!);\n\n  const isHeaderInModal =\n    Platform.OS === 'android'\n      ? false\n      : stackPresentation !== 'push' && headerConfig?.hidden === false;\n\n  const headerHiddenPreviousRef = React.useRef(headerConfig?.hidden);\n\n  React.useEffect(() => {\n    warnOnce(\n      Platform.OS !== 'android' &&\n        stackPresentation !== 'push' &&\n        headerHiddenPreviousRef.current !== headerConfig?.hidden,\n      `Dynamically changing header's visibility in modals will result in remounting the screen and losing all local state.`,\n    );\n\n    headerHiddenPreviousRef.current = headerConfig?.hidden;\n  }, [headerConfig?.hidden, stackPresentation]);\n\n  const content = (\n    <>\n      <DebugContainer\n        style={[\n          stackPresentation === 'formSheet'\n            ? Platform.OS === 'ios'\n              ? styles.absolute\n              : null\n            : styles.container,\n          contentStyle,\n        ]}\n        stackPresentation={stackPresentation ?? 'push'}>\n        {children}\n      </DebugContainer>\n      {/**\n       * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n       * We don't render it conditionally based on visibility to make it possible to dynamically render a custom `header`\n       * Otherwise dynamically rendering a custom `header` leaves the native header visible\n       *\n       * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n       *\n       * HeaderConfig must not be first child of a Screen.\n       * See https://github.com/software-mansion/react-native-screens/pull/1825\n       * for detailed explanation.\n       */}\n      <ScreenStackHeaderConfig {...headerConfig} />\n      {/* eslint-disable-next-line camelcase */}\n      {stackPresentation === 'formSheet' && unstable_sheetFooter && (\n        <FooterComponent>{unstable_sheetFooter()}</FooterComponent>\n      )}\n    </>\n  );\n\n  // We take backgroundColor from contentStyle and apply it on Screen.\n  // This allows to workaround one issue with truncated\n  // content with formSheet presentation.\n  let internalScreenStyle;\n\n  if (stackPresentation === 'formSheet' && contentStyle) {\n    const flattenContentStyles = StyleSheet.flatten(contentStyle);\n    internalScreenStyle = {\n      backgroundColor: flattenContentStyles?.backgroundColor,\n    };\n  }\n\n  return (\n    <Screen\n      ref={node => {\n        currentScreenRef.current = node;\n\n        if (screenRefs === null) {\n          console.warn(\n            'Looks like RNSScreensRefContext is missing. Make sure the ScreenStack component is wrapped in it',\n          );\n          return;\n        }\n\n        const currentRefs = screenRefs.current;\n\n        if (node === null) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete currentRefs[screenId];\n        } else {\n          currentRefs[screenId] = { current: node };\n        }\n      }}\n      enabled\n      isNativeStack\n      activityState={activityState}\n      stackPresentation={stackPresentation}\n      hasLargeHeader={headerConfig?.largeTitle ?? false}\n      style={[style, internalScreenStyle]}\n      {...rest}>\n      {isHeaderInModal ? (\n        <ScreenStack style={styles.container}>\n          <Screen\n            enabled\n            isNativeStack\n            activityState={activityState}\n            hasLargeHeader={headerConfig?.largeTitle ?? false}\n            style={StyleSheet.absoluteFill}>\n            {content}\n          </Screen>\n        </ScreenStack>\n      ) : (\n        content\n      )}\n    </Screen>\n  );\n}\n\nexport default React.forwardRef(ScreenStackItem);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0,\n  },\n});\n","'use client';\n\nimport React from 'react';\nimport { SearchBarCommands, SearchBarProps } from '../types';\nimport { isSearchBarAvailableForCurrentPlatform } from '../utils';\nimport { View } from 'react-native';\n\n// Native components\nimport SearchBarNativeComponent, {\n  Commands as SearchBarNativeCommands,\n  NativeProps as SearchBarNativeProps,\n  SearchBarEvent,\n  SearchButtonPressedEvent,\n  ChangeTextEvent,\n} from '../fabric/SearchBarNativeComponent';\nimport { DirectEventHandler } from 'react-native/Libraries/Types/CodegenTypes';\n\nconst NativeSearchBar: React.ComponentType<\n  SearchBarNativeProps & { ref?: React.RefObject<SearchBarCommands> }\n> &\n  typeof NativeSearchBarCommands =\n  SearchBarNativeComponent as unknown as React.ComponentType<SearchBarNativeProps> &\n    SearchBarCommandsType;\nconst NativeSearchBarCommands: SearchBarCommandsType =\n  SearchBarNativeCommands as SearchBarCommandsType;\n\ntype NativeSearchBarRef = React.ElementRef<typeof NativeSearchBar>;\n\ntype SearchBarCommandsType = {\n  blur: (viewRef: NativeSearchBarRef) => void;\n  focus: (viewRef: NativeSearchBarRef) => void;\n  clearText: (viewRef: NativeSearchBarRef) => void;\n  toggleCancelButton: (viewRef: NativeSearchBarRef, flag: boolean) => void;\n  setText: (viewRef: NativeSearchBarRef, text: string) => void;\n  cancelSearch: (viewRef: NativeSearchBarRef) => void;\n};\n\nfunction SearchBar(props: SearchBarProps, ref: React.Ref<SearchBarCommands>) {\n  const searchBarRef = React.useRef<SearchBarCommands | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    blur: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.blur(ref));\n    },\n    focus: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.focus(ref));\n    },\n    toggleCancelButton: (flag: boolean) => {\n      _callMethodWithRef(ref =>\n        NativeSearchBarCommands.toggleCancelButton(ref, flag),\n      );\n    },\n    clearText: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.clearText(ref));\n    },\n    setText: (text: string) => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.setText(ref, text));\n    },\n    cancelSearch: () => {\n      _callMethodWithRef(ref => NativeSearchBarCommands.cancelSearch(ref));\n    },\n  }));\n\n  const _callMethodWithRef = React.useCallback(\n    (method: (ref: SearchBarCommands) => void) => {\n      const ref = searchBarRef.current;\n      if (ref) {\n        method(ref);\n      } else {\n        console.warn(\n          'Reference to native search bar component has not been updated yet',\n        );\n      }\n    },\n    [searchBarRef],\n  );\n\n  if (!isSearchBarAvailableForCurrentPlatform) {\n    console.warn(\n      'Importing SearchBar is only valid on iOS and Android devices.',\n    );\n    return View as unknown as React.ReactNode;\n  }\n\n  return (\n    <NativeSearchBar\n      ref={searchBarRef}\n      {...props}\n      onSearchFocus={props.onFocus as DirectEventHandler<SearchBarEvent>}\n      onSearchBlur={props.onBlur as DirectEventHandler<SearchBarEvent>}\n      onSearchButtonPress={\n        props.onSearchButtonPress as DirectEventHandler<SearchButtonPressedEvent>\n      }\n      onCancelButtonPress={\n        props.onCancelButtonPress as DirectEventHandler<SearchBarEvent>\n      }\n      onChangeText={props.onChangeText as DirectEventHandler<ChangeTextEvent>}\n    />\n  );\n}\n\nexport default React.forwardRef<SearchBarCommands, SearchBarProps>(SearchBar);\n","import React from 'react';\nimport { Freeze } from 'react-freeze';\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  React.useEffect(() => {\n    const id = setImmediate(() => {\n      setFreezeState(freeze);\n    });\n    return () => {\n      clearImmediate(id);\n    };\n  }, [freeze]);\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nexport default DelayedFreeze;\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(state: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n}\n","import React, { PropsWithChildren } from 'react';\nimport { GestureProviderProps, ScreensRefsHolder } from './types';\n\nexport const GHContext = React.createContext(\n  (props: PropsWithChildren<GestureProviderProps>) => <>{props.children}</>,\n);\n\nexport const RNSScreensRefContext =\n  React.createContext<React.MutableRefObject<ScreensRefsHolder> | null>(null);\n","'use client';\n\nimport { Platform, UIManager } from 'react-native';\n\nexport const isNativePlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isNativePlatformSupported;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`,\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nexport function enableFreeze(shouldEnableReactFreeze = true) {\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport function freezeEnabled() {\n  return ENABLE_FREEZE;\n}\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNSFullWindowOverlay', {});\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  DirectEventHandler,\n  WithDefault,\n  Int32,\n  Float,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ScreenEvent = Readonly<{}>;\n\ntype ScreenDismissedEvent = Readonly<{\n  dismissCount: Int32;\n}>;\n\ntype TransitionProgressEvent = Readonly<{\n  progress: Double;\n  closing: Int32;\n  goingForward: Int32;\n}>;\n\ntype HeaderHeightChangeEvent = Readonly<{\n  headerHeight: Double;\n}>;\n\ntype SheetDetentChangedEvent = Readonly<{\n  index: Int32;\n  isStable: boolean;\n}>;\n\ntype GestureResponseDistanceType = Readonly<{\n  start: Float;\n  end: Float;\n  top: Float;\n  bottom: Float;\n}>;\n\ntype StackPresentation =\n  | 'push'\n  | 'modal'\n  | 'transparentModal'\n  | 'fullScreenModal'\n  | 'formSheet'\n  | 'containedModal'\n  | 'containedTransparentModal';\n\ntype StackAnimation =\n  | 'default'\n  | 'flip'\n  | 'simple_push'\n  | 'none'\n  | 'fade'\n  | 'slide_from_right'\n  | 'slide_from_left'\n  | 'slide_from_bottom'\n  | 'fade_from_bottom'\n  | 'ios_from_right'\n  | 'ios_from_left';\n\ntype SwipeDirection = 'vertical' | 'horizontal';\n\ntype ReplaceAnimation = 'pop' | 'push';\n\nexport interface NativeProps extends ViewProps {\n  onAppear?: DirectEventHandler<ScreenEvent>;\n  onDisappear?: DirectEventHandler<ScreenEvent>;\n  onDismissed?: DirectEventHandler<ScreenDismissedEvent>;\n  onNativeDismissCancelled?: DirectEventHandler<ScreenDismissedEvent>;\n  onWillAppear?: DirectEventHandler<ScreenEvent>;\n  onWillDisappear?: DirectEventHandler<ScreenEvent>;\n  onHeaderHeightChange?: DirectEventHandler<HeaderHeightChangeEvent>;\n  onTransitionProgress?: DirectEventHandler<TransitionProgressEvent>;\n  onGestureCancel?: DirectEventHandler<ScreenEvent>;\n  onHeaderBackButtonClicked?: DirectEventHandler<ScreenEvent>;\n  onSheetDetentChanged?: DirectEventHandler<SheetDetentChangedEvent>;\n  sheetAllowedDetents?: number[];\n  sheetLargestUndimmedDetent?: WithDefault<Int32, -1>;\n  sheetGrabberVisible?: WithDefault<boolean, false>;\n  sheetCornerRadius?: WithDefault<Float, -1.0>;\n  sheetExpandsWhenScrolledToEdge?: WithDefault<boolean, false>;\n  sheetInitialDetent?: WithDefault<Int32, 0>;\n  sheetElevation?: WithDefault<Int32, 24>;\n  customAnimationOnSwipe?: boolean;\n  fullScreenSwipeEnabled?: boolean;\n  fullScreenSwipeShadowEnabled?: WithDefault<boolean, true>;\n  homeIndicatorHidden?: boolean;\n  preventNativeDismiss?: boolean;\n  gestureEnabled?: WithDefault<boolean, true>;\n  statusBarColor?: ColorValue;\n  statusBarHidden?: boolean;\n  screenOrientation?: string;\n  statusBarAnimation?: string;\n  statusBarStyle?: string;\n  statusBarTranslucent?: boolean;\n  gestureResponseDistance?: GestureResponseDistanceType;\n  stackPresentation?: WithDefault<StackPresentation, 'push'>;\n  stackAnimation?: WithDefault<StackAnimation, 'default'>;\n  transitionDuration?: WithDefault<Int32, 500>;\n  replaceAnimation?: WithDefault<ReplaceAnimation, 'pop'>;\n  swipeDirection?: WithDefault<SwipeDirection, 'horizontal'>;\n  hideKeyboardOnSwipe?: boolean;\n  activityState?: WithDefault<Float, -1.0>;\n  navigationBarColor?: ColorValue;\n  navigationBarTranslucent?: boolean;\n  navigationBarHidden?: boolean;\n  nativeBackButtonDismissalEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSModalScreen', {\n  interfaceOnly: true,\n});\n","'use client';\n\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport interface Spec extends TurboModule {}\n\nexport default TurboModuleRegistry.get<Spec>('RNSModule');\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreenContainer', {});\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\nexport interface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenContentWrapper',\n  {},\n);\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\nexport interface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreenFooter', {});\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  DirectEventHandler,\n  WithDefault,\n  Int32,\n  Float,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ScreenEvent = Readonly<{}>;\n\ntype ScreenDismissedEvent = Readonly<{\n  dismissCount: Int32;\n}>;\n\ntype TransitionProgressEvent = Readonly<{\n  progress: Double;\n  closing: Int32;\n  goingForward: Int32;\n}>;\n\ntype HeaderHeightChangeEvent = Readonly<{\n  headerHeight: Double;\n}>;\n\ntype SheetDetentChangedEvent = Readonly<{\n  index: Int32;\n  isStable: boolean;\n}>;\n\ntype GestureResponseDistanceType = Readonly<{\n  start: Float;\n  end: Float;\n  top: Float;\n  bottom: Float;\n}>;\n\ntype StackPresentation =\n  | 'push'\n  | 'modal'\n  | 'transparentModal'\n  | 'fullScreenModal'\n  | 'formSheet'\n  | 'containedModal'\n  | 'containedTransparentModal';\n\ntype StackAnimation =\n  | 'default'\n  | 'flip'\n  | 'simple_push'\n  | 'none'\n  | 'fade'\n  | 'slide_from_right'\n  | 'slide_from_left'\n  | 'slide_from_bottom'\n  | 'fade_from_bottom'\n  | 'ios_from_right'\n  | 'ios_from_left';\n\ntype SwipeDirection = 'vertical' | 'horizontal';\n\ntype ReplaceAnimation = 'pop' | 'push';\n\nexport interface NativeProps extends ViewProps {\n  onAppear?: DirectEventHandler<ScreenEvent>;\n  onDisappear?: DirectEventHandler<ScreenEvent>;\n  onDismissed?: DirectEventHandler<ScreenDismissedEvent>;\n  onNativeDismissCancelled?: DirectEventHandler<ScreenDismissedEvent>;\n  onWillAppear?: DirectEventHandler<ScreenEvent>;\n  onWillDisappear?: DirectEventHandler<ScreenEvent>;\n  onHeaderHeightChange?: DirectEventHandler<HeaderHeightChangeEvent>;\n  onTransitionProgress?: DirectEventHandler<TransitionProgressEvent>;\n  onGestureCancel?: DirectEventHandler<ScreenEvent>;\n  onHeaderBackButtonClicked?: DirectEventHandler<ScreenEvent>;\n  onSheetDetentChanged?: DirectEventHandler<SheetDetentChangedEvent>;\n  sheetAllowedDetents?: number[];\n  sheetLargestUndimmedDetent?: WithDefault<Int32, -1>;\n  sheetGrabberVisible?: WithDefault<boolean, false>;\n  sheetCornerRadius?: WithDefault<Float, -1.0>;\n  sheetExpandsWhenScrolledToEdge?: WithDefault<boolean, false>;\n  sheetInitialDetent?: WithDefault<Int32, 0>;\n  sheetElevation?: WithDefault<Int32, 24>;\n  customAnimationOnSwipe?: boolean;\n  fullScreenSwipeEnabled?: boolean;\n  fullScreenSwipeShadowEnabled?: WithDefault<boolean, true>;\n  homeIndicatorHidden?: boolean;\n  preventNativeDismiss?: boolean;\n  gestureEnabled?: WithDefault<boolean, true>;\n  statusBarColor?: ColorValue;\n  statusBarHidden?: boolean;\n  screenOrientation?: string;\n  statusBarAnimation?: string;\n  statusBarStyle?: string;\n  statusBarTranslucent?: boolean;\n  gestureResponseDistance?: GestureResponseDistanceType;\n  stackPresentation?: WithDefault<StackPresentation, 'push'>;\n  stackAnimation?: WithDefault<StackAnimation, 'default'>;\n  transitionDuration?: WithDefault<Int32, 500>;\n  replaceAnimation?: WithDefault<ReplaceAnimation, 'pop'>;\n  swipeDirection?: WithDefault<SwipeDirection, 'horizontal'>;\n  hideKeyboardOnSwipe?: boolean;\n  activityState?: WithDefault<Float, -1.0>;\n  navigationBarColor?: ColorValue;\n  navigationBarTranslucent?: boolean;\n  navigationBarHidden?: boolean;\n  nativeBackButtonDismissalEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreen', {\n  interfaceOnly: true,\n});\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenNavigationContainer',\n  {},\n);\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  Int32,\n  WithDefault,\n  DirectEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\ntype DirectionType = 'rtl' | 'ltr';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnAttachedEvent = Readonly<{}>;\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnDetachedEvent = Readonly<{}>;\n\ntype BackButtonDisplayMode = 'minimal' | 'default' | 'generic';\n\ntype BlurEffect =\n  | 'none'\n  | 'extraLight'\n  | 'light'\n  | 'dark'\n  | 'regular'\n  | 'prominent'\n  | 'systemUltraThinMaterial'\n  | 'systemThinMaterial'\n  | 'systemMaterial'\n  | 'systemThickMaterial'\n  | 'systemChromeMaterial'\n  | 'systemUltraThinMaterialLight'\n  | 'systemThinMaterialLight'\n  | 'systemMaterialLight'\n  | 'systemThickMaterialLight'\n  | 'systemChromeMaterialLight'\n  | 'systemUltraThinMaterialDark'\n  | 'systemThinMaterialDark'\n  | 'systemMaterialDark'\n  | 'systemThickMaterialDark'\n  | 'systemChromeMaterialDark';\n\nexport interface NativeProps extends ViewProps {\n  onAttached?: DirectEventHandler<OnAttachedEvent>;\n  onDetached?: DirectEventHandler<OnDetachedEvent>;\n  backgroundColor?: ColorValue;\n  backTitle?: string;\n  backTitleFontFamily?: string;\n  backTitleFontSize?: Int32;\n  backTitleVisible?: WithDefault<boolean, 'true'>;\n  color?: ColorValue;\n  direction?: WithDefault<DirectionType, 'ltr'>;\n  hidden?: boolean;\n  hideShadow?: boolean;\n  largeTitle?: boolean;\n  largeTitleFontFamily?: string;\n  largeTitleFontSize?: Int32;\n  largeTitleFontWeight?: string;\n  largeTitleBackgroundColor?: ColorValue;\n  largeTitleHideShadow?: boolean;\n  largeTitleColor?: ColorValue;\n  translucent?: boolean;\n  title?: string;\n  titleFontFamily?: string;\n  titleFontSize?: Int32;\n  titleFontWeight?: string;\n  titleColor?: ColorValue;\n  disableBackButtonMenu?: boolean;\n  backButtonDisplayMode?: WithDefault<BackButtonDisplayMode, 'default'>;\n  hideBackButton?: boolean;\n  backButtonInCustomView?: boolean;\n  blurEffect?: WithDefault<BlurEffect, 'none'>;\n  // TODO: implement this props on iOS\n  topInsetEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenStackHeaderConfig',\n  {\n    interfaceOnly: true,\n  },\n);\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\nimport type { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport type HeaderSubviewTypes =\n  | 'back'\n  | 'right'\n  | 'left'\n  | 'title'\n  | 'center'\n  | 'searchBar';\n\nexport interface NativeProps extends ViewProps {\n  type?: WithDefault<HeaderSubviewTypes, 'left'>;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenStackHeaderSubview',\n  {\n    interfaceOnly: true,\n  },\n);\n","'use client';\n\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\nimport type { DirectEventHandler } from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype FinishTransitioningEvent = Readonly<{}>;\n\nexport interface NativeProps extends ViewProps {\n  onFinishTransitioning?: DirectEventHandler<FinishTransitioningEvent>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreenStack', {});\n","'use client';\n\n/* eslint-disable */\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue, HostComponent } from 'react-native';\nimport type {\n  WithDefault,\n  DirectEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\n\nexport type SearchBarEvent = Readonly<{}>;\n\nexport type SearchButtonPressedEvent = Readonly<{\n  text?: string;\n}>;\n\nexport type ChangeTextEvent = Readonly<{\n  text?: string;\n}>;\n\ntype SearchBarPlacement = 'automatic' | 'inline' | 'stacked';\n\ntype AutoCapitalizeType = 'none' | 'words' | 'sentences' | 'characters';\n\nexport interface NativeProps extends ViewProps {\n  onSearchFocus?: DirectEventHandler<SearchBarEvent> | null;\n  onSearchBlur?: DirectEventHandler<SearchBarEvent> | null;\n  onSearchButtonPress?: DirectEventHandler<SearchButtonPressedEvent> | null;\n  onCancelButtonPress?: DirectEventHandler<SearchBarEvent> | null;\n  onChangeText?: DirectEventHandler<ChangeTextEvent> | null;\n  hideWhenScrolling?: boolean;\n  autoCapitalize?: WithDefault<AutoCapitalizeType, 'none'>;\n  placeholder?: string;\n  placement?: WithDefault<SearchBarPlacement, 'stacked'>;\n  obscureBackground?: boolean;\n  hideNavigationBar?: boolean;\n  cancelButtonText?: string;\n  // TODO: implement these on iOS\n  barTintColor?: ColorValue;\n  tintColor?: ColorValue;\n  textColor?: ColorValue;\n\n  // Android only\n  disableBackButtonOverride?: boolean;\n  // TODO: consider creating enum here\n  inputType?: string;\n  onClose?: DirectEventHandler<SearchBarEvent> | null;\n  onOpen?: DirectEventHandler<SearchBarEvent> | null;\n  hintTextColor?: ColorValue;\n  headerIconColor?: ColorValue;\n  shouldShowHintSearchIcon?: WithDefault<boolean, true>;\n}\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  blur: (viewRef: React.ElementRef<ComponentType>) => void;\n  focus: (viewRef: React.ElementRef<ComponentType>) => void;\n  clearText: (viewRef: React.ElementRef<ComponentType>) => void;\n  toggleCancelButton: (\n    viewRef: React.ElementRef<ComponentType>,\n    flag: boolean,\n  ) => void;\n  setText: (viewRef: React.ElementRef<ComponentType>, text: string) => void;\n  cancelSearch: (viewRef: React.ElementRef<ComponentType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: [\n    'blur',\n    'focus',\n    'clearText',\n    'toggleCancelButton',\n    'setText',\n    'cancelSearch',\n  ],\n});\n\nexport default codegenNativeComponent<NativeProps>('RNSSearchBar', {});\n","// Side effects import declaration to ensure our TurboModule\n// is loaded.\nimport './fabric/NativeScreensModule';\n\nexport * from './types';\n\n/**\n * Core\n */\nexport {\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  freezeEnabled,\n} from './core';\n\n/**\n * RNS Components\n */\nexport {\n  default as Screen,\n  InnerScreen,\n  ScreenContext,\n} from './components/Screen';\n\nexport {\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderSubview,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderSearchBarView,\n} from './components/ScreenStackHeaderConfig';\n\nexport { default as SearchBar } from './components/SearchBar';\nexport { default as ScreenContainer } from './components/ScreenContainer';\nexport { default as ScreenStack } from './components/ScreenStack';\nexport { default as ScreenStackItem } from './components/ScreenStackItem';\nexport { default as FullWindowOverlay } from './components/FullWindowOverlay';\nexport { default as ScreenFooter } from './components/ScreenFooter';\nexport { default as ScreenContentWrapper } from './components/ScreenContentWrapper';\n\n/**\n * Utils\n */\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  compatibilityFlags,\n  executeNativeBackPress,\n} from './utils';\n\n/**\n * Hooks\n */\nexport { default as useTransitionProgress } from './useTransitionProgress';\n","import * as React from 'react';\n\nimport TransitionProgressContext from './TransitionProgressContext';\n\nexport default function useTransitionProgress() {\n  const progress = React.useContext(TransitionProgressContext);\n\n  if (progress === undefined) {\n    throw new Error(\n      \"Couldn't find values for transition progress. Are you inside a screen in Native Stack?\",\n    );\n  }\n\n  return progress;\n}\n","import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n\n/**\n * Exposes information useful for downstream navigation library implementers,\n * so they can keep reasonable backward compatibility, if desired.\n *\n * We don't mean for this object to only grow in number of fields, however at the same time\n * we won't be very hasty to reduce it. Expect gradual changes.\n */\nexport const compatibilityFlags = {\n  /**\n   * Because of a bug introduced in https://github.com/software-mansion/react-native-screens/pull/1646\n   * react-native-screens v3.21 changed how header's backTitle handles whitespace strings in https://github.com/software-mansion/react-native-screens/pull/1726\n   * To allow for backwards compatibility in @react-navigation/native-stack we need a way to check if this version or newer is used.\n   * See https://github.com/react-navigation/react-navigation/pull/11423 for more context.\n   */\n  isNewBackTitleImplementation: true,\n\n  /**\n   * With version 4.0.0 the header implementation has been changed. To allow for backward compat\n   * with native-stack@v6 we want to expose a way to check whether the new implementation\n   * is in use or not.\n   *\n   * See:\n   * * https://github.com/software-mansion/react-native-screens/pull/2325\n   * * https://github.com/react-navigation/react-navigation/pull/12125\n   */\n  usesHeaderFlexboxImplementation: true,\n};\n","const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n"],"names":["_ref2","freeze","children","_ref2$placeholder","placeholder","_jsxRuntime","jsx","_react","Suspense","fallback","Suspender","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","WeakMap","infiniteThenable","then","_ref","Fragment","value","exports","React","createContext","undefined","_interopRequireDefault","_ScreenContentWrapper","props","assign","_reactNative","_FullWindowOverlayNativeComponent","NativeFullWindowOverlay","FullWindowOverlayNativeComponent","_useWindowDimensions","useWindowDimensions","width","height","Platform","OS","console","warn","View","style","StyleSheet","absoluteFill","_objectWithoutProperties2","_TransitionProgressContext","_DelayedFreeze","_core","_ScreenNativeComponent","_ModalScreenNativeComponent","_usePrevious","_excluded","_excluded2","_excluded3","AnimatedNativeScreen","Animated","createAnimatedComponent","ScreenNativeComponent","AnimatedNativeModalScreen","ModalScreenNativeComponent","SHEET_FIT_TO_CONTENTS","SHEET_COMPAT_LARGE","SHEET_COMPAT_MEDIUM","SHEET_COMPAT_ALL","isIndexInClosedRange","lowerBound","upperBound","Number","isInteger","InnerScreen","forwardRef","ref","innerRef","useRef","useImperativeHandle","current","prevActivityState","usePrevious","activityState","setRef","onComponentRef","closing","Value","progress","goingForward","_props$enabled","enabled","screensEnabled","_props$freezeOnBlur","freezeOnBlur","freezeEnabled","rest","_rest$sheetAllowedDet","sheetAllowedDetents","_rest$sheetLargestUnd","sheetLargestUndimmedDetentIndex","_rest$sheetGrabberVis","sheetGrabberVisible","_rest$sheetCornerRadi","sheetCornerRadius","_rest$sheetExpandsWhe","sheetExpandsWhenScrolledToEdge","_rest$sheetElevation","sheetElevation","_rest$sheetInitialDet","sheetInitialDetentIndex","stackPresentation","onAppear","onDisappear","onWillAppear","onWillDisappear","isNativePlatformSupported","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","resolvedSheetAllowedDetents","allowedDetentsCompat","Array","isArray","length","slice","resolvedSheetLargestUndimmedDetent","lud","lastDetentIndex","resolvedSheetInitialDetentIndex","index","resolveSheetInitialDetentIndex","AnimatedScreen","active","isNativeStack","gestureResponseDistance","onGestureCancel","Error","zIndex","sheetLargestUndimmedDetent","sheetInitialDetent","start","end","top","bottom","_ref$viewConfig","_ref$_viewConfig","viewConfig","validAttributes","display","_viewConfig","onTransitionProgress","event","nativeEvent","useNativeDriver","Provider","ScreenContext","Screen","ScreenWrapper","useContext","displayName","_ScreenContainerNativeComponent","_ScreenNavigationContainerNativeComponent","hasTwoStates","ScreenNavigationContainer","ScreenNavigationContainerNativeComponent","ScreenContainerNativeComponent","_ScreenContentWrapperNativeComponent","collapsable","ScreenFooter","_ScreenFooterNativeComponent","_contexts","_warnOnce","_ScreenStackNativeComponent","_passedScreenRefs$cur","goBackGesture","passedScreenRefs","screensRefs","currentScreenId","transitionAnimation","screenEdgeGesture","onFinishTransitioning","size","Children","count","ScreenGestureDetector","GHContext","gestureDetectorBridge","stackUseEffectCallback","_stackRef","childrenWithFreeze","map","child","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","key","descriptor","descriptors","isFreezeEnabled","options","freezePreviousScreen","global","useEffect","isGestureDetectorProviderNotDetected","name","warnOnce","assertGHProvider","isGestureDetectorNotConfiguredProperly","assertCustomScreenTransitionsProps","RNSScreensRefContext","_ScreenStackHeaderConfigNativeComponent","_ScreenStackHeaderSubviewNativeComponent","ScreenStackHeaderSubview","ScreenStackHeaderSubviewNativeComponent","styles","headerConfig","pointerEvents","type","headerSubview","Image","resizeMode","fadeDuration","headerSubviewCenter","create","flexDirection","alignItems","justifyContent","flexShrink","position","_DebugContainer","_ScreenStackHeaderConfig","_Screen","_ScreenStack","_ScreenFooter","_headerConfig$largeTi","_headerConfig$largeTi2","contentStyle","screenId","unstable_sheetFooter","currentScreenRef","screenRefs","isHeaderInModal","hidden","headerHiddenPreviousRef","internalScreenStyle","content","jsxs","absolute","container","ScreenStackHeaderConfig","FooterComponent","flattenContentStyles","flatten","backgroundColor","node","currentRefs","hasLargeHeader","largeTitle","flex","_utils","_SearchBarNativeComponent","NativeSearchBar","SearchBarNativeComponent","NativeSearchBarCommands","SearchBarNativeCommands","searchBarRef","blur","_callMethodWithRef","focus","toggleCancelButton","flag","clearText","setText","text","cancelSearch","useCallback","method","isSearchBarAvailableForCurrentPlatform","onSearchFocus","onFocus","onSearchBlur","onBlur","onSearchButtonPress","onCancelButtonPress","onChangeText","_reactFreeze","_React$useState","useState","_React$useState2","_slicedToArray2","freezeState","setFreezeState","id","setImmediate","clearImmediate","Freeze","state","shouldEnableReactFreeze","arguments","ENABLE_FREEZE","shouldEnableScreens","ENABLE_SCREENS","UIManager","getViewManagerConfig","error","NativeComponentRegistry","__INTERNAL_VIEW_CONFIG","uiViewClassName","ConditionallyIgnoredEventHandlers","directEventTypes","topAppear","registrationName","topDisappear","topDismissed","topNativeDismissCancelled","topWillAppear","topWillDisappear","topHeaderHeightChange","topTransitionProgress","topGestureCancel","topHeaderBackButtonClicked","topSheetDetentChanged","customAnimationOnSwipe","fullScreenSwipeEnabled","fullScreenSwipeShadowEnabled","homeIndicatorHidden","preventNativeDismiss","gestureEnabled","statusBarColor","process","statusBarHidden","screenOrientation","statusBarAnimation","statusBarStyle","statusBarTranslucent","stackAnimation","transitionDuration","replaceAnimation","swipeDirection","hideKeyboardOnSwipe","navigationBarColor","navigationBarTranslucent","navigationBarHidden","nativeBackButtonDismissalEnabled","onDismissed","onNativeDismissCancelled","onHeaderHeightChange","onHeaderBackButtonClicked","onSheetDetentChanged","TurboModuleRegistry","topAttached","topDetached","backTitle","backTitleFontFamily","backTitleFontSize","backTitleVisible","color","direction","hideShadow","largeTitleFontFamily","largeTitleFontSize","largeTitleFontWeight","largeTitleBackgroundColor","largeTitleHideShadow","largeTitleColor","translucent","title","titleFontFamily","titleFontSize","titleFontWeight","titleColor","disableBackButtonMenu","backButtonDisplayMode","hideBackButton","backButtonInCustomView","blurEffect","topInsetEnabled","onAttached","onDetached","topFinishTransitioning","dispatchCommand","topSearchFocus","topSearchBlur","topSearchButtonPress","topCancelButtonPress","topChangeText","topClose","topOpen","hideWhenScrolling","autoCapitalize","placement","obscureBackground","hideNavigationBar","cancelButtonText","barTintColor","tintColor","textColor","disableBackButtonOverride","inputType","hintTextColor","headerIconColor","shouldShowHintSearchIcon","onClose","onOpen","_types","keys","forEach","prototype","_exportNames","enumerable","_SearchBar","_ScreenContainer","_ScreenStackItem","_FullWindowOverlay","_useTransitionProgress","TransitionProgressContext","BackHandler","exitApp","includes","isNewBackTitleImplementation","usesHeaderFlexboxImplementation","Set","module","condition"],"sourceRoot":""}